{"version":3,"sources":["request.js","login.js","register.js","dashboard_navbar.js","agent_actions.js","utility.js","request_edit_aluno.js","request_edit_servidor.js","request_edit_visitante.js","request_edit.js","request_remove.js","request_detail_aluno.js","request_detail_servidor.js","request_detail_visitante.js","request_detail.js","agent_waiting_request.js","agent_processed_request.js","agent_register_actions.js","agent_register_employee_servidor.js","agent_register_employee_servidor_visita.js","agent_register_employee_servidor_veiculo.js","agent_register_employee.js","agent_register_student_aluno.js","agent_register_student_aluno_visita.js","agent_register_student.js","agent_register_visitor_visitante.js","agent_register_visitor_visitante_veiculo.js","agent_register_visitor_visitante_visita.js","agent_register_visitor_empresa.js","agent_register_visitor.js","agent_register_request.js","change_password.js","notification.js","settings.js","agent_dashboard.js","manager_actions.js","request_approve.js","request_reject.js","manager_waiting_request.js","manager_processed_request.js","manager_dashboard.js","reset_password.js","index.js"],"names":["header","Headers","set","make_request","url","method","body","fetch","headers","credentials","mode","Login","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","authenticate","JSON","stringify","operation","siape","state","senha","then","res","status","setState","message","logged","onFail","json","onSuccess","catch","err","render","react_default","a","createElement","className","style","fontFamily","htmlFor","type","name","id","onChange","event","target","value","onClick","onRegister","onForgetPassword","inherits","Component","Register","componentDidMount","fetchDepartaments","data","departamentos","console","error","getDepartaments","map","departamento","key","id_departamento","sigla","nome","getUserTypes","tipo","i","sendCredentials","onBack","warning","e","objectSpread","email","ref","defaultValue","fk_id_departamento","DashboardNavbar","logout","onLogout","log","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","on_settings","AgentActions","waiting","processed","register","date_parse","date","tmp_dt","Date","year","getFullYear","toString","month","getMonth","day","getUTCDate","padStart","reduce","p","format_date","tmp","concat","deep_copy","source","result","keys","forEach","k","subobject","check_changed_fields","altered_values","_arr","_i","length","field","_arr2","_i2","subfield","RequestEditAluno","visita_aluno","original_data","make_input","object","update_state","send_to_server","scope","colSpan","data_inicio","data_fim","frequencia","horario_inicio","horario_fim","objetivo","aluno","matricula","rg","cpf","curso","semestre","RequestEditServidor","visita_servidor","servidor","veiculo_servidor","placa","modelo","cor","RequestEditVisitante","visita_visitante","visitante","empresa","cnpj","veiculo_visitante","RequestEdit","query","requisicao","id_visita","tipo_requisicao","edit_request","request_edit_aluno_RequestEditAluno","backAction","request_edit_servidor_RequestEditServidor","request_edit_visitante_RequestEditVisitante","RequestRemove","db_remove","print_data","print_message","print_prompt","RequestDetailAluno","RequestDetailServidor","telefone","RequestDetailVisitante","RequestDetail","show_request","request_detail_aluno_RequestDetailAluno","request_detail_servidor_RequestDetailServidor","request_detail_visitante_RequestDetailVisitante","AgentWaitingRequest","search","what","row","ind","__onRemove","current_action","selected_row","__onEdit","__onDetail","format_data","values","list","action_handler","request_edit_RequestEdit","request_remove_RequestRemove","request_detail_RequestDetail","request_id","AgentProcessedRequest","status_de_aprovacao","AgentRegisterActions","student","employee","visitor","AgentRegisterEmployeeServidor","initial_data","onInitialValues","save_data","onSave","replace","dt_nasc","readonly","servidor_siape","placeholder","onBlur","servidor_rg","readOnly","servidor_cpf","servidor_nome","servidor_email","onNext","AgentRegisterEmployeeServidorVisita","pernoite","AgentRegisterEmployeeServidorVeiculo","with_vehicle","visita_com_veiculo","change_state_vehicle_state","ro","checked","AgentRegisterEmployee","_this$state","menu_progress","communication_status","objectWithoutProperties","reset_state","delta_progress","val","inc_progress","dec_progress","restart_menu","agent_register_employee_servidor_AgentRegisterEmployeeServidor","backendAddr","agent_register_employee_servidor_veiculo_AgentRegisterEmployeeServidorVeiculo","agent_register_employee_servidor_visita_AgentRegisterEmployeeServidorVisita","AgentRegisterStudentAluno","remove_mark_sings","str","student_aluno","nw_data","estudante_matricula","estudante_rg","estudante_cpf","estudante_nome","estudante_email","estudante_curso","estudante_semestre","AgentRegisterStudentAlunoVisita","student_visit","AgentRegisterStudent","agent_register_student_aluno_AgentRegisterStudentAluno","agent_register_student_aluno_visita_AgentRegisterStudentAlunoVisita","AgentRegisterVisitorVisitante","isNumber","AgentRegisterVisitorVisitanteVeiculo","veiculo_modelo","AgentRegisterVisitorVisitanteVisita","visitante_visita","AgentRegisterVisitorEmpresa","autonomo","cep","change_state_company_state","AgentRegisterVisitor","agent_register_visitor_visitante_AgentRegisterVisitorVisitante","agent_register_visitor_visitante_veiculo_AgentRegisterVisitorVisitanteVeiculo","agent_register_visitor_empresa_AgentRegisterVisitorEmpresa","agent_register_visitor_visitante_visita_AgentRegisterVisitorVisitanteVisita","AgentRegisterRequest","render_body","agent_register_student_AgentRegisterStudent","agent_register_employee_AgentRegisterEmployee","agent_register_visitor_AgentRegisterVisitor","agent_register_actions_AgentRegisterActions","ChangePassword","old_password","new_password","confirm_password","message_class","Notification","receber_notificacao","notf","componentWillUnmount","Settings","change_password_ChangePassword","notification_Notification","AgentDashboard","agent_waiting_request_AgentWaitingRequest","agent_processed_request_AgentProcessedRequest","agent_register_request_AgentRegisterRequest","settings_Settings","dashboard_navbar_DashboardNavbar","agent_actions_AgentActions","user_info","userInfo","ManagerActions","RequestApprove","approve","requerente","RequestReject","reject","ManagerWaitingRequest","__onReject","__onApprove","__onDatail","request_approve_RequestApprove","request_reject_RequestReject","ManagerProcessedRequest","ManagerDashboard","manager_waiting_request_ManagerWaitingRequest","manager_processed_request_ManagerProcessedRequest","manager_actions_ManagerActions","ResetPassword","Main","app_state","0","1","login_Login","window","location","reload","backend_addr","register_Register","agent_dashboard_AgentDashboard","manager_dashboard_ManagerDashboard","reset_password_ResetPassword","ReactDOM","src_Main","document","getElementById"],"mappings":"2OAIMA,EAAS,IAAIC,QACnBD,EAAOE,IAAI,eAAgB,oBAK3B,IAAMC,EAAe,SAACC,EAAKC,EAAQC,GAE/B,OACIC,MAXS,wBAWQH,EAAK,CAClBI,QAASR,EACTS,YAAa,UACbJ,OAAQA,EACRK,KAAM,OACNJ,KAAMA,KCbLK,EAAb,SAAAC,GACI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAUVQ,aAAe,WACXlB,EACI,QACA,OACAmB,KAAKC,UAAU,CACXC,UAAW,QACXC,MAAOX,EAAKY,MAAMD,MAClBE,MAAOb,EAAKY,MAAMC,SAExBC,KAAK,SAACC,GACe,MAAfA,EAAIC,QACJhB,EAAKiB,SAAS,CACVC,QAAS,+BACTC,QAAQ,IAEZnB,EAAKD,MAAMqB,UACW,MAAfL,EAAIC,QACXD,EAAIM,OACCP,KAAM,WACHd,EAAKD,MAAMuB,cAEdC,MAAM,SAAAC,GACHxB,EAAKiB,SAAS,CAAEC,QAAS,gDAGtCK,MAAM,SAACC,GACNxB,EAAKiB,SAAS,CACVC,QAAS,iDACTC,QAAQ,IAEZnB,EAAKD,MAAMqB,YAzCApB,EA6CnByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,WAAY,YAAxB,WAGJL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,UACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLC,KAAK,QACLC,GAAG,QACHN,UAAU,eACVO,SAAU,SAAAC,GACNrC,EAAKiB,SAAS,CACVN,MAAO0B,EAAMC,OAAOC,aAOxCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,YAAf,UACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,WACLC,KAAK,WACLC,GAAG,WACHN,UAAU,eACVO,SAAU,SAAAC,GACNrC,EAAKiB,SAAS,CACVJ,MAAOwB,EAAMC,OAAOC,aAMxCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACZ7B,EAAKY,MAAMM,UAGpBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,UACIK,KAAK,SACLJ,UAAU,sCACVW,QAASxC,EAAKD,MAAM0C,YAHxB,aAOAf,EAAAC,EAAAC,cAAA,UACIK,KAAK,SACLJ,UAAU,oCACVW,QAASxC,EAAKO,cAHlB,UAOJmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,UACIK,KAAK,SACLJ,UAAU,yBACVW,QAASxC,EAAKD,MAAM2C,kBAHxB,wBAzGZ1C,EAAKY,MAAQ,CACTD,MAAO,GACPE,MAAO,GACPK,QAAS,GACTC,QAAQ,GANGnB,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAJ,EAAAC,GAAAD,EAAA,CAA2B+C,oBCDdC,EAAb,SAAA/C,GACI,SAAA+C,EAAY9C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,IACf7C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4C,GAAAvC,KAAAH,KAAMJ,KAiBV+C,kBAAoB,WAChB9C,EAAK+C,qBAnBU/C,EAsBnB+C,kBAAoB,WAChB1D,EACI,gBACA,OACFyB,KAAK,SAAAC,GACH,OAAOA,EAAIM,SACZP,KAAK,SAAAkC,GACJhD,EAAKiB,SAAS,CAAEgC,cAAeD,MAChCzB,MAAM,SAAAC,GACL0B,QAAQC,MAAM3B,MA/BHxB,EAmCnBoD,gBAAkB,WACd,OACIpD,EAAKY,MAAMqC,cAAcI,IAAI,SAAAC,GACzB,OAAQ5B,EAAAC,EAAAC,cAAA,UAAQ2B,IAAKD,EAAaE,gBAAiBjB,MAAOe,EAAaE,iBAClEF,EAAaG,MAAQ,MAAQH,EAAaI,SAvCxC1D,EA6CnB2D,aAAe,WAEX,MACI,CAAC,SAAU,WAAWN,IAAK,SAACO,EAAMC,GAAP,OAAanC,EAAAC,EAAAC,cAAA,UAAQ2B,IAAKM,EAAGtB,MAAOsB,GAAKD,MAhDzD5D,EAoDnB8D,gBAAkB,WACdzE,EACI,QACA,OACAmB,KAAKC,UAAUT,EAAKY,MAAMjB,cAC5BmB,KAAM,SAAAC,GACe,MAAfA,EAAIC,OACJhB,EAAKD,MAAMgE,SAEX/D,EAAKiB,SAAS,CAAC+C,QAAS,yBAC7BzC,MAAO,SAAAC,GACNxB,EAAKiB,SAAS,CAAC+C,QAAS,0BA/DbhE,EAmEnByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,WAAY,YAAxB,kCAEJL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,UACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLC,KAAK,QACLC,GAAG,QACHN,UAAU,eACVO,SACI,SAAA6B,GAAC,OAAIjE,EAAKiB,SAAS,CACftB,YAAYM,OAAAiE,EAAA,EAAAjE,CAAA,GACLD,EAAKY,MAAMjB,YADP,CACoBgB,MAAOsD,EAAE3B,OAAOC,cAO/Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,WACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLC,KAAK,QACLC,GAAG,QACHN,UAAU,eACVO,SACI,SAAA6B,GAAC,OAAIjE,EAAKiB,SAAS,CACftB,YAAYM,OAAAiE,EAAA,EAAAjE,CAAA,GACLD,EAAKY,MAAMjB,YADP,CACoBwE,MAAOF,EAAE3B,OAAOC,cAO/Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,QAAf,SACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLC,KAAK,OACLC,GAAG,OACHN,UAAU,eACVO,SACI,SAAA6B,GAAC,OAAIjE,EAAKiB,SAAS,CACftB,YAAYM,OAAAiE,EAAA,EAAAjE,CAAA,GACLD,EAAKY,MAAMjB,YADP,CACoB+D,KAAMO,EAAE3B,OAAOC,cAO9Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,UACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,WACLC,KAAK,QACLC,GAAG,QACHN,UAAU,eACVuC,IAAKpE,EAAKa,MACVuB,SACI,SAAA6B,GACIjE,EAAKiB,SAAS,CACVtB,YAAYM,OAAAiE,EAAA,EAAAjE,CAAA,GACLD,EAAKY,MAAMjB,YADP,CACoBkB,MAAOoD,EAAE3B,OAAOC,cAQnEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,QAAf,oBACAN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBACdO,SACI,SAAA6B,GAAC,OAAIjE,EAAKiB,SAAS,CACftB,YAAYM,OAAAiE,EAAA,EAAAjE,CAAA,GACLD,EAAKY,MAAMjB,YADP,CACoBiE,KAAMK,EAAE3B,OAAOC,YAItDb,EAAAC,EAAAC,cAAA,UAAQyC,cAAY,GAApB,kCACCrE,EAAK2D,iBAIdjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,gBAAf,iBACAN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBACdO,SACI,SAAA6B,GAAC,OAAIjE,EAAKiB,SAAS,CACftB,YAAYM,OAAAiE,EAAA,EAAAjE,CAAA,GACLD,EAAKY,MAAMjB,YADP,CACoB2E,mBAAoBL,EAAE3B,OAAOC,YAIpEb,EAAAC,EAAAC,cAAA,UAAQyC,cAAY,GAApB,6BACCrE,EAAKoD,oBAId1B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAe7B,EAAKY,MAAMoD,SAC3CtC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,4BACVW,QAAS,kBAAMxC,EAAKD,MAAMgE,WAF9B,UAKArC,EAAAC,EAAAC,cAAA,UACIC,UAAU,0BACVW,QAAS,WAAQxC,EAAK8D,oBAF1B,eAORpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aA7LvB7B,EAAKY,MAAQ,CACTqC,cAAe,GACfe,QAAS,KAETrE,YAAa,CACTe,UAAW,WACX4D,mBAAoB,KACpBZ,KAAM,KACN/C,MAAO,KACPwD,MAAO,KACPtD,MAAO,KACP+C,KAAM,OAbC5D,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA4C,EAAA/C,GAAA+C,EAAA,CAA8BD,aCAjB2B,EAAb,SAAAzE,GACI,SAAAyE,EAAYxE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IACdvE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,KAAMJ,KAOVyE,OAAS,WACLnF,EACI,QACA,OACAmB,KAAKC,UAAU,CAACC,UAAW,YAC7BI,KAAM,SAAAC,GACJf,EAAKD,MAAM0E,aAEdlD,MAAM,SAAAC,GACH0B,QAAQwB,IAAIlD,MAjBFxB,EAqBlByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACXH,EAAAC,EAAAC,cAAA,KACIC,UAAU,eACV8C,KAAK,UAFT,sBAKAjD,EAAAC,EAAAC,cAAA,UACIC,UAAU,iBACVI,KAAK,SACL2C,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBACXtD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BM,GAAG,0BACzCT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2B8C,KAAK,SAASxC,GAAG,iBAAiB8C,KAAK,SAASL,cAAY,WAAWM,gBAAc,OAAOH,gBAAc,SAAlJ,cAGArD,EAAAC,EAAAC,cAAA,UACIC,UAAU,iBACVI,KAAK,SACL2C,cAAY,WACZC,cAAY,+BACZC,gBAAc,8BACdC,gBAAc,QACdC,aAAW,qBACXtD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGpBH,EAAAC,EAAAC,cAAA,OACIC,UAAU,gBACVsD,kBAAgB,kBAEhBzD,EAAAC,EAAAC,cAAA,UACIC,UAAU,gBACVW,QAASxC,EAAKD,MAAMqF,aAFxB,cAMA1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEfH,EAAAC,EAAAC,cAAA,UACIC,UAAU,gBACVW,QAASxC,EAAKwE,QAFlB,cAnExBxE,EAAKY,MAAQ,GAGbsC,QAAQwB,IAAI3E,GALEC,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAsE,EAAAzE,GAAAyE,EAAA,CAAqC3B,aCDxByC,EAAb,SAAAvF,GACI,SAAAuF,EAAYtF,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkF,IACdrF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoF,GAAA/E,KAAAH,KAAMJ,KAMV0B,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,YACVoD,KAAK,QACLD,aAAW,iBAEXtD,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAASxC,EAAKD,MAAMuF,QAASzD,UAAU,mBAA7D,cACAH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAASxC,EAAKD,MAAMwF,UAAW1D,UAAU,mBAA/D,eACAH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAASxC,EAAKD,MAAMyF,SAAU3D,UAAU,mBAA9D,eAdR7B,EAAKY,MAAQ,GAFCZ,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAoF,EAAAvF,GAAAuF,EAAA,CAAkCzC,aCI5B6C,EAAa,SAACC,GAChB,IAAMC,EAAS,IAAIC,KAAKF,GAEpBG,EAAOF,EAAOG,cAAcC,WAC5BC,GAASL,EAAOM,WAAa,GAAGF,WAChCG,EAAMP,EAAOQ,aAAaJ,WAM9B,MAAO,CAJPF,EAAOA,EAAKO,SAAS,EAAG,KACxBJ,EAAQA,EAAMI,SAAS,EAAG,KAC1BF,EAAMA,EAAIE,SAAS,EAAG,MAEKC,OAAO,SAACC,EAAG3E,GAAJ,OAAU2E,EAAI,IAAM3E,KAOpD4E,EAAc,SAACb,GACjB,IAAMc,EAAM,IAAIZ,KAAKF,GAEjBG,EAAQW,EAAIV,cAAcC,WAC1BC,GAASQ,EAAIP,WAAa,GAAGF,WAC7BG,EAAQM,EAAIL,aAAaJ,WAM7B,OAJAF,EAAQA,EAAKO,SAAS,EAAG,KACzBJ,EAAQA,EAAMI,SAAS,EAAG,KAC1BF,EAAQA,EAAIE,SAAS,EAAG,KAExB,GAAAK,OAAUP,EAAV,KAAAO,OAAiBT,EAAjB,KAAAS,OAA0BZ,IAQxBa,EAAY,SAAZA,EAAaC,GACf,IAAKA,EAAQ,OAAO,KAEpB,IAAIC,EAAS,GAWb,OATA3G,OAAO4G,KAAKF,GAAQG,QAAS,SAAAC,GACzB,GAAI,kBAAoBJ,EAAOI,GAAG,CAC9B,IAAMC,EAAYN,EAAUC,EAAOI,IACnCH,EAAOG,GAAKC,OAEZJ,EAAOG,GAAKJ,EAAOI,KAIpBH,GAQLK,EAAuB,SAACN,EAAQrE,GAGlC,IAFA,IAAI4E,EAAiB,GADwBC,EAG3BlH,OAAO4G,KAAKF,GAA9BS,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAuC,CAAlC,IAAIE,EAAKH,EAAAC,GACV,GAAqB,MAAjBT,EAAOW,GAGX,IAJmC,IAAAC,EAIdtH,OAAO4G,KAAKF,EAAOW,IAAxCE,EAAA,EAAAA,EAAAD,EAAAF,OAAAG,IAAiD,CAA5C,IAAIC,EAAQF,EAAAC,GACTlF,EAAOgF,GAAOG,KAAcd,EAAOW,GAAOG,KACpCH,KAASJ,IACXA,EAAeI,GAAS,IAG5BJ,EAAeI,GAAOG,GAAYnF,EAAOgF,GAAOG,KAK5D,OAAOP,GC9EEQ,EAAb,SAAA5H,GACI,SAAA4H,EAAY3H,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuH,IACd1H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyH,GAAApH,KAAAH,KAAMJ,KAQV+C,kBAAoB,WAChB,GAAuB,MAAnB9C,EAAKD,MAAMiD,KAAe,CAC1B,IAAM2E,EAAe3H,EAAKD,MAAMiD,KAChChD,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB0H,IAClB3H,EAAK4H,cAAgBlB,EAAUiB,KAbrB3H,EAiBlB6H,WAAa,SAACC,EAAQR,EAAOrF,EAAMM,GAC/B,OAAOb,EAAAC,EAAAC,cAAA,SACHK,KAAMA,EACNJ,UAAU,eACVU,MAAOA,EACPH,SAAU,SAAA6B,GACN,IAAI8D,EAAe,GACnBA,EAAaD,GAAU9H,EAAKY,MAAMkH,GAClCC,EAAaD,GAAQR,GAASrD,EAAE3B,OAAOC,MAEvCvC,EAAKiB,SAAS8G,OA3BR/H,EAgClBgI,eAAiB,WACb,IAAIL,EAAeV,EAAqBjH,EAAK4H,cAAe5H,EAAKY,OAE7D,iBAAkB+G,IAClBA,EAAY,aAAZ,gBAAkD3H,EAAK4H,cAAL,8BAClD,UAAWD,IACXA,EAAY,MAAZ,SAAoC3H,EAAK4H,cAAL,gBAExCvI,EAAa,gBAAiB,QAASmB,KAAKC,UAAUkH,IACrD7G,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJhB,EAAKiB,SAAS,CAACC,QAAS,iCAExBlB,EAAKiB,SAAS,CAACC,QAAS,yGAG/BK,MAAM,SAAAC,GACHxB,EAAKiB,SAAS,CAACC,QAAS,yCAjDdlB,EAqDlByB,OAAS,WACL,OAAKzB,EAAKY,MAAM+G,aAEZ,YAAa3H,EAAKY,MAEdc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAMM,SACjBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BW,QAAUxC,EAAKD,MAAMgE,QAAtE,WAEJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAS3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,WAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,eAAgB,cAAe,OAAQpC,EAAWzF,EAAKY,MAAM+G,aAAaQ,gBAEpGzG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,qBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,eAAgB,WAAY,OAAQpC,EAAWzF,EAAKY,MAAM+G,aAAaS,aAEjG1G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,eAAgB,aAAc,OAAQ7H,EAAKY,MAAM+G,aAAaU,cAExF3G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,0BACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,eAAgB,iBAAkB,OAAQ7H,EAAKY,MAAM+G,aAAaW,kBAE5F5G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,eAAgB,cAAe,OAAQ7H,EAAKY,MAAM+G,aAAaY,eAEzF7G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,eAAgB,WAAY,OAAQ7H,EAAKY,MAAM+G,aAAaa,aAG1F9G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,UAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,QAAS,OAAQ,OAAQ7H,EAAKY,MAAM6H,MAAM/E,QAEpEhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,gBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,QAAS,YAAa,OAAQ7H,EAAKY,MAAM6H,MAAMC,aAEzEhH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,MACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,QAAS,KAAM,OAAQ7H,EAAKY,MAAM6H,MAAME,MAElEjH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,QAAS,MAAO,OAAQ7H,EAAKY,MAAM6H,MAAMG,OAEnElH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,QAAS,QAAS,QAAS7H,EAAKY,MAAM6H,MAAMtE,SActEzC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,QAAS,QAAS,OAAQ7H,EAAKY,MAAM6H,MAAMI,SAErEnH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,QAAS,WAAY,OAAQ7H,EAAKY,MAAM6H,MAAMK,cAKhFpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACPH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BW,QAAUxC,EAAKD,MAAMgE,QAAtE,WAEJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BW,QAAUxC,EAAKgI,gBAA/D,8BAlHqBtG,EAAAC,EAAAC,cAAA,aApDrC5B,EAAKY,MAAQ,GAIbZ,EAAK4H,cAAgB,KANP5H,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAyH,EAAA5H,GAAA4H,EAAA,CAAsC9E,aCDzBmG,EAAb,SAAAjJ,GACI,SAAAiJ,EAAYhJ,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4I,IACd/I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8I,GAAAzI,KAAAH,KAAMJ,KAQV+C,kBAAoB,WAChB,GAAuB,MAAnB9C,EAAKD,MAAMiD,KAAe,CAC1B,IAAMgG,EAAkBhJ,EAAKD,MAAMiD,KACnChD,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB+I,IAClBhJ,EAAK4H,cAAgBlB,EAAUsC,GAC/B9F,QAAQwB,IAARzE,OAAAiE,EAAA,EAAAjE,CAAA,GAAgB+I,MAdNhJ,EAkBlB6H,WAAa,SAACC,EAAQR,EAAOrF,EAAMM,GAC/B,OAAOb,EAAAC,EAAAC,cAAA,SACHK,KAAMA,EACNJ,UAAU,eACVU,MAAOA,EACPH,SAAU,SAAA6B,GACN,IAAI8D,EAAe,GACnBA,EAAaD,GAAU9H,EAAKY,MAAMkH,GAClCC,EAAaD,GAAQR,GAASrD,EAAE3B,OAAOC,MAEvCvC,EAAKiB,SAAS8G,OA5BR/H,EAiClBgI,eAAiB,WACb,IAAIgB,EAAkB/B,EAAqBjH,EAAK4H,cAAe5H,EAAKY,OAGhE,oBAAqBoI,IACrBA,EAAe,gBAAf,mBAA2DhJ,EAAK4H,cAAL,oCAC3D,aAAcoB,IACdA,EAAe,SAAf,YAA6ChJ,EAAK4H,cAAL,sBAC7C,qBAAsBoB,IACtBA,EAAe,iBAAf,oBAA6DhJ,EAAK4H,cAAL,sCAEjEvI,EAAa,mBAAoB,QAASmB,KAAKC,UAAUuI,IACxDlI,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJhB,EAAKiB,SAAS,CAACC,QAAS,iCAExBlB,EAAKiB,SAAS,CAACC,QAAS,yGAG/BK,MAAM,SAAAC,GACH0B,QAAQwB,IAAI,UAAWlD,MArDbxB,EAyDlByB,OAAS,WACL,OAAKzB,EAAKY,MAAMoI,gBAEZ,YAAahJ,EAAKY,MAEdc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAMM,SACjBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BW,QAAUxC,EAAKD,MAAMgE,QAAtE,WAEJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAS3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,WAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,kBAAmB,OAAQ,OAAQpC,EAAWzF,EAAKY,MAAMoI,gBAAgBb,gBAEnGzG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,qBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,kBAAmB,OAAQ,OAAQpC,EAAWzF,EAAKY,MAAMoI,gBAAgBZ,aAEnG1G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,kBAAmB,aAAc,OAAQ7H,EAAKY,MAAMoI,gBAAgBX,cAE9F3G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,0BACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,kBAAmB,iBAAkB,OAAQ7H,EAAKY,MAAMoI,gBAAgBV,kBAElG5G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,kBAAmB,cAAe,OAAQ7H,EAAKY,MAAMoI,gBAAgBT,eAE/F7G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,kBAAmB,WAAY,OAAQ7H,EAAKY,MAAMoI,gBAAgBR,aAGhG9G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,aAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,WAAY,OAAQ,OAAQ7H,EAAKY,MAAMqI,SAASvF,QAE1EhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,WAAY,QAAS,OAAQ7H,EAAKY,MAAMqI,SAAStI,SAE3Ee,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,MACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,WAAY,KAAM,OAAQ7H,EAAKY,MAAMqI,SAASN,MAExEjH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,WAAY,MAAO,OAAQ7H,EAAKY,MAAMqI,SAASL,OAEzElH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,WAAY,QAAS,OAAQ7H,EAAKY,MAAMqI,SAAS9E,UAgB/EzC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,eAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAIRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAMsI,kBAAoBlJ,EAAK6H,WAAW,mBAAoB,QAAS,OAAQ7H,EAAKY,MAAMsI,iBAAiBC,SAE1HzH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,UACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAMsI,kBAAoBlJ,EAAK6H,WAAW,mBAAoB,SAAU,OAAQ7H,EAAKY,MAAMsI,iBAAiBE,UAE3H1H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAMsI,kBAAoBlJ,EAAK6H,WAAW,mBAAoB,MAAO,OAAQ7H,EAAKY,MAAMsI,iBAAiBG,SAKhI3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACPH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BW,QAAUxC,EAAKD,MAAMgE,QAAtE,WAEJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BW,QAAUxC,EAAKgI,gBAA/D,8BAnIyBtG,EAAAC,EAAAC,cAAA,aAxDzC5B,EAAKY,MAAQ,GAIbZ,EAAK4H,cAAgB,KANP5H,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA8I,EAAAjJ,GAAAiJ,EAAA,CAAyCnG,aCA5B0G,EAAb,SAAAxJ,GACI,SAAAwJ,EAAYvJ,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmJ,IACdtJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqJ,GAAAhJ,KAAAH,KAAMJ,KAQV+C,kBAAoB,WAChB,GAAuB,MAAnB9C,EAAKD,MAAMiD,KAAe,CAC1B,IAAMuG,EAAmBvJ,EAAKD,MAAMiD,KACpChD,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkBsJ,IAClBvJ,EAAK4H,cAAgBlB,EAAU6C,KAbrBvJ,EAiBlB6H,WAAa,SAACC,EAAQR,EAAOrF,EAAMM,GAC/B,OAAOb,EAAAC,EAAAC,cAAA,SACHK,KAAMA,EACNJ,UAAU,eACVU,MAAOA,EACPH,SAAU,SAAA6B,GACN,IAAI8D,EAAe,GACnBA,EAAaD,GAAU9H,EAAKY,MAAMkH,GAClCC,EAAaD,GAAQR,GAASrD,EAAE3B,OAAOC,MAEvCvC,EAAKiB,SAAS8G,OA3BR/H,EAmClBgI,eAAiB,WACb,IAAIuB,EAAmBtC,EAAqBjH,EAAK4H,cAAe5H,EAAKY,OAEjE,qBAAsB2I,IACtBA,EAAgB,iBAAhB,oBACIvJ,EAAK4H,cAAL,sCAEJ,cAAe2B,IACfA,EAAgB,UAAhB,aACIvJ,EAAK4H,cAAL,wBAEJ,sBAAuB2B,IACvBA,EAAgB,kBAAhB,qBACIvJ,EAAK4H,cAAL,wCAEJ,YAAa2B,IACbA,EAAgB,QAAhB,WACIvJ,EAAK4H,cAAL,oBAERvI,EAAa,oBAAqB,QAASmB,KAAKC,UAAU8I,IACzDzI,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJhB,EAAKiB,SAAS,CAACC,QAAS,iCAExBlB,EAAKiB,SAAS,CAACC,QAAS,yGAG/BK,MAAM,SAAAC,GACH0B,QAAQwB,IAAI,UAAWlD,MA/DbxB,EAmElByB,OAAS,WACL,OAAKzB,EAAKY,MAAM2I,iBAEZ,YAAavJ,EAAKY,MAEdc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAMM,SACjBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BW,QAAUxC,EAAKD,MAAMgE,QAAtE,WAEJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAS3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,WAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,mBAAoB,cAAe,OAAQpC,EAAWzF,EAAKY,MAAM2I,iBAAiBpB,gBAE5GzG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,qBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,mBAAoB,WAAY,OAAQpC,EAAWzF,EAAKY,MAAM2I,iBAAiBnB,aAEzG1G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,mBAAoB,aAAc,OAAQ7H,EAAKY,MAAM2I,iBAAiBlB,cAEhG3G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,0BACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,mBAAoB,iBAAkB,OAAQ7H,EAAKY,MAAM2I,iBAAiBjB,kBAEpG5G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,mBAAoB,cAAe,OAAQ7H,EAAKY,MAAM2I,iBAAiBhB,eAEjG7G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,mBAAoB,WAAY,OAAQ7H,EAAKY,MAAM2I,iBAAiBf,aAGlG9G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,cAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,YAAa,OAAQ,OAAQ7H,EAAKY,MAAM4I,UAAU9F,QAE5EhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,MACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,YAAa,KAAM,OAAQ7H,EAAKY,MAAM4I,UAAUb,MAE1EjH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,YAAa,MAAO,OAAQ7H,EAAKY,MAAM4I,UAAUZ,OAE3ElH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAK6H,WAAW,YAAa,QAAS,OAAQ7H,EAAKY,MAAM4I,UAAUrF,UAejFzC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,YAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAM6I,SAAWzJ,EAAK6H,WAAW,UAAW,OAAQ,OAAQ7H,EAAKY,MAAM6I,QAAQ/F,QAM9FhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAM6I,SAAWzJ,EAAK6H,WAAW,UAAW,OAAQ,OAAQ7H,EAAKY,MAAM6I,QAAQC,SAQlGhI,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,eAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAM+I,mBAAqB3J,EAAK6H,WAAW,oBAAqB,QAAS,OAAQ7H,EAAKY,MAAM+I,kBAAkBR,SAE7HzH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,UACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAM+I,mBAAqB3J,EAAK6H,WAAW,oBAAqB,SAAU,OAAQ7H,EAAKY,MAAM+I,kBAAkBP,UAE9H1H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAM5B,EAAKY,MAAM+I,mBAAqB3J,EAAK6H,WAAW,oBAAqB,MAAO,OAAQ7H,EAAKY,MAAM+I,kBAAkBN,SAKnI3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BW,QAAUxC,EAAKD,MAAMgE,QAAtE,WAEJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BW,QAAUxC,EAAKgI,gBAA/D,8BAzJ0BtG,EAAAC,EAAAC,cAAA,aAlE1C5B,EAAKY,MAAQ,GAIbZ,EAAK4H,cAAgB,KANP5H,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAqJ,EAAAxJ,GAAAwJ,EAAA,CAA0C1G,aCE7BgH,EAAb,SAAA9J,GACI,SAAA8J,EAAY7J,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyJ,IACd5J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2J,GAAAtJ,KAAAH,KAAMJ,KAQV+C,kBAAoB,WAChB9C,EAAK6J,SAVS7J,EAclB6J,MAAQ,WACJ,IAAMC,EAAa9J,EAAKD,MAAMiD,KAE9B3D,EAAa,gBAAiB,OAAQmB,KAAKC,UAAU,CACjDsJ,UAAYD,EAAW3H,GACvB6H,gBAAiBF,EAAWE,mBAE/BlJ,KAAK,SAAAC,GACF,OAAOA,EAAIM,SAEdP,KAAK,SAAAkC,GACFhD,EAAKiB,SAAS,CAAC+I,gBAAiBF,EAAWE,gBAAiBhH,KAAMA,IAClEhD,EAAK4H,cAAgB,KAExBrG,MAAM,SAAAC,GACH0B,QAAQwB,IAAIlD,MA7BFxB,EAiClBiK,aAAe,WACX,MAAmC,UAA/BjK,EAAKY,MAAMoJ,gBACJtI,EAAAC,EAAAC,cAACsI,EAAD,CAAkBlH,KAAMhD,EAAKY,MAAMoC,KAAMe,OAAQ/D,EAAKD,MAAMoK,aAC/B,aAA/BnK,EAAKY,MAAMoJ,gBACTtI,EAAAC,EAAAC,cAACwI,EAAD,CAAqBpH,KAAMhD,EAAKY,MAAMoC,KAAMe,OAAQ/D,EAAKD,MAAMoK,aAClC,cAA/BnK,EAAKY,MAAMoJ,gBACTtI,EAAAC,EAAAC,cAACyI,EAAD,CAAsBrH,KAAMhD,EAAKY,MAAMoC,KAAMe,OAAQ/D,EAAKD,MAAMoK,kBADtE,GAtCSnK,EA0ClByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACT7B,EAAKiK,iBA3CfjK,EAAKY,MAAQ,GAIbZ,EAAK4H,cAAgB,KANP5H,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA2J,EAAA9J,GAAA8J,EAAA,CAAiChH,aCFpB0H,EAAb,SAAAxK,GACI,SAAAwK,EAAYvK,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmK,IACdtK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqK,GAAAhK,KAAAH,KAAMJ,KAMVwK,UAAY,WACR,IAAMT,EAAa9J,EAAKD,MAAMiD,KAC9B3D,EAAa,iBAAkB,OAAQmB,KAAKC,UAAU,CAClDsJ,UAAYD,EAAW3H,GACvB6H,gBAAiBF,EAAWE,mBAE/BlJ,KAAM,SAAAC,GACgB,MAAfA,EAAIC,OACJhB,EAAKiB,SAAS,CAACC,QAAS,+BAExBlB,EAAKiB,SAAS,CAACC,QAAS,gFAG/BK,MAAO,SAAAC,OApBMxB,EAyBlBwK,WAAa,WACT,IAAMV,EAAa9J,EAAKD,MAAMiD,KAE9B,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgBiI,EAAWE,kBAEhDtI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgBiI,EAAWpG,OAEhDhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgB0E,EAAYuD,EAAW9G,UAxCtDhD,EA+ClByK,cAAgB,WACZ,OACI/I,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMM,UAjDNlB,EAqDlB0K,aAAe,WACX,OACIhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAAf,kEAEIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBW,QAASxC,EAAKD,MAAMoK,YAA1D,WAEJzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBW,QAASxC,EAAKuK,WAAlD,WA9DFvK,EAqElByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yCAE0B,MAAtB5B,EAAKY,MAAMM,QACXlB,EAAKwK,aACLxK,EAAKyK,gBAIiB,MAAtBzK,EAAKY,MAAMM,QACXlB,EAAK0K,eACL,KAGJhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBW,QAASxC,EAAKD,MAAMoK,YAAxD,aApFZnK,EAAKY,MAAQ,CACTM,QAAS,MAHClB,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAqK,EAAAxK,GAAAwK,EAAA,CAAmC1H,aCAtB+H,EAAb,SAAA7K,GACI,SAAA6K,EAAY5K,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwK,IACd3K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0K,GAAArK,KAAAH,KAAMJ,KAMV+C,kBAAoB,WAChB,GAAuB,MAAnB9C,EAAKD,MAAMiD,KAAe,CAC1B,IAAM2E,EAAe3H,EAAKD,MAAMiD,KAChChD,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB0H,MAVR3H,EAclByB,OAAS,WACL,OAAKzB,EAAKY,MAAM+G,aAGZjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,WAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAM2E,EAAYvG,EAAKY,MAAM+G,aAAaQ,eAE9CzG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,cACAvG,EAAAC,EAAAC,cAAA,UAAM2E,EAAYvG,EAAKY,MAAM+G,aAAaS,YAE9C1G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM+G,aAAaU,aAEjC3G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,0BACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM+G,aAAaW,iBAEjC5G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM+G,aAAaY,cAEjC7G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM+G,aAAaa,YAGrC9G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MACIC,UAAU,cACVoG,MAAM,MACNC,QAAQ,KAHZ,UAOJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6H,MAAM/E,OAE1BhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,gBACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6H,MAAMC,YAE1BhH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,MACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6H,MAAME,KAE1BjH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6H,MAAMG,MAE1BlH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6H,MAAMtE,QAc1BzC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6H,MAAMI,QAE1BnH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6H,MAAMK,cA7FJpH,EAAAC,EAAAC,cAAA,aAbtC5B,EAAKY,MAAQ,GAFCZ,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA0K,EAAA7K,GAAA6K,EAAA,CAAwC/H,aCD3BgI,EAAb,SAAA9K,GACI,SAAA8K,EAAY7K,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyK,IACd5K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2K,GAAAtK,KAAAH,KAAMJ,KAMV+C,kBAAoB,WAChB,GAAuB,MAAnB9C,EAAKD,MAAMiD,KAAe,CAC1B,IAAMgG,EAAkBhJ,EAAKD,MAAMiD,KACnChD,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB+I,MAVRhJ,EAclByB,OAAS,WACL,OAAKzB,EAAKY,MAAMoI,gBAGZtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MACIC,UAAU,cACVoG,MAAM,MACNC,QAAQ,KAHZ,WAOJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAK2E,EAAYvG,EAAKY,MAAMoI,gBAAgBb,eAEhDzG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,cACAvG,EAAAC,EAAAC,cAAA,UAAK2E,EAAYvG,EAAKY,MAAMoI,gBAAgBZ,YAEhD1G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMoI,gBAAgBX,aAEpC3G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,0BACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMoI,gBAAgBV,iBAEpC5G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMoI,gBAAgBT,cAEpC7G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMoI,gBAAgBR,YAGxC9G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MACIC,UAAU,cACVoG,MAAM,MACNC,QAAQ,KAHZ,aAOJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMqI,SAASvF,OAE7BhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMqI,SAAStI,QAE7Be,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,MACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMqI,SAASN,KAE7BjH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMqI,SAASL,MAE7BlH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMqI,SAAS9E,QAE7BzC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMqI,SAAS4B,YAYjCnJ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,eAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMsI,kBAAoBlJ,EAAKY,MAAMsI,iBAAiBC,QAEpEzH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,UACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMsI,kBAAoBlJ,EAAKY,MAAMsI,iBAAiBE,SAEpE1H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAMsI,kBAAoBlJ,EAAKY,MAAMsI,iBAAiBG,SAlH3C3H,EAAAC,EAAAC,cAAA,aAbzC5B,EAAKY,MAAQ,GAFCZ,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA2K,EAAA9K,GAAA8K,EAAA,CAA2ChI,aCA9BkI,EAAb,SAAAhL,GACI,SAAAgL,EAAY/K,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2K,IACd9K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6K,GAAAxK,KAAAH,KAAMJ,KAMV+C,kBAAoB,WAChB,GAAuB,MAAnB9C,EAAKD,MAAMiD,KAAe,CAC1B,IAAMuG,EAAmBvJ,EAAKD,MAAMiD,KACpChD,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkBsJ,MAVRvJ,EAclByB,OAAS,WACL,OAAKzB,EAAKY,MAAM2I,iBAGZ7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,WAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAK2E,EAAYvG,EAAKY,MAAM2I,iBAAiBpB,eAEjDzG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,qBACAvG,EAAAC,EAAAC,cAAA,UAAK2E,EAAYvG,EAAKY,MAAM2I,iBAAiBnB,YAEjD1G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM2I,iBAAiBlB,aAErC3G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,0BACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM2I,iBAAiBjB,iBAErC5G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,oBACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM2I,iBAAiBhB,cAErC7G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,YACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM2I,iBAAiBf,YAGzC9G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MACIC,UAAU,cACVoG,MAAM,MACNC,QAAQ,KAHZ,cAOJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM4I,UAAU9F,OAE9BhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,MACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM4I,UAAUb,KAE9BjH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM4I,UAAUZ,MAE9BlH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM4I,UAAUrF,SAelCzC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MACIC,UAAU,cACVoG,MAAM,MACNC,QAAQ,KAHZ,YAOJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6I,SAAWzJ,EAAKY,MAAM6I,QAAQ/F,OAMlDhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM6I,SAAWzJ,EAAKY,MAAM6I,QAAQC,QAQtDhI,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,MAAM,MAAMC,QAAQ,KAAhD,eAEJxG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,WAGRvG,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,SACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM+I,mBAAqB3J,EAAKY,MAAM+I,kBAAkBR,QAEtEzH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,UACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM+I,mBAAqB3J,EAAKY,MAAM+I,kBAAkBP,SAEtE1H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,OACAvG,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM+I,mBAAqB3J,EAAKY,MAAM+I,kBAAkBN,SAzI5C3H,EAAAC,EAAAC,cAAA,aAb1C5B,EAAKY,MAAQ,GAFCZ,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA6K,EAAAhL,GAAAgL,EAAA,CAA4ClI,aCI/BmI,EAAb,SAAAjL,GACI,SAAAiL,EAAYhL,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4K,IACd/K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8K,GAAAzK,KAAAH,KAAMJ,KAOV+C,kBAAoB,WAChB9C,EAAK6J,SATS7J,EAYlB6J,MAAQ,WACJ,IAAMC,EAAa9J,EAAKD,MAAMiD,KAE9B3D,EAAa,gBAAiB,OAAQmB,KAAKC,UAAU,CACjDsJ,UAAYD,EAAW3H,GACvB6H,gBAAiBF,EAAWE,mBAE/BlJ,KAAK,SAAAC,GACF,OAAOA,EAAIM,SAEdP,KAAK,SAAAkC,GACFhD,EAAKiB,SAAS,CAAC+I,gBAAiBF,EAAWE,gBAAiBhH,KAAMA,MAErEzB,MAAM,SAAAC,GACH0B,QAAQwB,IAAIlD,MA1BFxB,EA8BlBgL,aAAe,WACX,MAAmC,UAA/BhL,EAAKY,MAAMoJ,gBACJtI,EAAAC,EAAAC,cAACqJ,EAAD,CAAoBjI,KAAMhD,EAAKY,MAAMoC,OACR,aAA/BhD,EAAKY,MAAMoJ,gBACTtI,EAAAC,EAAAC,cAACsJ,EAAD,CAAuBlI,KAAMhD,EAAKY,MAAMoC,OACX,cAA/BhD,EAAKY,MAAMoJ,gBACTtI,EAAAC,EAAAC,cAACuJ,EAAD,CAAwBnI,KAAMhD,EAAKY,MAAMoC,YAD/C,GAnCShD,EAuClByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,WACM5B,EAAKgL,eACPtJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBW,QAASxC,EAAKD,MAAMoK,YAAxD,aA1CZnK,EAAKY,MAAQ,CACToC,KAAM,KACNgH,gBAAiB,MAJPhK,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA8K,EAAAjL,GAAAiL,EAAA,CAAmCnI,aCEtBwI,EAAb,SAAAtL,GACI,SAAAsL,EAAYrL,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiL,IACfpL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmL,GAAA9K,KAAAH,KAAMJ,KAQV+C,kBAAoB,WAChB9C,EAAKqL,UAVUrL,EAanBqL,OAAS,WACLrL,EAAKiB,SAAS,CAAC+B,KAAM,OAErB3D,EAAa,UAAW,OAAQmB,KAAKC,UAAU,CAC3C6K,KAAM,uBAETxK,KAAK,SAAAC,GAAG,OAAEA,EAAIM,SACdP,KAAK,SAAA8F,GACF,IAAI5D,EAAO,GACX4D,EAAOvD,IAAK,SAACkI,EAAKC,GAAN,OAAcxI,EAAKwI,GAAOD,IAEtCvL,EAAKiB,SAAS,CAAC+B,KAAMA,MAExBzB,MAAM,SAAAC,GACH0B,QAAQwB,IAAI,YA3BD1E,EA+BnByL,WAAa,SAACF,GACVvL,EAAKiB,SAAS,CAACyK,eAAgB,SAAUC,aAAcJ,KAhCxCvL,EAmCnB4L,SAAW,SAACL,GACRvL,EAAKiB,SAAS,CAACyK,eAAgB,OAAQC,aAAcJ,KApCtCvL,EAuCnB6L,WAAa,SAACN,GACVvL,EAAKiB,SAAS,CAACyK,eAAgB,SAAUC,aAAcJ,KAxCxCvL,EA2CnB8L,YAAc,WAEV,GAAuB,MAAnB9L,EAAKY,MAAMoC,KAgCf,OA7Bc/C,OAAO8L,OAAO/L,EAAKY,MAAMoC,MAAMK,IAAI,SAACkI,EAAK1H,GACnD,OACAnC,EAAAC,EAAAC,cAAA,MAAI2B,IAAKM,GACLnC,EAAAC,EAAAC,cAAA,UAAKiC,EAAI,GACTnC,EAAAC,EAAAC,cAAA,UAAK2J,EAAIvB,iBACTtI,EAAAC,EAAAC,cAAA,UAAK2J,EAAI7H,MACThC,EAAAC,EAAAC,cAAA,UAAK2E,EAAYgF,EAAIvI,OACrBtB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVW,QAAS,WAAKxC,EAAK4L,SAASL,KAFhC,UAKA7J,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,UACIC,UAAU,iBACVW,QAAS,WAAKxC,EAAKyL,WAAWF,KAFlC,WAKA7J,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVW,QAAS,WAAKxC,EAAK6L,WAAWN,KAFlC,iBApEGvL,EAgFnBgM,KAAO,WACH,OACItK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,KACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,4BACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBAGRvG,EAAAC,EAAAC,cAAA,aACK5B,EAAK8L,kBA9FP9L,EAqGnBiM,eAAiB,WACb,IAAM9B,EAAa,WACfnK,EAAKiB,SAAS,CAACyK,eAAgB,SAAU1L,EAAKqL,UAGlD,OAAQrL,EAAKY,MAAM8K,gBACf,IAAK,OACD,OAAO1L,EAAKgM,OAChB,IAAK,OACD,OAAQtK,EAAAC,EAAAC,cAACsK,EAAD,CACI/B,WAAYA,EACZnH,KAAMhD,EAAKY,MAAM+K,eAEjC,IAAK,SACD,OAAQjK,EAAAC,EAAAC,cAACuK,EAAD,CACIhC,WAAYA,EACZnH,KAAMhD,EAAKY,MAAM+K,eAEjC,IAAK,SACD,OAAQjK,EAAAC,EAAAC,cAACwK,EAAD,CACIjC,WAAYA,EACZnH,KAAMhD,EAAKY,MAAM+K,eAEjC,QACI,OAAOjK,EAAAC,EAAAC,cAAA,sBA7HA5B,EAiInByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACb7B,EAAKiM,iBACPvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aApIvB7B,EAAKY,MAAQ,CACT8K,eAAgB,OAChBW,WAAY,KACZrJ,KAAM,MALKhD,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAmL,EAAAtL,GAAAsL,EAAA,CAAyCxI,aCI5B0J,EAAb,SAAAxM,GACI,SAAAwM,EAAYvM,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmM,IACftM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqM,GAAAhM,KAAAH,KAAMJ,KAQVsL,OAAS,WACLhM,EAAa,UAAW,OAAQmB,KAAKC,UAAU,CAC3C6K,KAAM,uBAETxK,KAAK,SAAAC,GAAG,OAAEA,EAAIM,SACdP,KAAK,SAAA8F,GACF,IAAI5D,EAAO,GACX4D,EAAOvD,IAAK,SAACkI,EAAKC,GAAN,OAAcxI,EAAKwI,GAAOD,IAEtCvL,EAAKiB,SAAS,CAAC+B,KAAMA,MAExBzB,MAAM,SAAAC,GACH0B,QAAQwB,IAAI,YArBD1E,EAyBnB8C,kBAAoB,WAChB9C,EAAKqL,UA1BUrL,EA8BnB6L,WAAa,SAACN,GACVvL,EAAKiB,SAAS,CAACyK,eAAgB,SAAUC,aAAcJ,KA/BxCvL,EAkCnB8L,YAAc,WACV,GAAuB,MAAnB9L,EAAKY,MAAMoC,KAkBf,OAfc/C,OAAO8L,OAAO/L,EAAKY,MAAMoC,MAAMK,IAAI,SAACkI,EAAK1H,GACnD,OACInC,EAAAC,EAAAC,cAAA,MAAI2B,IAAKM,EAAGhC,UAAuC,IAA5B0J,EAAIgB,oBAA4B,iBAAmB,gBACtE7K,EAAAC,EAAAC,cAAA,UAAKiC,EAAI,GACTnC,EAAAC,EAAAC,cAAA,UAAK2J,EAAIvB,iBACTtI,EAAAC,EAAAC,cAAA,UAAK2J,EAAI7H,MACThC,EAAAC,EAAAC,cAAA,UAAK2E,EAAYgF,EAAIvI,OACrBtB,EAAAC,EAAAC,cAAA,UAAiC,IAA5B2J,EAAIgB,oBAA4B,WAAa,mBAClD7K,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBW,QAAS,WAAQxC,EAAK6L,WAAWN,KAArE,iBA/CDvL,EAwDnBgM,KAAO,WACH,OACItK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,KACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,4BACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,6BACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBAGRvG,EAAAC,EAAAC,cAAA,aACK5B,EAAK8L,kBAvEP9L,EA8EnBiM,eAAiB,WAGb,OAAQjM,EAAKY,MAAM8K,gBACf,IAAK,OACD,OAAO1L,EAAKgM,OAChB,IAAK,SACD,OAAOtK,EAAAC,EAAAC,cAACwK,EAAD,CACKjC,WAPD,kBAAMnK,EAAKiB,SAAS,CAACyK,eAAgB,UAQpC1I,KAAMhD,EAAKY,MAAM+K,eAEjC,QACI,OAAOjK,EAAAC,EAAAC,cAAA,sBA1FA5B,EA8FnByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACT7B,EAAKiM,iBACPvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAjGvB7B,EAAKY,MAAQ,CACT8K,eAAgB,OAChBW,WAAY,KACZrJ,KAAM,MALKhD,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAqM,EAAAxM,GAAAwM,EAAA,CAA2C1J,aCZ9B4J,EAAb,SAAA1M,GACI,SAAA0M,EAAYzM,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqM,IACdxM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuM,GAAAlM,KAAAH,KAAMJ,KAMV0B,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,yBACVoD,KAAK,QACLD,aAAW,iBAEXtD,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAASxC,EAAKD,MAAM0M,QAAS5K,UAAU,mBAA7D,SACAH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAASxC,EAAKD,MAAM2M,SAAU7K,UAAU,mBAA9D,YACAH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAASxC,EAAKD,MAAM4M,QAAS9K,UAAU,mBAA7D,eAdR7B,EAAKY,MAAQ,GAFCZ,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAuM,EAAA1M,GAAA0M,EAAA,CAA0C5J,qBCE7BgK,EAAb,SAAA9M,GACI,SAAA8M,EAAY7M,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyM,IACd5M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2M,GAAAtM,KAAAH,KAAMJ,KAeV+C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBACZ,MAAhBD,GACA7M,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB4M,KAnBR7M,EAsBlB+M,UAAY,WACR,IAAM9D,EAAW,CACbtI,MAAOX,EAAKY,MAAMD,MAClB+C,KAAM1D,EAAKY,MAAM8C,KAEjBS,MAAOnE,EAAKY,MAAMuD,MAElBwE,GAAI3I,EAAKY,MAAM+H,GACfC,IAAK5I,EAAKY,MAAMgI,KAKpB5I,EAAKD,MAAMiN,OAAO/D,IAnCJjJ,EAsClBqL,OAAS,WACL,IAAI1K,EAAQX,EAAKY,MAAMD,MAAMsM,QAAQ,UAAW,IAE5CtM,EAAM0G,OAAS,IACA,IAAIlI,SACZC,IAAI,eAAgB,oBAE3BC,EACI,0BACA,OACAmB,KAAKC,UAAU,CAACE,MAAOA,EAAO2K,KAAM,WACtCxK,KAAM,SAAAC,GACJ,OAAOA,EAAIM,SACZP,KAAM,SAAAkC,GACD/C,OAAO4G,KAAK7D,GAAMqE,OAAS,GACvB,YAAarE,IACbA,EAAKkK,QAAUzH,EAAWzC,EAAKkK,UAEnClN,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB+C,EAAlB,CAAwBmK,UAAU,MAElCnN,EAAKiB,SAAS,CAAEkM,UAAU,MAGjC5L,MAAO,SAAAC,GACJxB,EAAKiB,SAAS,CAACkM,UAAU,OAI7BnN,EAAKiB,SAAS,CAACkM,UAAU,KAlEfnN,EAsElByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,mCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,kBAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,iBAAiBiC,IAAMpE,EAAKoN,eAAiBvL,UAAU,eAAewL,YAAY,uCACpG9K,MAAOvC,EAAKY,MAAMD,MAAO2M,OAAQtN,EAAKqL,OAAQjJ,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACN,MAAOsD,EAAE3B,OAAOC,WAE9Fb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,iBAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,eAAf,MACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,cAAciC,IAAKpE,EAAKuN,YAAa1L,UAAU,eAAewL,YAAY,6BAC5F9K,MAAOvC,EAAKY,MAAM+H,GAAI6E,SAAUxN,EAAKY,MAAMuM,SAAU/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC0H,GAAI1E,EAAE3B,OAAOC,WAElGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,kBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,OAAf,OACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,MAAMiC,IAAKpE,EAAKyN,aAAc5L,UAAU,eAAewL,YAAY,8BACrF9K,MAAOvC,EAAKY,MAAMgI,IAAK4E,SAAUxN,EAAKY,MAAMuM,SAAU/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC2H,IAAK3E,EAAE3B,OAAOC,WAEpGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,sCAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,iBAAf,QACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,gBAAgBiC,IAAKpE,EAAK0N,cAAe7L,UAAU,eAAewL,YAAY,+BAChG9K,MAAOvC,EAAKY,MAAM8C,KAAM8J,SAAUxN,EAAKY,MAAMuM,SAAU/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACyC,KAAMO,EAAE3B,OAAOC,WAEtGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,oBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,OAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,iBAAiBiC,IAAKpE,EAAK2N,eAAgB9L,UAAU,eAAewL,YAAY,gCAClG9K,MAAOvC,EAAKY,MAAMuD,MAAOqJ,SAAUxN,EAAKY,MAAMuM,SAAU/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACkD,MAAOF,EAAE3B,OAAOC,WAExGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,qBAgCRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAA5F,gBAIRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aA9JvB7B,EAAKY,MAAO,CACRD,MAAO,GACP+C,KAAM,GAENS,MAAO,GAEPwE,GAAI,GACJC,IAAK,GAGLuE,UAAU,GAZAnN,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA2M,EAAA9M,GAAA8M,EAAA,CAAmDhK,aCFtCiL,EAAb,SAAA/N,GACI,SAAA+N,EAAY9N,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0N,IACd7N,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4N,GAAAvN,KAAAH,KAAMJ,KAYV+C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBACZ,MAAhBD,GACA7M,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB4M,KAhBR7M,EAoBlB+M,UAAY,WACR,IAAM/D,EAAkB,CACpBR,SAAUxI,EAAKY,MAAM4H,SACrBL,YAAanI,EAAKY,MAAMuH,YACxBC,SAAUpI,EAAKY,MAAMwH,SACrBC,WAAYrI,EAAKY,MAAMyH,WACvByF,SAAU9N,EAAKY,MAAMkN,SACrBxF,eAAgBtI,EAAKY,MAAM0H,eAC3BC,YAAavI,EAAKY,MAAM2H,aAG5BvI,EAAKD,MAAMiN,OAAOhE,IA/BJhJ,EAkClByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,iCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,sBAAf,oBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,qBACHN,UAAU,eACVwL,YAAY,0CACZ9K,MAAOvC,EAAKY,MAAMuH,YAClB/F,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACkH,YAAalE,EAAE3B,OAAOC,WAEtDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,mBAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,mBAAf,qBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,kBACHN,UAAU,eACVwL,YAAY,2CACZ9K,MAAOvC,EAAKY,MAAMwH,SAClBhG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACmH,SAAUnE,EAAE3B,OAAOC,WAEnDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,oBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,yBAAf,wBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,wBACHN,UAAU,eACVwL,YAAY,gDACZ9K,MAAOvC,EAAKY,MAAM0H,eAClBlG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACqH,eAAgBrE,EAAE3B,OAAOC,WAEzDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,uBAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,sBAAf,4BACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,qBACHN,UAAU,eACVwL,YAAY,8CACZ9K,MAAOvC,EAAKY,MAAM2H,YAClBnG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACsH,YAAatE,EAAE3B,OAAOC,WAEtDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,wBAMRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACPH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,cAAf,6BACAN,EAAAC,EAAAC,cAAA,UACIO,GAAG,aAAaN,UAAU,eAC1BU,MAAOvC,EAAKY,MAAMyH,WAClBjG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACoH,WAAYpE,EAAE3B,OAAOC,UACjDb,EAAAC,EAAAC,cAAA,UAAQW,MAAO,YAAWgB,IAAI,KAA9B,aACA7B,EAAAC,EAAAC,cAAA,UAAQW,MAAO,UAAWgB,IAAI,KAA9B,WACA7B,EAAAC,EAAAC,cAAA,UAAQW,MAAO,SAAWgB,IAAI,KAA9B,WAEJ7B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,2BAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,mBAAf,YACAN,EAAAC,EAAAC,cAAA,UACIO,GAAG,kBACHN,UAAU,eACVU,MAAOvC,EAAKY,MAAMkN,SAClB1L,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC6M,SAAU7J,EAAE3B,OAAOC,UAE/Cb,EAAAC,EAAAC,cAAA,UAAQW,OAAO,EAAOgB,IAAI,KAA1B,UACA7B,EAAAC,EAAAC,cAAA,UAAQW,OAAO,EAAOgB,IAAI,KAA1B,QAEJ7B,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,qBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,mBAAf,YACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,WACLE,GAAG,kBACHN,UAAU,eACVwL,YAAY,iCACZ9K,MAAOvC,EAAKY,MAAM4H,SAClBpG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACuH,SAAUvE,EAAE3B,OAAOC,WAEnDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,mCAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,+BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAMgE,WAFhD,WAMJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,8BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAFhD,eAQRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aA7KnB7B,EAAKY,MAAO,CACR4H,SAAU,GACVL,YAAa,GACbC,SAAU,GACVC,WAAY,YACZyF,UAAU,EACVxF,eAAgB,GAChBC,YAAa,IATHvI,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA4N,EAAA/N,GAAA+N,EAAA,CAAyDjL,aCI5CmL,eAAb,SAAAjO,GACI,SAAAiO,EAAYhO,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4N,IACd/N,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8N,GAAAzN,KAAAH,KAAMJ,KAWV+C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBAEhC,GAAID,EAAc,CACd,IAAMmB,EAAqC,MAAtBnB,EAAa1D,OAC9B0D,EAAa1D,MAAM9B,OAAS,EAEhCrH,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GACO4M,EADP,CAEIoB,mBAAoBD,OArBdhO,EA2BlB+M,UAAY,WACR,IAAM7D,GAAqD,IAAlClJ,EAAKY,MAAMqN,mBAA+B,CAC/D7E,OAAQpJ,EAAKY,MAAMwI,OACnBC,IAAKrJ,EAAKY,MAAMyI,IAChBF,MAAOnJ,EAAKY,MAAMuI,OACjB,KAELnJ,EAAKD,MAAMiN,OAAO9D,IAlCJlJ,EAsClBqL,OAAS,WAEL,IAAIlC,EAAQnJ,EAAKY,MAAMuI,OACnBA,IACAA,EAAQA,EAAM8D,QAAQ,UAAW,KAEhB,IAAjB9D,EAAM9B,UACS,IAAIlI,SACZC,IAAI,eAAgB,oBAU3BC,EACI,0BACA,OACAmB,KAAKC,UAAU,CAAC0I,MAAOA,EAAOmC,KAAM,WACtCxK,KAAM,SAAAC,GACJ,OAAOA,EAAIM,SACZP,KAAM,SAAAkC,GACD/C,OAAO4G,KAAK7D,GAAMqE,OAAS,EAC3BrH,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB+C,EAAlB,CAAwBmK,UAAU,KAElCnN,EAAKiB,SAAS,CAAEkM,UAAU,MAGjC5L,MAAO,SAAAC,GACJxB,EAAKiB,SAAS,CAACkM,UAAU,OAI7BnN,EAAKiB,SAAS,CAACkM,UAAU,KA1EfnN,EA8ElBkO,2BAA6B,SAAC3L,GAC1B,IAAM4L,GAAM5L,GAAcvC,EAAKY,MAAMuM,SACrCnN,EAAKiB,SAAS,CAAEgN,mBAAoB1L,EAAO4K,SAAUgB,KAhFvCnO,EAmFlByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,qCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLJ,UAAU,mBACVK,KAAK,iBACLkM,SAAUpO,EAAKY,MAAMqN,mBACrB7L,SAAU,kBAAIpC,EAAKkO,4BAA2B,MAElDxM,EAAAC,EAAAC,cAAA,SACIC,UAAU,oBADd,mBAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLJ,UAAU,mBACVK,KAAK,iBACLkM,QAASpO,EAAKY,MAAMqN,mBACpB7L,SAAU,kBAAIpC,EAAKkO,4BAA2B,MAElDxM,EAAAC,EAAAC,cAAA,SACIC,UAAU,oBADd,oBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,iBAAf,SACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,gBACHN,UAAU,eACVwL,YAAY,kCACZ9K,MAAOvC,EAAKY,MAAMuI,MAClBqE,UAAWxN,EAAKY,MAAMqN,mBACtBX,OAAQtN,EAAKqL,OACbjJ,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACkI,MAAOlF,EAAE3B,OAAOC,WAEhDb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,2BAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,eAAf,OACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,cACHN,UAAU,eACVwL,YAAY,gCACZ9K,MAAOvC,EAAKY,MAAMyI,IAClBmE,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACoI,IAAKpF,EAAE3B,OAAOC,WAE9Cb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,sBAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,kBAAf,UACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,iBACHN,UAAU,eACVwL,YAAY,mCACZ9K,MAAOvC,EAAKY,MAAMwI,OAClBoE,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACmI,OAAQnF,EAAE3B,OAAOC,WAEjDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,sBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,+BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAMgE,WAFhD,WAMJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,8BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAFhD,gBAQRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aA5LnB7B,EAAKY,MAAO,CACRwI,OAAQ,GACRC,IAAK,GACLF,MAAO,GAEP8E,oBAAoB,EACpBd,UAAU,GARAnN,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA8N,EAAAjO,GAAAiO,EAAA,CAA0DnL,cCA7CyL,EAAb,SAAAvO,GACI,SAAAuO,EAAYtO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkO,IACfrO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoO,GAAA/N,KAAAH,KAAMJ,KAmBViI,eAAiB,WAAM,IAAAsG,EACoCtO,EAAKY,MAAboC,GAD5BsL,EACZC,cADYD,EACGE,qBADHvO,OAAAwO,EAAA,EAAAxO,CAAAqO,EAAA,4CAGJ,IAAInP,SACZC,IAAI,eAAgB,oBAE3BC,EACI,mBACA,OACAmB,KAAKC,UAAUuC,IACjBlC,KAAM,SAAAC,GACe,MAAfA,EAAIC,OACJhB,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAmBD,EAAK0O,YAAxB,CAAqCF,qBAAsB,iCAE3DxO,EAAKiB,SAAS,CACVuN,qBAAsB,uHAG/BjN,MAAO,SAAAC,GACNxB,EAAKiB,SAAS,CACVuN,qBAAsB,8EAxCfxO,EA6CnB2O,eAAiB,SAACC,GAAD,OAAS5O,EAAKiB,SAAS,SAACL,EAAOb,GAC5C,MAAO,CAACwO,cAAe3N,EAAM2N,cAAgBK,MA9C9B5O,EAkDnB6O,aAAe,kBAAM7O,EAAKiB,SAAS,SAACL,EAAOb,GACvC,OAAOC,EAAK2O,eAAe,MAnDZ3O,EAsDnB8O,aAAe,kBAAM9O,EAAKiB,SAAS,SAACL,EAAOb,GACvC,OAAOC,EAAK2O,gBAAgB,MAvDb3O,EA0DnB+O,aAAe,WACX/O,EAAKiB,SAAS,CAACsN,cAAe,KA3DfvO,EA8DnByB,OAAS,WACL,OAAOzB,EAAKY,MAAM2N,eAClB,KAAK,EACD,OACI7M,EAAAC,EAAAC,cAACoN,EAAD,CACIhC,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAACgI,SAAUjG,KAC1C8J,gBAAkB,kBAAM9M,EAAKY,MAAMqI,UACnCgG,YAAajP,EAAKD,MAAMkP,YACxBrB,OAAS5N,EAAK6O,eAE1B,KAAK,EACD,OACInN,EAAAC,EAAAC,cAACsN,EAAD,CACIlC,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAACiI,iBAAkBlG,KAClD8J,gBAAkB,kBAAM9M,EAAKY,MAAMsI,kBACnC+F,YAAajP,EAAKD,MAAMkP,YACxBlL,OAAS/D,EAAK8O,aACdlB,OAAS5N,EAAK6O,eAG1B,KAAK,EACD,OACInN,EAAAC,EAAAC,cAACuN,EAAD,CACInC,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAAC+H,gBAAiBhG,KACjD8J,gBAAkB,kBAAM9M,EAAKY,MAAMoI,iBACnCiG,YAAajP,EAAKD,MAAMkP,YACxBlL,OAAS/D,EAAK8O,aACdlB,OAAS5N,EAAK6O,eAE1B,KAAK,EACA7O,EAAKgI,iBACLhI,EAAK6O,eAEV,KAAK,EACD,OACInN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM4N,sBAChB9M,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBW,QAASxC,EAAK+O,cAAlD,cAGZ,QACM/O,EAAK+O,iBArGX/O,EAAKY,MAAQ,CACTqI,SAAU,KACVC,iBAAkB,KAClBF,gBAAiB,KAEjBuF,cAAe,EAEfC,qBAAsB,IAG1BxO,EAAK0O,YAAc,CACfzF,SAAU,KACVC,iBAAkB,KAClBF,gBAAiB,MAfNhJ,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAoO,EAAAvO,GAAAuO,EAAA,CAA2CzL,aCD9BwM,EAAb,SAAAtP,GACI,SAAAsP,EAAYrP,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiP,IACdpP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmP,GAAA9O,KAAAH,KAAMJ,KAkBV+C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBACZ,MAAhBD,GACA7M,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB4M,KAtBR7M,EAyBlBqP,kBAAoB,SAACC,GACjB,OAAOA,EAAIrC,QAAQ,gBAAiB,KA1BtBjN,EA6BlB+M,UAAY,WACR,IAAMwC,EAAgB,CAClB7L,KAAM1D,EAAKY,MAAM8C,KAEjBS,MAAOnE,EAAKY,MAAMuD,MAElBwE,GAAI3I,EAAKY,MAAM+H,GACfC,IAAK5I,EAAKY,MAAMgI,IAEhBF,UAAW1I,EAAKY,MAAM8H,UACtBG,MAAO7I,EAAKY,MAAMiI,MAClBC,SAAU9I,EAAKY,MAAMkI,UAGzB9I,EAAKD,MAAMiN,OAAOuC,IA3CJvP,EA8ClBqL,OAAS,WACL,IAAI3C,EAAY1I,EAAKY,MAAM8H,UAAUuE,QAAQ,UAAW,IAE/B,KAArBvE,EAAUrB,OAEVhI,EACI,uBACA,OACAmB,KAAKC,UAAU,CAACiI,UAAWA,EAAW4C,KAAM,eAC9CxK,KAAM,SAAAC,GACJ,OAAOA,EAAIM,SACZP,KAAM,SAAAkC,GACL,GAAI/C,OAAO4G,KAAK7D,GAAMqE,OAAS,EAAE,CAC7B,IAAMmI,EAAOvP,OAAAiE,EAAA,EAAAjE,CAAA,GAAO+C,EAAP,CAAakK,QAASzH,EAAWzC,EAAI,WAClDhD,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkBuP,EAAlB,CAA2BrC,UAAU,UAErCnN,EAAKiB,SAAS,CAACkM,UAAU,MAGhC5L,MAAO,SAAAC,GACJxB,EAAKiB,SAAS,CAACkM,UAAU,MAI7BnN,EAAKiB,SAAS,CAACkM,UAAU,KAtEfnN,EA0ElByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,gCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,uBAAf,6BACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,sBAAsBiC,IAAMpE,EAAKyP,oBAAsB5N,UAAU,eAAewL,YAAY,iDAC9G9K,MAAOvC,EAAKY,MAAM8H,UAAW4E,OAAQtN,EAAKqL,OAAQjJ,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACyH,UAAWzE,EAAE3B,OAAOC,WAEtGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,uBAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,gBAAf,MACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,eAAeiC,IAAKpE,EAAK0P,aAAc7N,UAAU,eAAewL,YAAY,8BAC9F9K,MAAOvC,EAAKY,MAAM+H,GAAI6E,SAAUxN,EAAKY,MAAMuM,SAAU/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC0H,GAAI1E,EAAE3B,OAAOC,WAElGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,kBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,iBAAf,OACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,gBAAgBiC,IAAKpE,EAAK2P,cAAe9N,UAAU,eAAewL,YAAY,+BAChG9K,MAAOvC,EAAKY,MAAMgI,IAAK4E,SAAUxN,EAAKY,MAAMuM,SAAU/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC2H,IAAK3E,EAAE3B,OAAOC,WAEpGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,sCAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,kBAAf,QACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,iBAAiBiC,IAAKpE,EAAK4P,eAAgB/N,UAAU,eAAewL,YAAY,gCAClG9K,MAAOvC,EAAKY,MAAM8C,KAAM8J,SAAUxN,EAAKY,MAAMuM,SAAU/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACyC,KAAMO,EAAE3B,OAAOC,WAEtGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,oBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,mBAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOE,GAAG,kBAAkBiC,IAAKpE,EAAK6P,gBAAiBhO,UAAU,eAAewL,YAAY,iCACpG9K,MAAOvC,EAAKY,MAAMuD,MAAOqJ,SAAUxN,EAAKY,MAAMuM,SAAU/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACkD,MAAOF,EAAE3B,OAAOC,WAExGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,qBAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,mBAAf,SACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,kBACHiC,IAAKpE,EAAK8P,gBACVjO,UAAU,eACVwL,YAAY,iCACZ9K,MAAOvC,EAAKY,MAAMiI,MAClB2E,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC4H,MAAO5E,EAAE3B,OAAOC,WAEhDb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,uCAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,sBAAf,YACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,qBACHiC,IAAKpE,EAAK+P,mBACVlO,UAAU,eACVwL,YAAY,oCACZ9K,MAAOvC,EAAKY,MAAMkI,SAClB0E,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC6H,SAAU7E,EAAE3B,OAAOC,WAE/Cb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,kBAqDZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,8BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAFhD,gBAQRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aA3NvB7B,EAAKY,MAAO,CACR8C,KAAM,GAENS,MAAO,GAEPwE,GAAI,GACJC,IAAK,GAELF,UAAW,GACXG,MAAO,GACPC,SAAU,GAEVqE,UAAU,GAdAnN,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAmP,EAAAtP,GAAAsP,EAAA,CAA+CxM,aCHlCoN,EAAb,SAAAlQ,GACI,SAAAkQ,EAAYjQ,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6P,IACdhQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+P,GAAA1P,KAAAH,KAAMJ,KAWV+C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBACZ,MAAhBD,GACA7M,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB4M,KAfR7M,EAkBlB+M,UAAY,WACR,IAAMkD,EAAgB,CAClBzH,SAAUxI,EAAKY,MAAM4H,SACrBL,YAAanI,EAAKY,MAAMuH,YACxBC,SAAUpI,EAAKY,MAAMwH,SACrBC,WAAYrI,EAAKY,MAAMyH,WACvBC,eAAgBtI,EAAKY,MAAM0H,eAC3BC,YAAavI,EAAKY,MAAM2H,aAG5BvI,EAAKD,MAAMiN,OAAOiD,IA5BJjQ,EA+BlByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,iCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,yBAAf,oBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,wBACHN,UAAU,eACVwL,YAAY,0CACZ9K,MAAOvC,EAAKY,MAAMuH,YAClB/F,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACkH,YAAalE,EAAE3B,OAAOC,WAEtDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,mBAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,sBAAf,qBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,qBACHN,UAAU,eACVwL,YAAY,mDACZ9K,MAAOvC,EAAKY,MAAMwH,SAClBhG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACmH,SAAUnE,EAAE3B,OAAOC,WAEnDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,oBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,4BAAf,uBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,2BACHN,UAAU,eACVwL,YAAY,gDACZ9K,MAAOvC,EAAKY,MAAM0H,eAClBlG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACqH,eAAgBrE,EAAE3B,OAAOC,WAEzDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,uBAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,yBAAf,2BACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,wBACHN,UAAU,eACVwL,YAAY,8CACZ9K,MAAOvC,EAAKY,MAAM2H,YAClBnG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACsH,YAAatE,EAAE3B,OAAOC,WAEtDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,wBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,cAAf,6BACAN,EAAAC,EAAAC,cAAA,UACIO,GAAG,aAAaN,UAAU,eAC1BU,MAAOvC,EAAKY,MAAMyH,WAClBjG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACoH,WAAYpE,EAAE3B,OAAOC,UACjDb,EAAAC,EAAAC,cAAA,UAAQW,MAAO,YAAWgB,IAAI,KAA9B,aACA7B,EAAAC,EAAAC,cAAA,UAAQW,MAAO,UAAWgB,IAAI,KAA9B,WACA7B,EAAAC,EAAAC,cAAA,UAAQW,MAAO,SAAWgB,IAAI,KAA9B,WAEJ7B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,4BAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,sBAAf,YACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,WACLE,GAAG,qBACHN,UAAU,eACVwL,YAAY,iCACZ9K,MAAOvC,EAAKY,MAAM4H,SAClBpG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACuH,SAAUvE,EAAE3B,OAAOC,WAEnDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,mCAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,+BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAMgE,WAFhD,WAMJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,8BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAFhD,eAQRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aA1JnB7B,EAAKY,MAAO,CACR4H,SAAU,GACVL,YAAa,GACbC,SAAU,GACVC,WAAY,YACZC,eAAgB,GAChBC,YAAa,IARHvI,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA+P,EAAAlQ,GAAAkQ,EAAA,CAAqDpN,aCGxCsN,EAAb,SAAApQ,GACI,SAAAoQ,EAAYnQ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+P,IACflQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiQ,GAAA5P,KAAAH,KAAMJ,KAkBViI,eAAiB,WAAM,IAAAsG,EACoCtO,EAAKY,MAAboC,GAD5BsL,EACZC,cADYD,EACGE,qBADHvO,OAAAwO,EAAA,EAAAxO,CAAAqO,EAAA,2CAGnBjP,EACI,gBACA,OACAmB,KAAKC,UAAUuC,IACjBlC,KAAM,SAAAC,GACe,MAAfA,EAAIC,OACJhB,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAmBD,EAAK0O,YAAxB,CAAqCF,qBAAsB,iCAE3DxO,EAAKiB,SAAS,CACVuN,qBAAsB,uHAG/BjN,MAAO,SAAAC,GACNxB,EAAKiB,SAAS,CACVuN,qBAAsB,8EApCfxO,EAyCnB2O,eAAiB,SAACC,GAAD,OAAS5O,EAAKiB,SAAS,SAACL,EAAOb,GAC5C,MAAO,CAACwO,cAAe3N,EAAM2N,cAAgBK,MA1C9B5O,EA8CnB6O,aAAe,kBAAM7O,EAAKiB,SAAS,SAACL,EAAOb,GACvC,OAAOC,EAAK2O,eAAe,MA/CZ3O,EAkDnB8O,aAAe,kBAAM9O,EAAKiB,SAAS,SAACL,EAAOb,GACvC,OAAOC,EAAK2O,gBAAgB,MAnDb3O,EAsDnB+O,aAAe,WACX/O,EAAKiB,SAAS,CAACsN,cAAe,KAvDfvO,EA0DnByB,OAAS,WACL,OAAOzB,EAAKY,MAAM2N,eAClB,KAAK,EACD,OACI7M,EAAAC,EAAAC,cAACuO,EAAD,CACInD,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAACwH,MAAOzF,KACvC8J,gBAAkB,kBAAM9M,EAAKY,MAAM6H,OACnCwG,YAAajP,EAAKD,MAAMkP,YACxBrB,OAAS5N,EAAK6O,eAE1B,KAAK,EACD,OACInN,EAAAC,EAAAC,cAACwO,EAAD,CACIpD,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAAC0G,aAAc3E,KAC9C8J,gBAAkB,kBAAM9M,EAAKY,MAAM+G,cACnCsH,YAAajP,EAAKD,MAAMkP,YACxBlL,OAAS/D,EAAK8O,aACdlB,OAAS5N,EAAK6O,eAG1B,KAAK,EACA7O,EAAKgI,iBACLhI,EAAK6O,eAEV,KAAK,EACD,OACInN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM4N,sBAChB9M,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBW,QAASxC,EAAK+O,cAAlD,cAGZ,QACM/O,EAAK+O,iBAxFX/O,EAAKY,MAAQ,CACT6H,MAAO,KAEPd,aAAc,KAEd4G,cAAe,EAEfC,qBAAsB,IAG1BxO,EAAK0O,YAAc,CACfjG,MAAO,KAEPd,aAAc,MAfH3H,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAiQ,EAAApQ,GAAAoQ,EAAA,CAA0CtN,qBCE7ByN,EAAb,SAAAvQ,GACI,SAAAuQ,EAAYtQ,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkQ,IACdrQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoQ,GAAA/P,KAAAH,KAAMJ,KAgBV+C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBACZ,MAAhBD,GACA7M,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB4M,KApBR7M,EAuBlBqP,kBAAoB,SAACC,GACjB,OAAOA,EAAIrC,QAAQ,gBAAiB,KAxBtBjN,EA2BlB+M,UAAY,WACR,IAAMvD,EAAY,CACd9F,KAAM1D,EAAKY,MAAM8C,KAEjBS,MAAOnE,EAAKY,MAAMuD,MAElBwE,GAAI3I,EAAKY,MAAM+H,GACfC,IAAK5I,EAAKY,MAAMgI,KAIpB5I,EAAKD,MAAMiN,OAAOxD,IAtCJxJ,EAyClBqL,OAAS,WACL,IAAI1C,EAAK3I,EAAKY,MAAM+H,GAAGsE,QAAQ,UAAW,IACtCrE,EAAM5I,EAAKY,MAAMgI,IAAIqE,QAAQ,UAAW,IAExB,KAAfrE,EAAIvB,QAAiBiJ,oBAAU1H,IAAwB,IAAdD,EAAGtB,QAAgBiJ,oBAAU3H,IACvEC,EAAqB,KAAfA,EAAIvB,OAAgBuB,EAAM,KAChCD,EAAmB,IAAdA,EAAGtB,OAAesB,EAAK,KAE5BtJ,EACI,2BACA,OACAmB,KAAKC,UAAU,CAACmI,IAAKA,EAAKD,GAAIA,EAAI2C,KAAM,YAC1CxK,KAAM,SAAAC,GACJ,OAAOA,EAAIM,SACZP,KAAM,SAAAkC,GACD/C,OAAO4G,KAAK7D,GAAMqE,OAAS,EAC3BrH,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB+C,EAAlB,CAAwBkK,QAASzH,EAAWzC,EAAKkK,SAAUC,UAAU,KAErEnN,EAAKiB,SAAS,CAAEkM,UAAU,MAGjC5L,MAAO,SAAAC,GACJxB,EAAKiB,SAAS,CAACkM,UAAU,OAI7BnN,EAAKiB,SAAS,CAACkM,UAAU,KAnEfnN,EAuElByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,oCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,gBAAf,MACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,eACHN,UAAU,eACVwL,YAAY,8BACZ9K,MAAOvC,EAAKY,MAAM+H,GAClB2E,OAAQtN,EAAKqL,OACbjJ,SAAU,SAAC6B,GAAD,OAAKjE,EAAKiB,SAAS,CAAC0H,GAAI1E,EAAE3B,OAAOC,WAE/Cb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,8BAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,iBAAf,OACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,gBACHN,UAAU,eACVwL,YAAY,+BACZ9K,MAAOvC,EAAKY,MAAMgI,IAClB0E,OAAQtN,EAAKqL,OACbjJ,SAAU,SAAC6B,GAAD,OAAKjE,EAAKiB,SAAS,CAAC2H,IAAK3E,EAAE3B,OAAOC,WAEhDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,qCAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,kBAAf,QACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,iBACHN,UAAU,eACVwL,YAAY,gCACZ9K,MAAOvC,EAAKY,MAAM8C,KAClB8J,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAC6B,GAAD,OAAKjE,EAAKiB,SAAS,CAACyC,KAAMO,EAAE3B,OAAOC,WAEjDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,oBAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,mBAAf,SACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,kBACHN,UAAU,eACVwL,YAAY,iCACZ9K,MAAOvC,EAAKY,MAAMuD,MAClBqJ,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAC6B,GAAD,OAAKjE,EAAKiB,SAAS,CAACkD,MAAOF,EAAE3B,OAAOC,WAElDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,qBA6DRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,8BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAFhD,gBAQRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aArNvB7B,EAAKY,MAAQ,CACT8C,KAAM,GAENS,MAAO,GAEPwE,GAAI,GACJC,IAAK,GAGLuE,UAAU,GAGdnN,EAAK6M,aAAe,GAdN7M,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAoQ,EAAAvQ,GAAAuQ,EAAA,CAAmDzN,aCJtC2N,EAAb,SAAAzQ,GACI,SAAAyQ,EAAYxQ,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoQ,IACdvQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsQ,GAAAjQ,KAAAH,KAAMJ,KAWVsL,OAAS,WACL,IAAIlC,EAAQnJ,EAAKY,MAAMuI,MAAM8D,QAAQ,UAAW,IAE5C9D,EAAM9B,QAAU,EAChBhI,EACI,2BACA,OACAmB,KAAKC,UAAU,CAAC0I,MAAOA,EAAOmC,KAAM,WACtCxK,KAAM,SAAAC,GACJ,OAAOA,EAAIM,SACZP,KAAM,SAAAkC,GACD/C,OAAO4G,KAAK7D,GAAMqE,OAAS,EAC3BrH,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB+C,EAAlB,CAAwBmK,UAAU,KAElCnN,EAAKiB,SAAS,CAAEkM,UAAU,MAGjC5L,MAAO,SAAAC,GACJxB,EAAKiB,SAAS,CAAEkM,UAAU,MAI9BnN,EAAKiB,SAAS,CAAEkM,UAAU,KAlChBnN,EAsClB8C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBAEhC,GAAoB,MAAhBD,EAAsB,CACtB,IAAMmB,EAAqC,MAAtBnB,EAAa1D,OAC9B0D,EAAa1D,MAAM9B,OAAS,EAEhCrH,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GACO4M,EADP,CAEIoB,mBAAoBD,OA/CdhO,EAoDlBqP,kBAAoB,SAACC,GACjB,OAAOA,EAAIrC,QAAQ,gBAAiB,KArDtBjN,EAwDlB+M,UAAY,WACR,IAAMpD,EAAoB3J,EAAKY,MAAMqN,mBAAqB,CACtD7E,OAAQpJ,EAAKY,MAAMwI,OACnBC,IAAKrJ,EAAKY,MAAMyI,IAChBF,MAAOnJ,EAAKY,MAAMuI,OAClB,KAEJnJ,EAAKD,MAAMiN,OAAOrD,IA/DJ3J,EAkElBkO,2BAA6B,SAAC3L,GAC1B,IAAM4L,GAAM5L,GAAcvC,EAAKY,MAAMuM,SACrCnN,EAAKiB,SAAS,CAAEgN,mBAAoB1L,EAAO4K,SAAUgB,KApEvCnO,EAwElByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,qCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLJ,UAAU,mBACVK,KAAK,iBACLkM,SAAUpO,EAAKY,MAAMqN,mBACrB7L,SAAW,kBAAIpC,EAAKkO,4BAA2B,MACnDxM,EAAAC,EAAAC,cAAA,SACIC,UAAU,oBADd,mBAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLJ,UAAU,mBACVK,KAAK,iBACLkM,QAASpO,EAAKY,MAAMqN,mBACpB7L,SAAW,kBAAIpC,EAAKkO,4BAA2B,MAEnDxM,EAAAC,EAAAC,cAAA,SACIC,UAAU,oBADd,oBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,iBAAf,SACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,gBACHN,UAAU,eACVwL,YAAY,kCACZ9K,MAAOvC,EAAKY,MAAMuI,MAClBqE,UAAWxN,EAAKY,MAAMqN,mBACtBX,OAAQtN,EAAKqL,OACbjJ,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACkI,MAAOlF,EAAE3B,OAAOC,WAEhDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,2BAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACPH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,kBAAf,UACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,iBACHiC,IAAKpE,EAAKwQ,eACV3O,UAAU,eACVwL,YAAY,mCACZ9K,MAAOvC,EAAKY,MAAMwI,OAClBoE,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACmI,OAAQnF,EAAE3B,OAAOC,WAEjDb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,qBAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,eAAf,OACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,cACHN,UAAU,eACVwL,YAAY,gCACZ9K,MAAOvC,EAAKY,MAAMyI,IAClBmE,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACoI,IAAKpF,EAAE3B,OAAOC,WAE9Cb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,uBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,+BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAMgE,WAFhD,WAMJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,8BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAFhD,gBAQRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAnLvB7B,EAAKY,MAAO,CACRwI,OAAQ,GACRC,IAAK,GACLF,MAAO,GAEP8E,oBAAoB,EACpBd,UAAU,GARAnN,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAsQ,EAAAzQ,GAAAyQ,EAAA,CAA0D3N,aCD7C6N,EAAb,SAAA3Q,GACI,SAAA2Q,EAAY1Q,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsQ,IACdzQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwQ,GAAAnQ,KAAAH,KAAMJ,KAcV+C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBACZ,MAAhBD,IACA7M,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB4M,IAClB3J,QAAQwB,IAAImI,KAnBF7M,EAuBlBqP,kBAAoB,SAACC,GACjB,OAAOA,EAAIrC,QAAQ,gBAAiB,KAxBtBjN,EA2BlB+M,UAAY,WACR,IAAM2D,EAAmB,CACrBlI,SAAUxI,EAAKY,MAAM4H,SACrBL,YAAanI,EAAKY,MAAMuH,YACxBC,SAAUpI,EAAKY,MAAMwH,SACrBC,WAAYrI,EAAKY,MAAMyH,WACvByF,SAAU9N,EAAKY,MAAMkN,SACrBxF,eAAgBtI,EAAKY,MAAM0H,eAC3BC,YAAavI,EAAKY,MAAM2H,aAG5BvI,EAAKD,MAAMiN,OAAO0D,IAtCJ1Q,EAyClByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,iCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,eAAf,oBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OAAOE,GAAG,cAAcN,UAAU,eAAewL,YAAY,0CAClE9K,MAAOvC,EAAKY,MAAMuH,YAAa/F,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACkH,YAAalE,EAAE3B,OAAOC,WAErFb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,mBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,YAAf,qBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OAAOE,GAAG,WAAWN,UAAU,eAAewL,YAAY,2CAC/D9K,MAAOvC,EAAKY,MAAMwH,SAAUhG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACmH,SAAUnE,EAAE3B,OAAOC,WAE/Eb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,oBAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,kBAAf,wBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OAAOE,GAAG,GAAGiC,IAAKpE,EAAKsI,eAAgBzG,UAAU,eAAewL,YAAY,gDACjF9K,MAAOvC,EAAKY,MAAM0H,eAAgBlG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACqH,eAAgBrE,EAAE3B,OAAOC,WAE3Fb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,uBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,kBAAf,4BACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OAAOE,GAAG,GAAGiC,IAAKpE,EAAKuI,YAAa1G,UAAU,eAAewL,YAAY,8CAC9E9K,MAAOvC,EAAKY,MAAM2H,YAAanG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACsH,YAAatE,EAAE3B,OAAOC,WAErFb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,wBAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,cAAf,6BACAN,EAAAC,EAAAC,cAAA,UACIO,GAAG,aAAaN,UAAU,eAC1BU,MAAOvC,EAAKY,MAAMyH,WAClBjG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACoH,WAAYpE,EAAE3B,OAAOC,UACjDb,EAAAC,EAAAC,cAAA,UAAQW,MAAO,YAAWgB,IAAI,KAA9B,aACA7B,EAAAC,EAAAC,cAAA,UAAQW,MAAO,UAAWgB,IAAI,KAA9B,WACA7B,EAAAC,EAAAC,cAAA,UAAQW,MAAO,SAAWgB,IAAI,KAA9B,WAEJ7B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,2BAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,YAAf,YACAN,EAAAC,EAAAC,cAAA,UACIO,GAAG,WAAWiC,IAAKpE,EAAK8N,SAAUjM,UAAU,eAC5CU,MAAOvC,EAAKY,MAAMkN,SAAU1L,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC6M,SAAU7J,EAAE3B,OAAOC,UAC3Eb,EAAAC,EAAAC,cAAA,UAAQW,OAAO,EAAOgB,IAAI,KAA1B,UACA7B,EAAAC,EAAAC,cAAA,UAAQW,OAAO,EAAOgB,IAAI,KAA1B,QAEJ7B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,qBAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,YAAf,YACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,WAAWE,GAAG,WAAWiC,IAAKpE,EAAKwI,SAAU3G,UAAU,eAAewL,YAAY,iCACvF9K,MAAOvC,EAAKY,MAAM4H,SAAUpG,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACuH,SAAUvE,EAAE3B,OAAOC,WAE/Eb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAjB,mCAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAMgE,WAA7F,WAEJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAA5F,eAIRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aApIvB7B,EAAKY,MAAQ,CACT4H,SAAU,GACVL,YAAa,GACbC,SAAU,GACVC,WAAY,YACZyF,UAAU,EACVxF,eAAgB,GAChBC,YAAa,IAGjBvI,EAAK6M,aAAe,GAZN7M,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAwQ,EAAA3Q,GAAA2Q,EAAA,CAAyD7N,aCC5C+N,EAAb,SAAA7Q,GACI,SAAA6Q,EAAY5Q,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwQ,IACd3Q,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0Q,GAAArQ,KAAAH,KAAMJ,KAcVsL,OAAS,WACL,IAAI3B,EAAO1J,EAAKY,MAAM8I,KAAKuD,QAAQ,YAAa,IAE5CvD,EAAKrC,QAAU,GACfhI,EACI,2BACA,OACAmB,KAAKC,UAAU,CAACiJ,KAAMA,EAAM4B,KAAM,UACpCxK,KAAM,SAAAC,GACJ,OAAOA,EAAIM,SACZP,KAAM,SAAAkC,GACD/C,OAAO4G,KAAK7D,GAAMqE,OAAS,EAC3BrH,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB+C,EAAlB,CAAwBmK,UAAU,KAElCnN,EAAKiB,SAAS,CAAEkM,UAAU,MAGjC5L,MAAO,SAAAC,GACJxB,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkBD,EAAK6M,aAAvB,CAAqCM,UAAU,OAInDnN,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkBD,EAAK6M,aAAvB,CAAqCM,UAAU,MArCrCnN,EAyClB8C,kBAAoB,WAChB,IAAM+J,EAAe7M,EAAKD,MAAM+M,kBAChC,GAAoB,MAAhBD,EAAsB,CACtB,IAAM+D,IAAa/D,EAAanD,MAC5BmD,EAAanD,KAAKrC,OAAS,GAC/BrH,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAkB4M,EAAlB,CAAgC+D,SAAUA,OA9ChC5Q,EAkDlBqP,kBAAoB,SAACC,GACjB,OAAOA,EAAIrC,QAAQ,gBAAiB,KAnDtBjN,EAsDlB+M,UAAY,WACR,IAAMtD,EAAUzJ,EAAKY,MAAMgQ,SACrB,KACA,CACElN,KAAM1D,EAAKY,MAAM8C,KACjBmN,IAAK7Q,EAAKY,MAAMiQ,IAChBnH,KAAM1J,EAAKqP,kBAAkBrP,EAAKY,MAAM8I,MACxCmB,SAAU7K,EAAKY,MAAMiK,UAG7B7K,EAAKD,MAAMiN,OAAOvD,IAhEJzJ,EAmElB8Q,2BAA6B,SAACvO,GAC1B,IAAM4L,GAAM5L,GAAcvC,EAAKY,MAAMuM,SACrCnN,EAAKiB,SAAS,CAAE2P,SAAUrO,EAAO4K,SAAUgB,KArE7BnO,EAwElByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,kCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLJ,UAAU,mBACVK,KAAK,qBACLkM,QAASpO,EAAKY,MAAMgQ,SACpBxO,SAAW,kBAAIpC,EAAK8Q,4BAA2B,MACnDpP,EAAAC,EAAAC,cAAA,SACIC,UAAU,oBADd,gBAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLJ,UAAU,mBACVK,KAAK,qBACLkM,SAAUpO,EAAKY,MAAMgQ,SACrBxO,SAAW,kBAAIpC,EAAK8Q,4BAA2B,MAEnDpP,EAAAC,EAAAC,cAAA,SACIC,UAAU,oBADd,gBAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,gBAAf,QACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,eACHN,UAAU,eACVwL,YAAY,2BACZ9K,MAAOvC,EAAKY,MAAM8I,KAClB4D,OAAQtN,EAAKqL,OACbmC,SAAUxN,EAAKY,MAAMgQ,SACrBxO,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACyI,KAAMzF,EAAE3B,OAAOC,WAE/Cb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,4BAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,gBAAf,mBACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLE,GAAG,eACHN,UAAU,eACVwL,YAAY,8BACZ9K,MAAOvC,EAAKY,MAAM8C,KAClB8J,SAAUxN,EAAKY,MAAMuM,SACrB/K,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACyC,KAAMO,EAAE3B,OAAOC,WAE/Cb,EAAAC,EAAAC,cAAA,SACIC,UAAU,wBADd,oBAsCRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,+BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAMgE,WAFhD,WAMJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,8BACVW,QAAS,WAAMxC,EAAK+M,YAAa/M,EAAKD,MAAM6N,WAFhD,gBAQRlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAhMvB7B,EAAKY,MAAO,CACR8C,KAAM,GAENgG,KAAM,GAGNkH,UAAU,EAEVzD,UAAU,GAVAnN,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA0Q,EAAA7Q,GAAA6Q,EAAA,CAAiD/N,aCIpCmO,EAAb,SAAAjR,GACI,SAAAiR,EAAYhR,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4Q,IACf/Q,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8Q,GAAAzQ,KAAAH,KAAMJ,KA0BViI,eAAiB,WAAM,IAAAsG,EACoCtO,EAAKY,MAAboC,GAD5BsL,EACZC,cADYD,EACGE,qBADHvO,OAAAwO,EAAA,EAAAxO,CAAAqO,EAAA,2CAGnBjP,EACI,oBACA,OACAmB,KAAKC,UAAUuC,IACjBlC,KAAM,SAAAC,GACe,MAAfA,EAAIC,OACJhB,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAmBD,EAAK0O,YAAxB,CAAqCF,qBAAsB,iCAE3DxO,EAAKiB,SAAS,CACVuN,qBAAsB,uHAG/BjN,MAAO,SAAAC,GACNxB,EAAKiB,SAAS,CACVuN,qBAAsB,8EA5CfxO,EAiDnB2O,eAAiB,SAACC,GAAD,OAAS5O,EAAKiB,SAAS,SAACL,EAAOb,GAC5C,MAAO,CAACwO,cAAe3N,EAAM2N,cAAgBK,MAlD9B5O,EAsDnB6O,aAAe,kBAAM7O,EAAKiB,SAAS,SAACL,EAAOb,GACvC,OAAOC,EAAK2O,eAAe,MAvDZ3O,EA0DnB8O,aAAe,kBAAM9O,EAAKiB,SAAS,SAACL,EAAOb,GACvC,OAAOC,EAAK2O,gBAAgB,MA3Db3O,EA8DnB+O,aAAe,WACX/O,EAAKiB,SAAS,CAACsN,cAAe,KA/DfvO,EAkEnByB,OAAS,WACL,OAAOzB,EAAKY,MAAM2N,eAClB,KAAK,EACD,OAEI7M,EAAAC,EAAAC,cAACoP,EAAD,CACIhE,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAACuI,UAAWxG,KAC3C8J,gBAAkB,kBAAM9M,EAAKY,MAAM4I,WACnCyF,YAAajP,EAAKD,MAAMkP,YACxBrB,OAAS5N,EAAK6O,eAE1B,KAAK,EACD,OACInN,EAAAC,EAAAC,cAACqP,EAAD,CACIjE,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAAC0I,kBAAmB3G,KACnD8J,gBAAkB,kBAAM9M,EAAKY,MAAM+I,mBACnCsF,YAAajP,EAAKD,MAAMkP,YACxBlL,OAAS/D,EAAK8O,aACdlB,OAAS5N,EAAK6O,eAE1B,KAAK,EACD,OACInN,EAAAC,EAAAC,cAACsP,EAAD,CACIlE,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAACwI,QAASzG,KACzC8J,gBAAkB,kBAAM9M,EAAKY,MAAM6I,SACnCwF,YAAajP,EAAKD,MAAMkP,YACxBlL,OAAS/D,EAAK8O,aACdlB,OAAS5N,EAAK6O,eAG1B,KAAK,EAED,OACInN,EAAAC,EAAAC,cAACuP,EAAD,CACInE,OAAS,SAAAhK,GAAI,OAAIhD,EAAKiB,SAAS,CAACsI,iBAAkBvG,KAClD8J,gBAAkB,kBAAM9M,EAAKY,MAAM2I,kBACnC0F,YAAajP,EAAKD,MAAMkP,YACxBlL,OAAS/D,EAAK8O,aACdlB,OAAS5N,EAAK6O,eAG1B,KAAK,EACI7O,EAAKgI,iBACLhI,EAAK6O,eACN,KAAK,EACL,OACInN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACnBH,EAAAC,EAAAC,cAAA,UAAK5B,EAAKY,MAAM4N,sBAChB9M,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBW,QAASxC,EAAK+O,cAAlD,cAER,QACK/O,EAAK+O,iBAnHV/O,EAAKY,MAAQ,CACT4I,UAAW,KAEXG,kBAAmB,KAEnBF,QAAS,KAETF,iBAAkB,KAElBgF,cAAe,EAEfC,qBAAsB,IAG1BxO,EAAK0O,YAAc,CACflF,UAAW,KAEXG,kBAAmB,KAEnBF,QAAS,KAETF,iBAAkB,MAvBPvJ,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA8Q,EAAAjR,GAAAiR,EAAA,CAA0CnO,aCD7BwO,EAAb,SAAAtR,GACI,SAAAsR,EAAYrR,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiR,IACdpR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmR,GAAA9Q,KAAAH,KAAMJ,KAMVsR,YAAc,WAEV,OAAQrR,EAAKY,MAAM8K,gBACf,IAAK,UACD,OAAOhK,EAAAC,EAAAC,cAAC0P,EAAD,CACHrC,YAAajP,EAAKD,MAAMkP,cAEhC,IAAK,WACD,OAAOvN,EAAAC,EAAAC,cAAC2P,EAAD,CACHtC,YAAajP,EAAKD,MAAMkP,cAEhC,IAAK,UACD,OAAOvN,EAAAC,EAAAC,cAAC4P,EAAD,CACHvC,YAAajP,EAAKD,MAAMkP,cAEhC,QACI,OAAOvN,EAAAC,EAAAC,cAAC0P,EAAD,CACHrC,YAAajP,EAAKD,MAAMkP,gBAxBtBjP,EA+BlByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAC6P,EAAD,CACIhF,QAAS,kBAAIzM,EAAKiB,SAAS,CAACyK,eAAgB,aAC5CgB,SAAU,kBAAI1M,EAAKiB,SAAS,CAACyK,eAAgB,cAC7CiB,QAAS,kBAAI3M,EAAKiB,SAAS,CAACyK,eAAgB,gBAGpDhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACT7B,EAAKqR,iBAxCnBrR,EAAKY,MAAQ,CACT8K,eAAgB,IAHN1L,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAmR,EAAAtR,GAAAsR,EAAA,CAA0CxO,aCH7B8O,EAAb,SAAA5R,GACI,SAAA4R,EAAY3R,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuR,IACf1R,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyR,GAAApR,KAAAH,KAAMJ,KAUViI,eAAiB,WACb,IAAMhF,EAAO,CACT2O,aAAc3R,EAAKY,MAAM+Q,aACzBC,aAAc5R,EAAKY,MAAMgR,cAGzB5R,EAAKY,MAAMiR,mBAAqB7R,EAAKY,MAAMgR,cAC3C5R,EAAKY,MAAMgR,aAAavK,OAAS,EACjCrH,EAAKiB,SAAS,CACVC,QAAS,wEACT4Q,cAAe,iBAInB9R,EAAKiB,SAAS,CACVC,QAAS,oCACT4Q,cAAe,iBAGnBzS,EAAa,wBAAyB,OAAQmB,KAAKC,UAAUuC,IAC5DlC,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJhB,EAAKiB,SAAS,CACVC,QAAS,kBACT4Q,cAAe,eACfH,aAAc,GACdC,aAAc,GACdC,iBAAkB,KAGtB7R,EAAKiB,SAAS,CACVC,QAAS,0CACT4Q,cAAe,kBAG1BvQ,MAAM,SAAAC,QA9CIxB,EAqDnByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,eAAf,iBACAN,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVI,KAAK,WACLE,GAAG,cACHI,MAAOvC,EAAKY,MAAM+Q,aAClBvP,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAAC0Q,aAAc1N,EAAE3B,OAAOC,aAI/Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,eAAf,eACAN,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVI,KAAK,WACLE,GAAG,cACHI,MAAOvC,EAAKY,MAAMgR,aAClBxP,SAAU,SAAA6B,GACNjE,EAAKiB,SAAS,CAAC2Q,aAAc3N,EAAE3B,OAAOC,aAKtDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,mBAAf,qBACAN,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVI,KAAK,WACLE,GAAG,kBACHI,MAAOvC,EAAKY,MAAMiR,iBAClBzP,SAAU,SAAA6B,GACNjE,EAAKiB,SAAS,CAAC4Q,iBAAkB5N,EAAE3B,OAAOC,aAK1Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,UACIK,KAAK,SACLJ,UAAU,kBACVW,QAASxC,EAAKgI,gBAHlB,gBAOJtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW7B,EAAKY,MAAMkR,eAAgB9R,EAAKY,MAAMM,YA1GlElB,EAAKY,MAAQ,CACT+Q,aAAc,GACdC,aAAc,GACdC,iBAAkB,GAClB3Q,QAAS,sBACT4Q,cAAe,eAPJ9R,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAyR,EAAA5R,GAAA4R,EAAA,CAAoC9O,aCAvBmP,EAAb,SAAAjS,GACI,SAAAiS,EAAYhS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4R,IACf/R,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8R,GAAAzR,KAAAH,KAAMJ,KAQViI,eAAiB,WACb3I,EAAa,0BAA2B,OAAQmB,KAAKC,UAAU,CAC3DuR,oBAAqBhS,EAAKY,MAAMoR,uBAEnClR,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJhB,EAAKiB,SAAS,CACVC,QAAS,yBACT4Q,cAAe,iBAGnB9R,EAAKiB,SAAS,CACVC,QAAS,wBACT4Q,cAAe,kBAG1BvQ,MAAM,SAAAC,GACHxB,EAAKiB,SAAS,CACVC,QAAS,8CACT4Q,cAAe,mBA5BR9R,EAiCnB8C,kBAAoB,WAChBzD,EAAa,0BAA2B,OACvCyB,KAAK,SAAAC,GAAG,OAAIA,EAAIM,SAChBP,KAAK,SAAAmR,GAAI,OAAIjS,EAAKiB,SAAS,CACxB+Q,oBAAqBC,EAAKD,oBAC1B9Q,QAAS,KACT4Q,cAAgB,mBAEnBvQ,MAAM,SAAAC,GACH0B,QAAQwB,IAAIlD,GACZxB,EAAKiB,SAAS,CACVC,QAAS,wBACT4Q,cAAe,mBA7CR9R,EAkDnBkS,qBAAuB,WACnBlS,EAAKgI,kBAnDUhI,EAsDnByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,yCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,SACIK,KAAK,WACLJ,UAAU,uBACVM,GAAG,eACHiM,QAASpO,EAAKY,MAAMoR,oBACpB5P,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CACvB+Q,oBAAqB/N,EAAE3B,OAAO8L,aAGtC1M,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuBG,QAAQ,gBAAhD,4DAGRN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW7B,EAAKY,MAAMkR,eAAgB9R,EAAKY,MAAMM,YAzElElB,EAAKY,MAAQ,CACToR,qBAAqB,EACrB9Q,QAAS,GACT4Q,cAAe,IALJ9R,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA8R,EAAAjS,GAAAiS,EAAA,CAAkCnP,aCCrBuP,EAAb,SAAArS,GACI,SAAAqS,EAAYpS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgS,IACfnS,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkS,GAAA7R,KAAAH,KAAMJ,KAOV0B,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwQ,EAAD,MACJ1Q,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyQ,EAAD,MACJ3Q,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAdvB7B,EAAKY,MAAQ,GAFEZ,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAkS,EAAArS,GAAAqS,EAAA,CAA8BvP,aCajB0P,EAAb,SAAAxS,GACI,SAAAwS,EAAYvS,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmS,IACdtS,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqS,GAAAhS,KAAAH,KAAMJ,KAOVP,KAAQ,SAACkM,GACL,OAASA,GACL,IAAK,UACD,OAAOhK,EAAAC,EAAAC,cAAC2Q,EAAD,CACHtD,YAAajP,EAAKD,MAAMkP,cAEhC,IAAK,YACD,OAAOvN,EAAAC,EAAAC,cAAC4Q,EAAD,CACHvD,YAAajP,EAAKD,MAAMkP,cAEhC,IAAK,WACD,OAAOvN,EAAAC,EAAAC,cAAC6Q,EAAD,CACHxD,YAAajP,EAAKD,MAAMkP,cAEhC,IAAK,WACD,OACIvN,EAAAC,EAAAC,cAAC8Q,EAAD,MAER,QACI,OAAOhR,EAAAC,EAAAC,cAAC2Q,EAAD,CACHtD,YAAajP,EAAKD,MAAMkP,gBA5BtBjP,EAiClBoF,YAAc,WACVpF,EAAKiB,SAAS,CAACyK,eAAgB,cAlCjB1L,EAqClByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+Q,EAAD,CACIlO,SAAUzE,EAAKD,MAAM0E,SACrBW,YAAapF,EAAKoF,cAEtB1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAACgR,EAAD,CACItN,QAAS,kBAAItF,EAAKiB,SAAS,CAACyK,eAAgB,aAC5CnG,UAAW,kBAAIvF,EAAKiB,SAAS,CAACyK,eAAgB,eAC9ClG,SAAU,kBAAIxF,EAAKiB,SAAS,CAACyK,eAAgB,kBAIzDhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACT7B,EAAKR,KAAKQ,EAAKY,MAAM8K,mBApDnC1L,EAAKY,MAAQ,CACTiS,UAAW7S,EAAKD,MAAM+S,SACtBpH,eAAgB,WAJN1L,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAqS,EAAAxS,GAAAwS,EAAA,CAAoC1P,aCdvBmQ,EAAb,SAAAjT,GACI,SAAAiT,EAAYhT,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4S,IACd/S,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8S,GAAAzS,KAAAH,KAAMJ,KAMV0B,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,YACVoD,KAAK,QACLD,aAAW,iBAEXtD,EAAAC,EAAAC,cAAA,UACIK,KAAK,SACLO,QAASxC,EAAKD,MAAMuF,QACpBzD,UAAU,mBAHd,cAMAH,EAAAC,EAAAC,cAAA,UACIK,KAAK,SACLO,QAASxC,EAAKD,MAAMwF,UACpB1D,UAAU,mBAHd,iBAlBR7B,EAAKY,MAAQ,GAFCZ,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA8S,EAAAjT,GAAAiT,EAAA,CAAoCnQ,aCGvBoQ,GAAb,SAAAlT,GACI,SAAAkT,EAAYjT,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6S,IACdhT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+S,GAAA1S,KAAAH,KAAMJ,KAOVkT,QAAU,WACN5T,EAAa,kBAAmB,OAAQmB,KAAKC,UAAU,CACnDuJ,gBAAiBhK,EAAKY,MAAMoJ,gBAC5B7H,GAAInC,EAAKY,MAAMuB,GACfnB,OAAQ,aAEXF,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJhB,EAAKD,MAAMoK,aAEXnK,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GACOD,EAAKY,MADZ,CAEIM,QAAS,+DApBPlB,EAyBlByB,OAAS,WACL,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,oCAEIH,EAAAC,EAAAC,cAAA,SACIC,UAAU,gBACT7B,EAAKY,MAAM8C,OAGpBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,WAEIH,EAAAC,EAAAC,cAAA,SACIC,UAAU,gBACT0E,EAAYvG,EAAKY,MAAMoC,QAGhCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,kBAEIH,EAAAC,EAAAC,cAAA,SACIC,UAAU,gBACT7B,EAAKY,MAAMsS,aAGpBxR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe7B,EAAKY,MAAMM,UAG5CQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,+BACVW,QAAUxC,EAAKD,MAAMoK,YAFzB,WAMJzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,mCACVW,QAAUxC,EAAKiT,SAFnB,eA7DZjT,EAAKY,MAALX,OAAAiE,EAAA,EAAAjE,CAAA,GACOD,EAAKD,MAAMiD,KADlB,CAEI9B,QAAS,KAJClB,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA+S,EAAAlT,GAAAkT,EAAA,CAAoCpQ,aCAvBuQ,GAAb,SAAArT,GACI,SAAAqT,EAAYpT,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgT,IACdnT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkT,GAAA7S,KAAAH,KAAMJ,KAOVqT,OAAS,WACL/T,EAAa,kBAAmB,OAAQmB,KAAKC,UAAU,CACnDuJ,gBAAiBhK,EAAKY,MAAMoJ,gBAC5B7H,GAAInC,EAAKY,MAAMuB,GACfnB,OAAQ,YAEXF,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJhB,EAAKD,MAAMoK,aAEXnK,EAAKiB,SAALhB,OAAAiE,EAAA,EAAAjE,CAAA,GACOD,EAAKY,MADZ,CAEIM,QAAS,+DApBPlB,EAwBlByB,OAAS,WACL,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,oCAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgB7B,EAAKY,MAAM8C,OAEhDhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,WAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgB0E,EAAYvG,EAAKY,MAAMoC,QAE5DtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,kBAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgB7B,EAAKY,MAAMsS,aAEhDxR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe7B,EAAKY,MAAMM,UAG5CQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BW,QAAUxC,EAAKD,MAAMoK,YAAtE,WAEJzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAAkCW,QAAUxC,EAAKoT,QAAnE,gBA/CZpT,EAAKY,MAALX,OAAAiE,EAAA,EAAAjE,CAAA,GACOD,EAAKD,MAAMiD,KADlB,CAEI9B,QAAS,KAJClB,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAkT,EAAArT,GAAAqT,EAAA,CAAmCvQ,aCGtByQ,GAAb,SAAAvT,GACI,SAAAuT,EAAYtT,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkT,IACfrT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoT,GAAA/S,KAAAH,KAAMJ,KAQVsL,OAAS,WACLhM,EAAa,UAAW,OAAQmB,KAAKC,UAAU,CAC3C6K,KAAM,uBAGTxK,KAAK,SAAAC,GAAG,OAAEA,EAAIM,SACdP,KAAK,SAAA8F,GACF,IAAI5D,EAAO,GACX4D,EAAOvD,IAAK,SAACkI,EAAKC,GAAN,OAAcxI,EAAKwI,GAAOD,IAEtCvL,EAAKiB,SAAS,CAAC+B,KAAMA,MAExBzB,MAAM,SAAAC,GACH0B,QAAQwB,IAAI,YAtBD1E,EA0BnB8C,kBAAoB,WAChB9C,EAAKqL,UA3BUrL,EA8BnBsT,WAAa,SAAC/H,GACVvL,EAAKiB,SAAS,CAACyK,eAAgB,SAAUC,aAAcJ,KA/BxCvL,EAkCnBuT,YAAc,SAAChI,GACXvL,EAAKiB,SAAS,CAACyK,eAAgB,UAAWC,aAAcJ,KAnCzCvL,EAsCnBwT,WAAa,SAACjI,GACVvL,EAAKiB,SAAS,CAACyK,eAAgB,SAAUC,aAAcJ,KAvCxCvL,EA0CnB8L,YAAc,WAEV,GAAuB,MAAnB9L,EAAKY,MAAMoC,KAkCf,OA/Bc/C,OAAO8L,OAAO/L,EAAKY,MAAMoC,MAAMK,IAAI,SAACkI,EAAK1H,GAEnD,OACAnC,EAAAC,EAAAC,cAAA,MAAI2B,IAAKM,GACLnC,EAAAC,EAAAC,cAAA,UAAKiC,EAAI,GACTnC,EAAAC,EAAAC,cAAA,UAAK2J,EAAIvB,iBACTtI,EAAAC,EAAAC,cAAA,UAAK2J,EAAI7H,MACThC,EAAAC,EAAAC,cAAA,UAAM2E,EAAYgF,EAAIvI,OACtBtB,EAAAC,EAAAC,cAAA,UAAK2J,EAAI2H,YACTxR,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIC,UAAU,eACVW,QAAS,WAAKxC,EAAKwT,WAAWjI,KAFlC,YAKA7J,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,UACIC,UAAU,iBACVW,QAAS,WAAKxC,EAAKsT,WAAW/H,KAFlC,YAKA7J,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVW,QAAS,WAAKxC,EAAKuT,YAAYhI,KAFnC,gBArEGvL,EAiFnBgM,KAAO,WACH,OACItK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,KACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,4BACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,cACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBAGRvG,EAAAC,EAAAC,cAAA,aACK5B,EAAK8L,kBAhGP9L,EAuGnBiM,eAAiB,WACb,IAAM9B,EAAa,WAAOnK,EAAKiB,SAAS,CAACyK,eAAgB,SAAU1L,EAAKqL,UACxE,OAAQrL,EAAKY,MAAM8K,gBACf,IAAK,OACD,OAAO1L,EAAKgM,OAChB,IAAK,SACD,OAAQtK,EAAAC,EAAAC,cAACwK,EAAD,CACIjC,WAAYA,EACZnH,KAAMhD,EAAKY,MAAM+K,eAEjC,IAAK,UACD,OAAQjK,EAAAC,EAAAC,cAAC6R,GAAD,CACItJ,WAAYA,EACZnH,KAAMhD,EAAKY,MAAM+K,cAFrB,KAKZ,IAAK,SACD,OAAOjK,EAAAC,EAAAC,cAAC8R,GAAD,CACKvJ,WAAYA,EACZnH,KAAMhD,EAAKY,MAAM+K,cAFtB,KAKX,QACI,OAAOjK,EAAAC,EAAAC,cAAA,sBA9HA5B,EAkInByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACT7B,EAAKiM,iBACXvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aApInB7B,EAAKY,MAAQ,CACT8K,eAAgB,OAChBW,WAAY,KACZrJ,KAAM,MALKhD,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAAoT,EAAAvT,GAAAuT,EAAA,CAA2CzQ,aCK9B+Q,GAAb,SAAA7T,GACI,SAAA6T,EAAY5T,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwT,IACf3T,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0T,GAAArT,KAAAH,KAAMJ,KAQVsL,OAAS,WACLhM,EAAa,UAAW,OAAQmB,KAAKC,UAAU,CAC3C6K,KAAM,uBAETxK,KAAK,SAAAC,GAAG,OAAEA,EAAIM,SACdP,KAAK,SAAA8F,GACF,IAAI5D,EAAO,GACX4D,EAAOvD,IAAK,SAACkI,EAAKC,GAAN,OAAcxI,EAAKwI,GAAOD,IAEtCvL,EAAKiB,SAAS,CAAC+B,KAAMA,MAExBzB,MAAM,SAAAC,GACH0B,QAAQwB,IAAI,YArBD1E,EAyBnB8C,kBAAoB,WAChB9C,EAAKqL,UA1BUrL,EA6BhB6L,WAAa,SAACN,GACbvL,EAAKiB,SAAS,CAACyK,eAAgB,SAAUC,aAAcJ,KA9BxCvL,EAiCnB8L,YAAc,WACV,GAAuB,MAAnB9L,EAAKY,MAAMoC,KAmBf,OAhBc/C,OAAO8L,OAAO/L,EAAKY,MAAMoC,MAAMK,IAAI,SAACkI,EAAK1H,GACnD,OACInC,EAAAC,EAAAC,cAAA,MAAI2B,IAAKM,EAAGhC,UAAuC,IAA5B0J,EAAIgB,oBAA4B,iBAAmB,gBACtE7K,EAAAC,EAAAC,cAAA,UAAKiC,EAAI,GACTnC,EAAAC,EAAAC,cAAA,UAAK2J,EAAIvB,iBACTtI,EAAAC,EAAAC,cAAA,UAAK2J,EAAI7H,MACThC,EAAAC,EAAAC,cAAA,UAAK2E,EAAYgF,EAAIvI,OACrBtB,EAAAC,EAAAC,cAAA,UAAiC,IAA5B2J,EAAIgB,oBAA4B,WAAa,mBAClD7K,EAAAC,EAAAC,cAAA,UAEIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBW,QAAS,WAAQxC,EAAK6L,WAAWN,KAArE,iBA/CDvL,EAwDnBgM,KAAO,WACH,OACItK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,KACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,4BACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,QACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,6BACAvG,EAAAC,EAAAC,cAAA,MAAIqG,MAAM,OAAV,iBAGRvG,EAAAC,EAAAC,cAAA,aACK5B,EAAK8L,kBAvEP9L,EA8EnBiM,eAAiB,WAEb,OAAQjM,EAAKY,MAAM8K,gBACf,IAAK,OACD,OAAO1L,EAAKgM,OAChB,IAAK,SACD,OAAOtK,EAAAC,EAAAC,cAACwK,EAAD,CACKjC,WAND,kBAAMnK,EAAKiB,SAAS,CAACyK,eAAgB,UAOpC1I,KAAMhD,EAAKY,MAAM+K,eAEjC,QACI,OAAOjK,EAAAC,EAAAC,cAAA,sBAzFA5B,EA6FnByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACT7B,EAAKiM,iBACPvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aA/FvB7B,EAAKY,MAAQ,CACT8K,eAAgB,OAChBW,WAAY,KACZrJ,KAAM,MALKhD,EADvB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA0T,EAAA7T,GAAA6T,EAAA,CAA6C/Q,aCGhCgR,GAAb,SAAA9T,GACI,SAAA8T,EAAY7T,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyT,IACd5T,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2T,GAAAtT,KAAAH,KAAMJ,KAOVP,KAAQ,SAACkM,GACL,OAASA,GACL,IAAK,UACD,OAAOhK,EAAAC,EAAAC,cAACiS,GAAD,CACH5E,YAAajP,EAAKD,MAAMkP,cAEhC,IAAK,YACD,OAAOvN,EAAAC,EAAAC,cAACkS,GAAD,CACH7E,YAAajP,EAAKD,MAAMkP,cAEhC,IAAK,WACD,OACIvN,EAAAC,EAAAC,cAAC8Q,EAAD,MAER,QACI,OAAOhR,EAAAC,EAAAC,cAACiS,GAAD,CACH5E,YAAajP,EAAKD,MAAMkP,gBAxBtBjP,EA6BlBoF,YAAc,WACVpF,EAAKiB,SAAS,CAACyK,eAAgB,cA9BjB1L,EAiClByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+Q,EAAD,CACIlO,SAAUzE,EAAKD,MAAM0E,SACrBW,YAAapF,EAAKoF,cAGtB1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAACmS,EAAD,CACIzO,QAAS,kBAAItF,EAAKiB,SAAS,CAACyK,eAAgB,aAC5CnG,UAAW,kBAAIvF,EAAKiB,SAAS,CAACyK,eAAgB,mBAI1DhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACT7B,EAAKR,KAAKQ,EAAKY,MAAM8K,mBAhDnC1L,EAAKY,MAAQ,CACTiS,UAAW7S,EAAKD,MAAM+S,SACtBpH,eAAgB,WAJN1L,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA2T,EAAA9T,GAAA8T,EAAA,CAAsChR,aCdzBoR,GAAb,SAAAlU,GACI,SAAAkU,EAAYjU,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6T,IACdhU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+T,GAAA1T,KAAAH,KAAMJ,KAQViI,eAAiB,WACb,IAAMhF,EAAO,CACTmB,MAAOnE,EAAKY,MAAMuD,MAClBxD,MAAOX,EAAKY,MAAMD,OAGtBtB,EAAa,kCAAmC,OAAQmB,KAAKC,UAAUuC,IACtElC,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJhB,EAAKiB,SAAS,CAACC,QAAS,4CAExBgC,QAAQwB,IAAI,UAEnBnD,MAAM2B,QAAQwB,MAtBD1E,EAyBlByB,OAAS,WACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,MACIC,UAAU,gBADd,oBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,SACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLJ,UAAU,eACVU,MAAOvC,EAAKY,MAAMuD,MAClB/B,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACkD,MAAOF,EAAE3B,OAAOC,aAIxDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,SACAN,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLJ,UAAU,eACVU,MAAOvC,EAAKY,MAAMD,MAClByB,SAAU,SAAA6B,GAAC,OAAEjE,EAAKiB,SAAS,CAACN,MAAOsD,EAAE3B,OAAOC,aAIxDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UACIK,KAAK,SACLJ,UAAU,iCACVW,QAASxC,EAAKD,MAAMgE,QAHxB,UAMArC,EAAAC,EAAAC,cAAA,UACIK,KAAK,SACLJ,UAAU,4BACVW,QAASxC,EAAKgI,gBAHlB,oBA5DhBhI,EAAKY,MAAQ,CACTuD,MAAO,GACPxD,MAAO,GACPO,QAAS,IALClB,EADtB,OAAAC,OAAA0C,EAAA,EAAA1C,CAAA+T,EAAAlU,GAAAkU,EAAA,CAAmCpR,aCM7BqR,eACF,SAAAA,EAAYlU,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8T,IACfjU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgU,GAAA3T,KAAAH,KAAMJ,KAQV+C,kBAAoB,WAIhBzD,EACI,aACA,OACFyB,KAAM,SAAAC,GACe,MAAfA,EAAIC,QACJD,EAAIM,OACHP,KAAM,SAAAkC,GAEHhD,EAAKiB,SAAS,CACV4R,UAAW7P,EACXkR,UAHc,CAAEC,EAAG,kBAAmBC,EAAG,qBAGpBpR,EAAKY,UAGjCrC,MAAO,SAAAC,GACJ0B,QAAQwB,IAAI,2BAIvBnD,MAAO,SAAAC,GACJ0B,QAAQwB,IAAI,iCAhCD1E,EAoCnByB,OAAS,WACL,IAAMb,EAAQZ,EAAKY,MAAMsT,UACzB,MAAc,iBAAVtT,EACQc,EAAAC,EAAAC,cAACyS,EAAD,CACJ/S,UAAY,kBAAMgT,OAAOC,SAASC,UAClCpT,OAAQ,aACRqB,WAAY,WAAQzC,EAAKiB,SAAS,CAAEiT,UAAW,qBAC/CxR,iBAAkB,kBAAI1C,EAAKiB,SAAS,CAACiT,UAAW,oBAChDjF,YAAajP,EAAKY,MAAM6T,eAIlB,oBAAV7T,EAEIc,EAAAC,EAAAC,cAAC8S,EAAD,CACI3Q,OAAQ,kBAAM/D,EAAKiB,SAAS,CAAEiT,UAAW,kBACzCjF,YAAajP,EAAKY,MAAM6T,eAKtB,oBAAV7T,EAEAc,EAAAC,EAAAC,cAAC+S,EAAD,CACI7B,SAAU9S,EAAKY,MAAMiS,UACrBpO,SAAU,kBAAIzE,EAAKiB,SAAS,CAACiT,UAAW,kBACxCjF,YAAajP,EAAKY,MAAM6T,eAKlB,sBAAV7T,EAEAc,EAAAC,EAAAC,cAACgT,GAAD,CACI9B,SAAU9S,EAAKY,MAAMiS,UACrBpO,SAAU,kBAAIzE,EAAKiB,SAAS,CAACiT,UAAW,kBACxCjF,YAAajP,EAAKY,MAAM6T,eAKlB,mBAAV7T,EAEIc,EAAAC,EAAAC,cAACiT,GAAD,CACI9Q,OAAQ,kBAAM/D,EAAKiB,SAAS,CAAEiT,UAAW,oBAK7CxS,EAAAC,EAAAC,cAAA,aAnFR5B,EAAKY,MAAQ,CACTsT,UAAW,eACXO,aAAc,wBACd5B,UAAW,MALA7S,6BADJ4C,aA0FnBkS,IAASrT,OAAOC,EAAAC,EAAAC,cAACmT,GAAD,MAAUC,SAASC,eAAe","file":"static/js/main.ad280691.chunk.js","sourcesContent":["\n// back-end url\nconst base_url = \"http://localhost:3001\";\n\nconst header = new Headers();\nheader.set(\"content-type\", \"application/json\");\n\n\n// This function is intended to forward the request in a single place and thus\n// it will be possible to encrypt all transferred data\nconst make_request = (url, method, body) => {\n\n    return (\n        fetch(base_url + url, {\n            headers: header,\n            credentials: \"include\",\n            method: method,\n            mode: \"cors\",\n            body: body,\n        })\n    );\n}\n\nexport { make_request };","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\n// should you pass a callback to be executed when the login\n// success (onSuccess) or fail  (onFail)\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            siape: \"\",\n            senha: \"\",\n            message: \"\",\n            logged: false,\n        };\n\n    }\n\n    authenticate = () => {\n        make_request(\n            \"/auth\",\n            \"POST\",\n            JSON.stringify({\n                operation: 'login',\n                siape: this.state.siape,\n                senha: this.state.senha,\n            })\n        ).then((res) => {\n            if (res.status !== 200) {\n                this.setState({\n                    message: \"Usuário não encontrado\",\n                    logged: false,\n                });\n                this.props.onFail();\n            } else if (res.status === 200) {\n                res.json()\n                    .then( ()=> {\n                        this.props.onSuccess();\n                    })\n                    .catch(err => {\n                        this.setState({ message: \"Tipo de usuário não identificado.\" });\n                    });\n            }\n        }).catch((err) => {\n            this.setState({\n                message: \"Não foi possível conectar com o servidor\",\n                logged: false,\n            });\n            this.props.onFail();\n        });\n    }\n\n    render = () => {\n        return (\n            <div className=\"container w-25 pt-5\">\n\n                <div className=\"row justify-content-center\">\n                    <h1 style={{fontFamily: 'Lobster'}}>MgmSys</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"siape\">Siape:</label>\n                        <input\n                            type=\"text\"\n                            name=\"siape\"\n                            id=\"siape\"\n                            className=\"form-control\"\n                            onChange={event => {\n                                this.setState({\n                                    siape: event.target.value\n                                })\n                            }}>\n                        </input>\n                    </div>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Senha:</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            className=\"form-control\"\n                            onChange={event => {\n                                this.setState({\n                                    senha: event.target.value\n                                })\n                            }}>\n                        </input>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <label className=\"text-danger text-small\">\n                        {this.state.message}\n                    </label>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-outline-secondary w-25 mr-2\"\n                        onClick={this.props.onRegister}>\n                        Registrar\n                    </button>\n\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-outline-primary w-25 ml-2\"\n                        onClick={this.authenticate}>\n                        Login\n                    </button>\n                </div>\n                <div className=\"row justify-content-center pt-2\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-warning btn-sm\"\n                        onClick={this.props.onForgetPassword}>\n                        Esqueceu a senha?\n                    </button>\n                </div>\n            </div>\n        );\n    }\n};\n\n","\nimport React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nexport class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departamentos: [],\n            warning: null,\n\n            credentials: {\n                operation: \"register\",\n                fk_id_departamento: null,\n                nome: null,\n                siape: null,\n                email: null,\n                senha: null,\n                tipo: null,\n            }\n        };\n    }\n\n    componentDidMount = () => {\n        this.fetchDepartaments();\n    }\n\n    fetchDepartaments = () => {\n        make_request(\n            \"/departamento\",\n            \"GET\"\n        ).then(res => {\n            return res.json();\n        }).then(data => {\n            this.setState({ departamentos: data });\n        }).catch(err => {\n            console.error(err);\n        });\n    };\n\n    getDepartaments = () => {\n        return (\n            this.state.departamentos.map(departamento => {\n                return (<option key={departamento.id_departamento} value={departamento.id_departamento}>\n                    {departamento.sigla + \" - \" + departamento.nome}\n                </option>);\n            })\n        );\n    };\n\n    getUserTypes = () => {\n        // 0 -> agente and 1 -> manager\n        return (\n            [\"Agente\", \"Gerente\"].map( (tipo, i) => <option key={i} value={i}>{ tipo }</option>)\n        );\n    }\n\n    sendCredentials = () => {\n        make_request(\n            \"/auth\",\n            \"POST\",\n            JSON.stringify(this.state.credentials)\n        ).then( res => {\n            if (res.status === 200)\n                this.props.onBack();\n            else\n                this.setState({warning: \"Dados inválidos\"});\n        }).catch( err => {\n            this.setState({warning: \"Dados inválidos\"});\n        });\n    }\n\n    render = () => {\n        return (\n            <div className=\"container w-50 pt-5\">\n                <div className=\"row justify-content-center\">\n                    <h1 style={{fontFamily: 'Lobster'}}>Cadastro de novos usuários</h1>\n                </div>\n                <br />\n                <div className=\"form-group\">\n                    <label htmlFor=\"siape\">Siape:</label>\n                    <input\n                        type=\"text\"\n                        name=\"siape\"\n                        id=\"siape\"\n                        className=\"form-control\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, siape: e.target.value\n                                }\n                            })\n                        }>\n                    </input>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">E-mail:</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"email\"\n                        className=\"form-control\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, email: e.target.value\n                                }\n                            })\n                        }>\n                    </input>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"nome\">Nome:</label>\n                    <input\n                        type=\"text\"\n                        name=\"nome\"\n                        id=\"nome\"\n                        className=\"form-control\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, nome: e.target.value\n                                }\n                            })\n                        }>\n                    </input>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"senha\">Senha:</label>\n                    <input\n                        type=\"password\"\n                        name=\"senha\"\n                        id=\"senha\"\n                        className=\"form-control\"\n                        ref={this.senha}\n                        onChange={\n                            e => {\n                                this.setState({\n                                    credentials: {\n                                        ...this.state.credentials, senha: e.target.value\n                                    }\n                                });\n                            }\n                        }></input>\n\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"tipo\">Tipo Usuário:</label>\n                    <select className=\"custom-select\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, tipo: e.target.value\n                                }\n                            })\n                        }>\n                        <option defaultValue>Selecione o tipo de usuário</option>\n                        {this.getUserTypes()}\n                    </select>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"departamento\">Departamento:</label>\n                    <select className=\"custom-select\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, fk_id_departamento: e.target.value\n                                }\n                            })\n                        }>\n                        <option defaultValue>Selecione um departamento</option>\n                        {this.getDepartaments()}\n                    </select>\n                </div>\n\n                <label className=\"text-danger\">{this.state.warning}</label>\n                <br />\n                <div className=\"container\">\n                    <div className=\"row justify-content-between\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            onClick={() => this.props.onBack()}>\n                            Voltar\n                        </button>\n                        <button\n                            className=\"btn btn-outline-primary\"\n                            onClick={() => { this.sendCredentials() }}>\n                            Cadastrar\n                        </button>\n                    </div>\n                </div>\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};\n","\nimport React, {Component} from \"react\";\nimport { make_request } from \"./request\";\n\nexport class DashboardNavbar extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n        console.log(props);\n    }\n\n    logout = () => {\n        make_request(\n            \"/auth\",\n            \"POST\",\n            JSON.stringify({operation: \"logout\"})\n        ).then( res => {\n            this.props.onLogout();\n        })\n        .catch(err=>{\n            console.log(err);\n        });\n    }\n\n    render = () => {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <a\n                    className=\"navbar-brand\"\n                    href=\"#begin\">\n                    Controle de Acesso\n                </a>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#begin\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Meus dados\n                            </a>\n                            <button\n                                className=\"navbar-toggler\"\n                                type=\"button\"\n                                data-toggle=\"collapse\"\n                                data-target=\"#navbarToggleExternalContent\"\n                                aria-controls=\"navbarToggleExternalContent\"\n                                aria-expanded=\"false\"\n                                aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n\n                            <div\n                                className=\"dropdown-menu\"\n                                aria-labelledby=\"navbarDropdown\">\n\n                                <button\n                                    className=\"dropdown-item\"\n                                    onClick={this.props.on_settings}>\n                                    Meus dados\n                                </button>\n\n                                <div className=\"dropdown-divider\"></div>\n\n                                <button\n                                    className=\"dropdown-item\"\n                                    onClick={this.logout}>\n                                    Sair\n                                </button>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    };\n\n};","import React, { Component } from \"react\";\n\n\nexport class AgentActions extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render = ()=>{\n        return(\n            <div\n                className=\"btn-group\"\n                role=\"group\"\n                aria-label=\"agent actions\"\n            >\n                <button type=\"button\" onClick={this.props.waiting} className=\"btn btn-primary\">Aguardando</button>\n                <button type=\"button\" onClick={this.props.processed} className=\"btn btn-primary\">Processados</button>\n                <button type=\"button\" onClick={this.props.register} className=\"btn btn-primary\">Cadastrar</button>\n            </div>\n        );\n    }\n};","\nimport React from \"react\";\n\n/**\n * Format the date string to the format that React can read\n * @param {string} date date as string retrived from Knex.js\n */\nconst date_parse = (date) => {\n    const tmp_dt = new Date(date);\n\n    let year = tmp_dt.getFullYear().toString();\n    let month = (tmp_dt.getMonth() + 1).toString();\n    let day = tmp_dt.getUTCDate().toString();\n\n    year = year.padStart(4, \"0\");\n    month = month.padStart(2, \"0\");\n    day = day.padStart(2, \"0\");\n\n    return [ year, month, day].reduce((p, a) => p + \"-\" + a);\n};\n\n/**\n * Format a date in portuguese format (ie, dd/MM/YYYY)\n * @param {string} date The string to be formated\n */\nconst format_date = (date) => {\n    const tmp = new Date(date);\n\n    let year  = tmp.getFullYear().toString();\n    let month = (tmp.getMonth() + 1).toString();\n    let day   = tmp.getUTCDate().toString();\n\n    year  = year.padStart(4, \"0\");\n    month = month.padStart(2, \"0\");\n    day   = day.padStart(2, \"0\");\n\n    return `${day}/${month}/${year}`;\n};\n\n/**\n * Copy an object. After copy:\n *  A === B and change(A) don't affect B\n * @param {object} source The object to be copied\n */\nconst deep_copy = (source) => {\n    if (!source) return null;\n\n    let result = {};\n\n    Object.keys(source).forEach( k => {\n        if (\"object\" === typeof source[k]){\n            const subobject = deep_copy(source[k]);\n            result[k] = subobject;\n        } else {\n            result[k] = source[k];\n        }\n    });\n\n    return result;\n};\n\n/**\n * Compare two objects and return all field that among them\n * @param {object} source The original object\n * @param {object} target The modified object'\n */\nconst check_changed_fields = (source, target) => {\n    let altered_values = {};\n\n    for (let field of Object.keys(source)) {\n        if (source[field] == null)\n            continue;\n\n        for (let subfield of Object.keys(source[field])) {\n            if (target[field][subfield] !== source[field][subfield]) {\n                if (!(field in altered_values)) {\n                    altered_values[field] = {};\n                }\n\n                altered_values[field][subfield] = target[field][subfield];\n            }\n        }\n    }\n\n    return altered_values;\n};\n\nexport { date_parse, check_changed_fields , deep_copy, format_date };","import React, { Component } from \"react\"\n\nimport { date_parse, check_changed_fields, deep_copy } from \"./utility\";\nimport { make_request } from \"./request\";\n\n\nexport class RequestEditAluno extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n\n        this.original_data = null;\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_aluno = this.props.data;\n            this.setState({...visita_aluno});\n            this.original_data = deep_copy(visita_aluno);\n        }\n    }\n\n    make_input = (object, field, type, value) => {\n        return <input\n            type={type}\n            className=\"form-control\"\n            value={value}\n            onChange={e =>{\n                let update_state = {};\n                update_state[object] = this.state[object];\n                update_state[object][field] = e.target.value;\n\n                this.setState(update_state);\n            }}>\n        </input>;\n    }\n\n    send_to_server = () => {\n        let visita_aluno = check_changed_fields(this.original_data, this.state);\n\n        if (\"visita_aluno\" in visita_aluno)\n            visita_aluno[\"visita_aluno\"][\"id_visita_aluno\"] = this.original_data[\"visita_aluno\"][\"id_visita_aluno\"];\n        if (\"aluno\" in visita_aluno)\n            visita_aluno[\"aluno\"][\"id_aluno\"] = this.original_data[\"aluno\"][\"id_aluno\"];\n\n        make_request(\"/visita_aluno\", \"PATCH\", JSON.stringify(visita_aluno))\n        .then(res => {\n            if (res.status === 200){\n                this.setState({message: \"Dados alterados com sucesso!\"});\n            } else {\n                this.setState({message: \"Não foi possível alterar os dados. Verifique se os campos estão preenchidos corretamente.\"});\n            }\n        })\n        .catch(err => {\n            this.setState({message: \"Um erro ocorreu! Tente novamente.\"})\n        });\n    }\n\n    render = ()=>{\n        if (!this.state.visita_aluno) return <div></div>;\n\n        if (\"message\" in this.state) {\n            return (\n                <div className=\"container\">\n                    <h3>{ this.state.message }</h3>\n                    <div className=\"row pt-3\">\n                        <div className=\"col-6\">\n                            <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                        </div>\n                        <div className=\"col-6\">\n                            {/* <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button> */}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"data_inicio\", \"date\", date_parse(this.state.visita_aluno.data_inicio)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Término)</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"data_fim\", \"date\", date_parse(this.state.visita_aluno.data_fim)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"frequencia\", \"text\", this.state.visita_aluno.frequencia) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"horario_inicio\", \"time\", this.state.visita_aluno.horario_inicio) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"horario_fim\", \"time\", this.state.visita_aluno.horario_fim) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"objetivo\", \"text\", this.state.visita_aluno.objetivo) }</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Aluno</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{ this.make_input(\"aluno\", \"nome\", \"text\", this.state.aluno.nome) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Matrícula</th>\n                            <td>{ this.make_input(\"aluno\", \"matricula\", \"text\", this.state.aluno.matricula) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{ this.make_input(\"aluno\", \"rg\", \"text\", this.state.aluno.rg) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{ this.make_input(\"aluno\", \"cpf\", \"text\", this.state.aluno.cpf) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{ this.make_input(\"aluno\", \"email\", \"email\", this.state.aluno.email) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{ this.make_input(\"aluno\", \"telefone\", \"text\", this.state.aluno.telefone) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{ this.make_input(\"aluno\", \"dt_nasc\", \"date\", date_parse(this.state.aluno.dt_nasc)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{ this.make_input(\"aluno\", \"endereco\", \"text\", this.state.aluno.endereco) }</td>\n                        </tr> */}\n                        <tr>\n                            <th scope=\"row\">Curso</th>\n                            <td>{ this.make_input(\"aluno\", \"curso\", \"text\", this.state.aluno.curso) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Semestre</th>\n                            <td>{ this.make_input(\"aluno\", \"semestre\", \"text\", this.state.aluno.semestre) }</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n                <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                        <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\"\n\nimport { date_parse, check_changed_fields, deep_copy } from \"./utility\";\nimport { make_request } from \"./request\";\n\nexport class RequestEditServidor extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n\n        this.original_data = null;\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_servidor = this.props.data;\n            this.setState({...visita_servidor})\n            this.original_data = deep_copy(visita_servidor);\n            console.log({...visita_servidor});\n        }\n    }\n\n    make_input = (object, field, type, value) => {\n        return <input\n            type={type}\n            className=\"form-control\"\n            value={value}\n            onChange={e =>{\n                let update_state = {};\n                update_state[object] = this.state[object];\n                update_state[object][field] = e.target.value;\n\n                this.setState(update_state);\n            }}>\n        </input>;\n    }\n\n    send_to_server = () => {\n        let visita_servidor = check_changed_fields(this.original_data, this.state);\n\n        // add the id's to update on server\n        if (\"visita_servidor\" in visita_servidor)\n            visita_servidor[\"visita_servidor\"][\"id_visita_servidor\"] = this.original_data[\"visita_servidor\"][\"id_visita_servidor\"];\n        if (\"servidor\" in visita_servidor)\n            visita_servidor[\"servidor\"][\"id_servidor\"] = this.original_data[\"servidor\"][\"id_servidor\"];\n        if (\"veiculo_servidor\" in visita_servidor)\n            visita_servidor[\"veiculo_servidor\"][\"id_veiculo_servidor\"] = this.original_data[\"veiculo_servidor\"][\"id_veiculo_servidor\"];\n\n        make_request(\"/visita_servidor\", \"PATCH\", JSON.stringify(visita_servidor))\n        .then(res => {\n            if (res.status === 200){\n                this.setState({message: \"Dados alterados com sucesso!\"});\n            } else {\n                this.setState({message: \"Não foi possível alterar os dados. Verifique se os campos estão preenchidos corretamente.\"});\n            }\n        })\n        .catch(err => {\n            console.log(\"error: \", err);\n        });\n    }\n\n    render = ()=>{\n        if (!this.state.visita_servidor) return (<div></div>);\n\n        if (\"message\" in this.state) {\n            return (\n                <div className=\"container\">\n                    <h3>{ this.state.message }</h3>\n                    <div className=\"row pt-3\">\n                        <div className=\"col-6\">\n                            <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                        </div>\n                        <div className=\"col-6\">\n                            {/* <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button> */}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"data\", \"date\", date_parse(this.state.visita_servidor.data_inicio)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Término)</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"data\", \"date\", date_parse(this.state.visita_servidor.data_fim)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"frequencia\", \"text\", this.state.visita_servidor.frequencia) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"horario_inicio\", \"time\", this.state.visita_servidor.horario_inicio) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"horario_fim\", \"time\", this.state.visita_servidor.horario_fim) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"objetivo\", \"text\", this.state.visita_servidor.objetivo) }</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Servidor</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{ this.make_input(\"servidor\", \"nome\", \"text\", this.state.servidor.nome) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">SIAPE</th>\n                            <td>{ this.make_input(\"servidor\", \"siape\", \"text\", this.state.servidor.siape) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{ this.make_input(\"servidor\", \"rg\", \"text\", this.state.servidor.rg) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{ this.make_input(\"servidor\", \"cpf\", \"text\", this.state.servidor.cpf) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{ this.make_input(\"servidor\", \"email\", \"text\", this.state.servidor.email) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{ this.make_input(\"servidor\", \"telefone\", \"text\", this.state.servidor.telefone) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{ this.make_input(\"servidor\", \"dt_nasc\", \"date\", date_parse(this.state.servidor.dt_nasc)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{ this.make_input(\"servidor\", \"endereco\", \"text\", this.state.servidor.endereco) }</td>\n                        </tr> */}\n                    </tbody>\n\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Veículo</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Placa</th>\n                            <td>{ this.state.veiculo_servidor && this.make_input(\"veiculo_servidor\", \"placa\", \"text\", this.state.veiculo_servidor.placa) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Modelo</th>\n                            <td>{ this.state.veiculo_servidor && this.make_input(\"veiculo_servidor\", \"modelo\", \"text\", this.state.veiculo_servidor.modelo) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Cor</th>\n                            <td>{ this.state.veiculo_servidor && this.make_input(\"veiculo_servidor\", \"cor\", \"text\", this.state.veiculo_servidor.cor) }</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n                <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                        <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\n\nimport { date_parse, check_changed_fields, deep_copy } from \"./utility\";\nimport { make_request } from \"./request\";\n\nexport class RequestEditVisitante extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n\n        this.original_data = null;\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_visitante = this.props.data;\n            this.setState({...visita_visitante})\n            this.original_data = deep_copy(visita_visitante);\n        }\n    }\n\n    make_input = (object, field, type, value) => {\n        return <input\n            type={type}\n            className=\"form-control\"\n            value={value}\n            onChange={e =>{\n                let update_state = {};\n                update_state[object] = this.state[object];\n                update_state[object][field] = e.target.value;\n\n                this.setState(update_state);\n            }}>\n        </input>;\n    }\n\n// TODO\n// --edit this request\n// --create a handle on server\n    send_to_server = () => {\n        let visita_visitante = check_changed_fields(this.original_data, this.state);\n\n        if (\"visita_visitante\" in visita_visitante)\n            visita_visitante[\"visita_visitante\"][\"id_visita_visitante\"] =\n                this.original_data[\"visita_visitante\"][\"id_visita_visitante\"];\n\n        if (\"visitante\" in visita_visitante)\n            visita_visitante[\"visitante\"][\"id_visitante\"] =\n                this.original_data[\"visitante\"][\"id_visitante\"];\n\n        if (\"veiculo_visitante\" in visita_visitante)\n            visita_visitante[\"veiculo_visitante\"][\"id_veiculo_visitante\"] =\n                this.original_data[\"veiculo_visitante\"][\"id_veiculo_visitante\"];\n\n        if (\"empresa\" in visita_visitante)\n            visita_visitante[\"empresa\"][\"id_empresa\"] =\n                this.original_data[\"empresa\"][\"id_empresa\"];\n\n        make_request(\"/visita_visitante\", \"PATCH\", JSON.stringify(visita_visitante))\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({message: \"Dados alterados com sucesso!\"});\n            } else {\n                this.setState({message: \"Não foi possível alterar os dados. Verifique se os campos estão preenchidos corretamente.\"});\n            }\n        })\n        .catch(err => {\n            console.log(\"error: \", err);\n        });\n    }\n\n    render = ()=>{\n        if (!this.state.visita_visitante) return (<div></div>);\n\n        if (\"message\" in this.state) {\n            return (\n                <div className=\"container\">\n                    <h3>{ this.state.message }</h3>\n                    <div className=\"row pt-3\">\n                        <div className=\"col-6\">\n                            <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                        </div>\n                        <div className=\"col-6\">\n                            {/* <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button> */}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"data_inicio\", \"date\", date_parse(this.state.visita_visitante.data_inicio)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Término)</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"data_fim\", \"date\", date_parse(this.state.visita_visitante.data_fim)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"frequencia\", \"text\", this.state.visita_visitante.frequencia) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"horario_inicio\", \"time\", this.state.visita_visitante.horario_inicio) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"horario_fim\", \"time\", this.state.visita_visitante.horario_fim) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"objetivo\", \"text\", this.state.visita_visitante.objetivo) }</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visitante</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{ this.make_input(\"visitante\", \"nome\", \"text\", this.state.visitante.nome) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{ this.make_input(\"visitante\", \"rg\", \"text\", this.state.visitante.rg) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{ this.make_input(\"visitante\", \"cpf\", \"text\", this.state.visitante.cpf) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{ this.make_input(\"visitante\", \"email\", \"text\", this.state.visitante.email) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                        <td>{ this.make_input(\"visitante\", \"telefone\", \"text\", this.state.visitante.telefone) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{ this.make_input(\"visitante\", \"dt_nasc\", \"date\", date_parse(this.state.visitante.dt_nasc)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{ this.make_input(\"visitante\", \"endereco\", \"text\", this.state.visitante.endereco) }</td>\n                        </tr> */}\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Empresa</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{ this.state.empresa && this.make_input(\"empresa\", \"nome\", \"text\", this.state.empresa.nome) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">CEP</th>\n                            <td>{ this.state.empresa && this.make_input(\"empresa\", \"cep\", \"text\", this.state.empresa.cep) }</td>\n                        </tr> */}\n                        <tr>\n                            <th scope=\"row\">CNPJ</th>\n                            <td>{ this.state.empresa && this.make_input(\"empresa\", \"cnpj\", \"text\", this.state.empresa.cnpj) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{ this.state.empresa && this.make_input(\"empresa\", \"telefone\", \"text\", this.state.empresa.telefone) }</td>\n                        </tr> */}\n                    </tbody>\n\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Veículo</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Placa</th>\n                            <td>{ this.state.veiculo_visitante && this.make_input(\"veiculo_visitante\", \"placa\", \"text\", this.state.veiculo_visitante.placa) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Modelo</th>\n                            <td>{ this.state.veiculo_visitante && this.make_input(\"veiculo_visitante\", \"modelo\", \"text\", this.state.veiculo_visitante.modelo) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Cor</th>\n                            <td>{ this.state.veiculo_visitante && this.make_input(\"veiculo_visitante\", \"cor\", \"text\", this.state.veiculo_visitante.cor) }</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nimport { RequestEditAluno } from \"./request_edit_aluno\";\nimport { RequestEditServidor } from \"./request_edit_servidor\";\nimport { RequestEditVisitante } from \"./request_edit_visitante\";\nimport { make_request } from \"./request\";\n\nexport class RequestEdit extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n\n        this.original_data = null;\n    }\n\n    componentDidMount = ()=>{\n        this.query();\n    }\n\n\n    query = ()=>{\n        const requisicao = this.props.data;\n\n        make_request(\"/visita/query\", \"POST\", JSON.stringify({\n            id_visita:  requisicao.id,\n            tipo_requisicao: requisicao.tipo_requisicao,\n        }))\n        .then(res=>{\n            return res.json()\n        })\n        .then(data=>{\n            this.setState({tipo_requisicao: requisicao.tipo_requisicao, data: data});\n            this.original_data = {};\n        })\n        .catch(err=>{\n            console.log(err);\n        });\n    }\n\n    edit_request = ()=>{\n        if (this.state.tipo_requisicao === \"aluno\")\n            return <RequestEditAluno data={this.state.data} onBack={this.props.backAction}></RequestEditAluno>;\n        else if (this.state.tipo_requisicao === \"servidor\")\n            return <RequestEditServidor data={this.state.data} onBack={this.props.backAction}></RequestEditServidor>;\n        else if (this.state.tipo_requisicao === \"visitante\")\n            return <RequestEditVisitante data={this.state.data} onBack={this.props.backAction}></RequestEditVisitante>;\n    }\n\n    render = ()=>{\n        return (\n            <div className=\"containers\">\n                { this.edit_request() }\n            </div>\n        );\n    };\n};","import React, {Component} from \"react\";\nimport { make_request } from \"./request\";\n\nimport { format_date } from \"./utility\";\n\nexport class RequestRemove extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            message: null,\n        };\n    }\n\n    db_remove = ()=>{\n        const requisicao = this.props.data;\n        make_request(\"/visita/delete\", \"POST\", JSON.stringify({\n            id_visita:  requisicao.id,\n            tipo_requisicao: requisicao.tipo_requisicao,\n        }))\n        .then( res => {\n            if (res.status === 200){\n                this.setState({message: \"Requisição removida!\"})\n            } else {\n                this.setState({message: \"Não foi possível remover está requisição. Tente novamente.\"})\n            }\n        })\n        .catch( err =>{\n\n        });\n    }\n\n    print_data = ()=>{\n        const requisicao = this.props.data;\n\n        return (\n            <div className=\"container\">\n                <div className=\"form-group\">\n                    <label>Solicitação para:</label>\n                    <label className=\"form-control\">{requisicao.tipo_requisicao}</label>\n                </div>\n                <div className=\"form-group\">\n                    <label>Nome:</label>\n                    <label className=\"form-control\">{requisicao.nome}</label>\n                </div>\n                <div className=\"form-group\">\n                    <label>Na data:</label>\n                    <label className=\"form-control\">{format_date(requisicao.data)}</label>\n                </div>\n\n            </div>\n        );\n    }\n\n    print_message = ()=>{\n        return (\n            <h3>{this.state.message}</h3>\n        );\n    }\n\n    print_prompt = ()=>{\n        return (\n            <div className=\"row alert alert-danger\">\n                Tem certeza que deseja excluir esta requisição de acesso?\n                <div className=\"row justify-content-end\">\n                    <div className=\"col-4\">\n                        <button className=\"btn btn-secondary\" onClick={this.props.backAction}>Não</button>\n                    </div>\n                    <div className=\"col-4\">\n                        <button className=\"btn btn-primary\" onClick={this.db_remove}>Sim</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render = ()=>{\n        return (\n            <div>\n                <h1>Cancelando requisição</h1>\n\n                {   this.state.message == null ?\n                    this.print_data()       :\n                    this.print_message()\n                }\n\n                {\n                    this.state.message == null ?\n                    this.print_prompt():\n                    null\n                }\n\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\" onClick={this.props.backAction}>Voltar</button>\n                </div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\"\n\nimport { format_date } from \"./utility\";\n\n\nexport class RequestDetailAluno extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_aluno = this.props.data;\n            this.setState({...visita_aluno})\n        }\n    }\n\n    render = ()=>{\n        if (!this.state.visita_aluno) return (<div></div>);\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{ format_date(this.state.visita_aluno.data_inicio) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Fim)</th>\n                            <td>{ format_date(this.state.visita_aluno.data_fim) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{this.state.visita_aluno.frequencia}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{this.state.visita_aluno.horario_inicio}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{this.state.visita_aluno.horario_fim}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{this.state.visita_aluno.objetivo}</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Aluno\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{this.state.aluno.nome}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Matrícula</th>\n                            <td>{this.state.aluno.matricula}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{this.state.aluno.rg}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{this.state.aluno.cpf}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{this.state.aluno.email}</td>\n                        </tr>\n                       {/*  <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{this.state.aluno.telefone}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{ format_date(this.state.aluno.dt_nasc) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{this.state.aluno.endereco}</td>\n                        </tr> */}\n                        <tr>\n                            <th scope=\"row\">Curso</th>\n                            <td>{this.state.aluno.curso}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Semestre</th>\n                            <td>{this.state.aluno.semestre}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\"\n\nimport { format_date } from \"./utility\";\n\nexport class RequestDetailServidor extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_servidor = this.props.data;\n            this.setState({...visita_servidor})\n        }\n    }\n\n    render = ()=>{\n        if (!this.state.visita_servidor) return (<div></div>);\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Visita\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{format_date(this.state.visita_servidor.data_inicio)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Fim)</th>\n                            <td>{format_date(this.state.visita_servidor.data_fim)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{this.state.visita_servidor.frequencia}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{this.state.visita_servidor.horario_inicio}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{this.state.visita_servidor.horario_fim}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{this.state.visita_servidor.objetivo}</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Servidor\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{this.state.servidor.nome}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">SIAPE</th>\n                            <td>{this.state.servidor.siape}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{this.state.servidor.rg}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{this.state.servidor.cpf}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{this.state.servidor.email}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{this.state.servidor.telefone}</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{format_date(this.state.servidor.dt_nasc)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{this.state.servidor.endereco}</td>\n                        </tr> */}\n                    </tbody>\n\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Veículo</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Placa</th>\n                            <td>{this.state.veiculo_servidor && this.state.veiculo_servidor.placa}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Modelo</th>\n                            <td>{this.state.veiculo_servidor && this.state.veiculo_servidor.modelo}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Cor</th>\n                            <td>{this.state.veiculo_servidor && this.state.veiculo_servidor.cor}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\"\n\nimport {format_date} from \"./utility\";\n\nexport class RequestDetailVisitante extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_visitante = this.props.data;\n            this.setState({...visita_visitante});\n        }\n    }\n\n    render = ()=>{\n        if (!this.state.visita_visitante) return (<div></div>);\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{format_date(this.state.visita_visitante.data_inicio)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Término)</th>\n                            <td>{format_date(this.state.visita_visitante.data_fim)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{this.state.visita_visitante.frequencia}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{this.state.visita_visitante.horario_inicio}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{this.state.visita_visitante.horario_fim}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{this.state.visita_visitante.objetivo}</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Visitante\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{this.state.visitante.nome}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{this.state.visitante.rg}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{this.state.visitante.cpf}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{this.state.visitante.email}</td>\n                        </tr>\n                       {/*  <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{this.state.visitante.telefone}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{format_date(this.state.visitante.dt_nasc)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{this.state.visitante.endereco}</td>\n                        </tr> */}\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Empresa\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{this.state.empresa && this.state.empresa.nome}</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">CEP</th>\n                            <td>{this.state.empresa && this.state.empresa.cep}</td>\n                        </tr> */}\n                        <tr>\n                            <th scope=\"row\">CNPJ</th>\n                            <td>{this.state.empresa && this.state.empresa.cnpj}</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{this.state.empresa && this.state.empresa.telefone}</td>\n                        </tr> */}\n                    </tbody>\n\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Veículo</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Placa</th>\n                            <td>{this.state.veiculo_visitante && this.state.veiculo_visitante.placa}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Modelo</th>\n                            <td>{this.state.veiculo_visitante && this.state.veiculo_visitante.modelo}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Cor</th>\n                            <td>{this.state.veiculo_visitante && this.state.veiculo_visitante.cor}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nimport { RequestDetailAluno } from \"./request_detail_aluno\";\nimport { RequestDetailServidor } from \"./request_detail_servidor\";\nimport { RequestDetailVisitante } from \"./request_detail_visitante\";\nimport { make_request } from \"./request\";\n\n\nexport class RequestDetail extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            data: null,\n            tipo_requisicao: null,\n        };\n    }\n\n    componentDidMount = ()=>{\n        this.query();\n    }\n\n    query = ()=>{\n        const requisicao = this.props.data;\n\n        make_request(\"/visita/query\", \"POST\", JSON.stringify({\n            id_visita:  requisicao.id,\n            tipo_requisicao: requisicao.tipo_requisicao,\n        }))\n        .then(res=>{\n            return res.json()\n        })\n        .then(data=>{\n            this.setState({tipo_requisicao: requisicao.tipo_requisicao, data: data});\n        })\n        .catch(err=>{\n            console.log(err);\n        });\n    }\n\n    show_request = ()=>{\n        if (this.state.tipo_requisicao === \"aluno\")\n            return <RequestDetailAluno data={this.state.data}></RequestDetailAluno>;\n        else if (this.state.tipo_requisicao === \"servidor\")\n            return <RequestDetailServidor data={this.state.data}></RequestDetailServidor>;\n        else if (this.state.tipo_requisicao === \"visitante\")\n            return <RequestDetailVisitante data={this.state.data}></RequestDetailVisitante>;\n    }\n\n    render = ()=>{\n        return (\n            <div>\n                { this.show_request() }\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\" onClick={this.props.backAction}>Voltar</button>\n                </div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\"        ;\n\nimport { RequestEdit }   from \"./request_edit\"  ;\nimport { RequestRemove } from \"./request_remove\";\nimport { RequestDetail } from \"./request_detail\";\n\nimport { make_request }  from \"./request\"       ;\n\nimport { format_date }   from \"./utility\"       ;\n\nexport class AgentWaitingRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_action: \"list\",\n            request_id: null,\n            data: null,\n        };\n    }\n\n    componentDidMount = ()=>{\n        this.search();\n    }\n\n    search = ()=>{\n        this.setState({data: null});\n\n        make_request(\"/visita\", \"POST\", JSON.stringify({\n            what: \"STATUS_AGUARDANDO\",\n        }))\n        .then(res=>res.json())\n        .then(result => {\n            let data = {};\n            result.map( (row, ind) => data[ind] = row);\n\n            this.setState({data: data});\n        })\n        .catch(err => {\n            console.log(\"error\");\n        });\n    }\n\n    __onRemove = (row) => {\n        this.setState({current_action: \"remove\", selected_row: row});\n    }\n\n    __onEdit = (row) => {\n        this.setState({current_action: \"edit\", selected_row: row});\n    }\n\n    __onDetail = (row) => {\n        this.setState({current_action: \"detail\", selected_row: row});\n    }\n\n    format_data = () => {\n        // console.log(\"Here\");\n        if (this.state.data == null)\n            return;\n\n        const table = Object.values(this.state.data).map((row, i) => {\n            return (\n            <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{row.tipo_requisicao}</td>\n                <td>{row.nome}</td>\n                <td>{format_date(row.data)}</td>\n                <td>\n                    <button\n                        className=\"btn btn-warning\"\n                        onClick={()=>{this.__onEdit(row)}}>\n                        Editar\n                    </button>\n                    <span className=\"pr-1\"></span>\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={()=>{this.__onRemove(row)}}>\n                        Remover\n                    </button>\n                    <span className=\"pr-1\"></span>\n                    <button\n                        className=\"btn btn-primary\"\n                        onClick={()=>{this.__onDetail(row)}}>\n                        Detalhes\n                    </button>\n                </td>\n            </tr>\n        )});\n\n        return table;\n    }\n\n    list = () => {\n        return (\n            <div className=\"row justify-content-center\">\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Tipo de Requisição</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Data</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.format_data()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    action_handler = () => {\n        const backAction = ()=> {\n            this.setState({current_action: \"list\"}); this.search()\n        };\n\n        switch (this.state.current_action){\n            case \"list\":\n                return this.list();\n            case \"edit\":\n                return  <RequestEdit\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestEdit>;\n            case \"remove\":\n                return  <RequestRemove\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestRemove>;\n            case \"detail\":\n                return  <RequestDetail\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestDetail>;\n            default:\n                return <div>Error</div>\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"pb-5\"></div>\n                { this.action_handler() }\n                <div className=\"footer\"></div>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nimport { RequestDetail } from \"./request_detail\";\n\nimport { format_date } from \"./utility\";\n\n// TODO\n//      Criar as páginas de edição\n//                          remoção\n//                          detalhes\n// OBS\n//      Os dados devem ser retornados do DB com o id do evento\n\nexport class AgentProcessedRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_action: \"list\",\n            request_id: null,\n            data: null,\n        };\n    }\n\n    search = ()=>{\n        make_request(\"/visita\", \"POST\", JSON.stringify({\n            what: \"STATUS_PROCESSADO\",\n        }))\n        .then(res=>res.json())\n        .then(result => {\n            let data = {};\n            result.map( (row, ind) => data[ind] = row);\n\n            this.setState({data: data});\n        })\n        .catch(err => {\n            console.log(\"error\");\n        });\n    }\n\n    componentDidMount = ()=>{\n        this.search();\n    }\n\n\n    __onDetail = (row) => {\n        this.setState({current_action: \"detail\", selected_row: row})\n    }\n\n    format_data = () => {\n        if (this.state.data == null)\n            return;\n\n        const table = Object.values(this.state.data).map((row, i) => {\n            return (\n                <tr key={i} className={row.status_de_aprovacao === 1 ? \"bg-light-green\" : \"bg-light-red\"}>\n                    <td>{i + 1}</td>\n                    <td>{row.tipo_requisicao}</td>\n                    <td>{row.nome}</td>\n                    <td>{format_date(row.data)}</td>\n                    <td>{row.status_de_aprovacao === 1 ? \"Aprovado\" : \"Não aprovado\"}</td>\n                    <td>\n                        <button className=\"btn btn-primary\" onClick={() => { this.__onDetail(row) }}>Detalhes</button>\n                    </td>\n                </tr>\n            )\n        });\n\n        return table;\n    }\n\n    list = () => {\n        return (\n            <div className=\"row justify-content-center\">\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Tipo de Requisição</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Data</th>\n                            <th scope=\"col\">Status de Aprovação</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.format_data()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    action_handler = () => {\n        const backAction = () => this.setState({current_action: \"list\"});\n\n        switch (this.state.current_action){\n            case \"list\":\n                return this.list();\n            case \"detail\":\n                return <RequestDetail\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestDetail>;\n            default:\n                return <div>Error</div>\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n            <div className=\"pb-5\"></div>\n                { this.action_handler() }\n                <div className=\"footer\"></div>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\n\nexport class AgentRegisterActions extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render = ()=>{\n        return(\n            <div\n                className=\"btn-group btn-group-sm\"\n                role=\"group\"\n                aria-label=\"agent actions\"\n            >\n                <button type=\"button\" onClick={this.props.student} className=\"btn btn-primary\">Aluno</button>\n                <button type=\"button\" onClick={this.props.employee} className=\"btn btn-primary\">Servidor</button>\n                <button type=\"button\" onClick={this.props.visitor} className=\"btn btn-primary\">Visitante</button>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\nimport { date_parse } from \"./utility\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterEmployeeServidor extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            siape: \"\",\n            nome: \"\",\n            // telefone: \"\",\n            email: \"\",\n            // dt_nasc: \"\",\n            rg: \"\",\n            cpf: \"\",\n            // endereco: \"\",\n\n            readonly: true,\n        };\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n    }\n\n    save_data = () => {\n        const servidor = {\n            siape: this.state.siape,\n            nome: this.state.nome,\n            // telefone: this.state.telefone,\n            email: this.state.email,\n            // dt_nasc: this.state.dt_nasc,\n            rg: this.state.rg,\n            cpf: this.state.cpf,\n            // endereco: this.state.endereco,\n        }\n        // this.setState({...veiculo_visitante});\n\n        this.props.onSave(servidor);\n    };\n\n    search = ()=>{\n        let siape = this.state.siape.replace(/(\\.|-)/g, \"\");\n\n        if (siape.length > 6){\n            const header = new Headers();\n            header.set(\"content-type\", \"application/json\");\n\n            make_request(\n                \"/visita_servidor/search\",\n                \"POST\",\n                JSON.stringify({siape: siape, what: \"SIAPE\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    if (\"dt_nasc\" in data)\n                        data.dt_nasc = date_parse(data.dt_nasc)\n\n                    this.setState({...data, readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({readonly: false});\n            });\n\n        } else {\n            this.setState({readonly: false});\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados do servidor...</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_siape\">SIAPE</label>\n                        <input type=\"text\" id=\"servidor_siape\" ref={ this.servidor_siape } className=\"form-control\" placeholder=\"Digite o código SIAPE do servidor\"\n                            value={this.state.siape} onBlur={this.search} onChange={e=>this.setState({siape: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 2000000</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_rg\">RG</label>\n                        <input type=\"text\" id=\"servidor_rg\" ref={this.servidor_rg} className=\"form-control\" placeholder=\"Digite o RG do servidor...\"\n                            value={this.state.rg} readOnly={this.state.readonly} onChange={e=>this.setState({rg: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 0000000-0</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"cpf\">CPF</label>\n                        <input type=\"text\" id=\"cpf\" ref={this.servidor_cpf} className=\"form-control\" placeholder=\"Digite o CPF do servidor...\"\n                            value={this.state.cpf} readOnly={this.state.readonly} onChange={e=>this.setState({cpf: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 000.000.000-00, 000000000-00</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_nome\">Nome</label>\n                        <input type=\"text\" id=\"servidor_nome\" ref={this.servidor_nome} className=\"form-control\" placeholder=\"Digite o nome do servidor...\"\n                            value={this.state.nome} readOnly={this.state.readonly} onChange={e=>this.setState({nome: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Foo Bar Baz</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"cpf\">Email</label>\n                        <input type=\"text\" id=\"servidor_email\" ref={this.servidor_email} className=\"form-control\" placeholder=\"Digite o email do servidor...\"\n                            value={this.state.email} readOnly={this.state.readonly} onChange={e=>this.setState({email: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: foo@bar.baz</small>\n                    </div>\n                </div>\n\n                {/* <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_telefone\">Telefone</label>\n                        <input type=\"text\" id=\"servidor_telefone\" ref={this.servidor_telefone} className=\"form-control\" placeholder=\"Digite o número de telefone do servidor...\"\n                            value={this.state.telefone} readOnly={this.state.readonly} onChange={e=>this.setState({telefone: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 0000-0000, (00) 0000-0000</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_dt_nasc\">Data de nascimento</label>\n                        <input type=\"date\" id=\"servidor_dt_nasc\" ref={this.servidor_dt_nasc} className=\"form-control\" placeholder=\"Digite a data de nascimento do servidor...\"\n                            value={this.state.dt_nasc} readOnly={this.state.readonly} onChange={e=>this.setState({dt_nasc: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 01/01/2001</small>\n                    </div>\n                </div> */}\n\n                {/* <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"endereco\">Endereço</label>\n                        <input type=\"text\" id=\"endereco\" ref={this.servidor_endereco} className=\"form-control\" placeholder=\"Digite o endereço do servidor...\"\n                            value={this.state.endereco} readOnly={this.state.readonly} onChange={e=>this.setState({endereco: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Rua Foo, Número 01</small>\n                    </div>\n                </div> */}\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        {/* <button className=\"btn btn-secondary float-left\" onClick={()=>{ this.save_data(); this.props.onBack(); }}>Voltar</button> */}\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={()=>{ this.save_data(); this.props.onNext(); }}>Avançar</button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\n\nexport class AgentRegisterEmployeeServidorVisita extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            objetivo: \"\",\n            data_inicio: \"\",\n            data_fim: \"\",\n            frequencia: \"Diário\",\n            pernoite: false,\n            horario_inicio: \"\",\n            horario_fim: \"\",\n        };\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n\n    }\n\n    save_data = () => {\n        const visita_servidor = {\n            objetivo: this.state.objetivo,\n            data_inicio: this.state.data_inicio,\n            data_fim: this.state.data_fim,\n            frequencia: this.state.frequencia,\n            pernoite: this.state.pernoite,\n            horario_inicio: this.state.horario_inicio,\n            horario_fim: this.state.horario_fim,\n        }\n\n        this.props.onSave(visita_servidor);\n    };\n\n    render = () => {\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <h1>Dados do visita...</h1>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_data_inicio\">Data (Início)</label>\n                    <input\n                        type=\"date\"\n                        id=\"visita_data_inicio\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a data de início do evento...\"\n                        value={this.state.data_inicio}\n                        onChange={e=>this.setState({data_inicio: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 01/01/2011\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_data_fim\">Data (Término)</label>\n                    <input\n                        type=\"date\"\n                        id=\"visita_data_fim\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a data de término do evento...\"\n                        value={this.state.data_fim}\n                        onChange={e=>this.setState({data_fim: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 06/01/2011\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_horario_inicio\">Horário de Inicio</label>\n                    <input\n                        type=\"time\"\n                        id=\"visita_horario_inicio\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o horário de início da visita...\"\n                        value={this.state.horario_inicio}\n                        onChange={e=>this.setState({horario_inicio: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 13:30, 1:30 PM\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_horario_fim\">Horário de Término</label>\n                    <input\n                        type=\"time\"\n                        id=\"visita_horario_fim\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o horário de termino da visita...\"\n                        value={this.state.horario_fim}\n                        onChange={e=>this.setState({horario_fim: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">Ex: 18:30, 6:30 PM\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                        <label htmlFor=\"frequencia\">Frequência das visitas</label>\n                        <select\n                            id=\"frequencia\" className=\"form-control\"\n                            value={this.state.frequencia}\n                            onChange={e=>this.setState({frequencia: e.target.value})}>\n                            <option value={\"Diário\"}  key=\"1\">Diário</option>\n                            <option value={\"Semanal\"} key=\"2\">Semanal</option>\n                            <option value={\"Mensal\"}  key=\"3\">Mensal</option>\n                        </select>\n                        <small className=\"form-text text-muted\">Ex: Diário, Semanal</small>\n                    </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_pernoite\">Pernoite</label>\n                    <select\n                        id=\"visita_pernoite\"\n                        className=\"form-control\"\n                        value={this.state.pernoite}\n                        onChange={e=>this.setState({pernoite: e.target.value})}>\n\n                        <option value={false} key=\"1\">Não</option>\n                        <option value={true}  key=\"2\">Sim</option>\n                    </select>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Sim, Não\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col\">\n                    <label htmlFor=\"visita_objetivo\">Objetivo</label>\n                    <input\n                        type=\"textarea\"\n                        id=\"visita_objetivo\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o objetivo da visita...\"\n                        value={this.state.objetivo}\n                        onChange={e=>this.setState({objetivo: e.target.value})}>\n                        </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Rua Foo Bar, Número 00\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-secondary float-left\"\n                        onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                        Voltar\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-success float-right\"\n                        onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                        Finalizar\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"footer\"></div>\n        </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { throws } from \"assert\";\nimport { IncomingMessage } from \"http\";\n\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterEmployeeServidorVeiculo extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            modelo: \"\",\n            cor: \"\",\n            placa: \"\",\n\n            visita_com_veiculo: false,\n            readonly: true,\n        };\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n\n        if (initial_data) {\n            const with_vehicle = initial_data.placa != null &&\n                initial_data.placa.length > 0;\n\n            this.setState({\n                ...initial_data,\n                visita_com_veiculo: with_vehicle,\n            });\n        }\n\n    }\n\n    save_data = () => {\n        const veiculo_servidor = this.state.visita_com_veiculo === true ? ({\n            modelo: this.state.modelo,\n            cor: this.state.cor,\n            placa: this.state.placa,\n        }) : null;\n\n        this.props.onSave(veiculo_servidor);\n\n    };\n\n    search = ()=>{\n\n        let placa = this.state.placa;\n        if (placa)\n            placa = placa.replace(/(\\.|-)/g, \"\");\n\n        if (placa.length === 7){\n            const header = new Headers();\n            header.set(\"content-type\", \"application/json\");\n\n           /*  fetch(this.props.backendAddr + \"/visita_servidor/search\", {\n                headers: header,\n                credentials: \"include\",\n                method: \"POST\",\n                mode: \"cors\",\n                body: JSON.stringify({placa: placa, what: \"PLACA\"}),\n            }); */\n\n            make_request(\n                \"/visita_servidor/search\",\n                \"POST\",\n                JSON.stringify({placa: placa, what: \"PLACA\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    this.setState({...data, readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({readonly: false});\n            });\n\n        } else {\n            this.setState({readonly: false});\n        }\n    }\n\n    change_state_vehicle_state = (value) => {\n        const ro = !value ? true: this.state.readonly;\n        this.setState({ visita_com_veiculo: value, readonly: ro });\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <h1>Dados do veículo...</h1>\n            </div>\n\n            <div className=\"row justify-content-center\">\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        type=\"radio\"\n                        className=\"form-check-input\"\n                        name=\"visita-veiculo\"\n                        checked={!this.state.visita_com_veiculo}\n                        onChange={()=>this.change_state_vehicle_state(false)}>\n                    </input>\n                    <label\n                        className=\"form-check-label\">\n                        Sem veículo\n                    </label>\n                </div>\n\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        type=\"radio\"\n                        className=\"form-check-input\"\n                        name=\"visita-veiculo\"\n                        checked={this.state.visita_com_veiculo}\n                        onChange={()=>this.change_state_vehicle_state(true)}>\n                    </input>\n                    <label\n                        className=\"form-check-label\">\n                        Com veículo\n                    </label>\n                </div>\n            </div>\n\n            <div className=\"row justify-content-center\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"veiculo_placa\">Placa</label>\n                    <input\n                        type=\"text\"\n                        id=\"veiculo_placa\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a placa do veículo...\"\n                        value={this.state.placa}\n                        readOnly={!this.state.visita_com_veiculo}\n                        onBlur={this.search}\n                        onChange={e=>this.setState({placa: e.target.value})}>\n                    </input>\n                    <small className=\"form-text text-muted\">Ex: AAA0000, AAA-0000</small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"veiculo_cor\">Cor</label>\n                    <input\n                        type=\"text\"\n                        id=\"veiculo_cor\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a cor do veículo...\"\n                        value={this.state.cor}\n                        readOnly={this.state.readonly}\n                        onChange={e=>this.setState({cor: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Branco, Preto\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"veiculo_modelo\">Modelo</label>\n                    <input\n                        type=\"text\"\n                        id=\"veiculo_modelo\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o modelo do veículo...\"\n                        value={this.state.modelo}\n                        readOnly={this.state.readonly}\n                        onChange={e=>this.setState({modelo: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Sedan, Hatch\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-secondary float-left\"\n                        onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                        Voltar\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-success float-right\"\n                        onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                        Avançar\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"footer\"></div>\n        </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { AgentRegisterEmployeeServidor } from \"./agent_register_employee_servidor\";\nimport { AgentRegisterEmployeeServidorVisita } from \"./agent_register_employee_servidor_visita\";\nimport { AgentRegisterEmployeeServidorVeiculo } from \"./agent_register_employee_servidor_veiculo\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterEmployee extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            servidor: null,\n            veiculo_servidor: null,\n            visita_servidor: null,\n\n            menu_progress: 1,\n\n            communication_status: \"\",\n        };\n\n        this.reset_state = {\n            servidor: null,\n            veiculo_servidor: null,\n            visita_servidor: null,\n        };\n\n    }\n\n    send_to_server = () => {\n        const {menu_progress, communication_status, ...data} = this.state;\n\n        const header = new Headers();\n        header.set(\"content-type\", \"application/json\");\n\n        make_request(\n            \"/visita_servidor\",\n            \"POST\",\n            JSON.stringify(data)\n        ).then( res =>{\n            if (res.status === 200){\n                this.setState({ ...this.reset_state, communication_status: \"Dados enviados com sucesso!\"} );\n            } else {\n                this.setState({\n                    communication_status: \"Não foi possível cadastrar esses dados. Verifica que se todos os campos estão preenchidos corretamente.\"\n                });\n            }\n        }).catch( err => {\n            this.setState({\n                communication_status: \"Erro ao comunicar com o servidor. Verifique sua conexão com a rede.\"\n            });\n        });\n    };\n\n    delta_progress = (val) => this.setState((state, props) => {\n        return {menu_progress: state.menu_progress + val};\n    });\n\n\n    inc_progress = () => this.setState((state, props) => {\n        return this.delta_progress(+1);\n    });\n\n    dec_progress = () => this.setState((state, props) => {\n        return this.delta_progress(-1);\n    });\n\n    restart_menu = () => {\n        this.setState({menu_progress: 1});\n    }\n\n    render = () => {\n        switch(this.state.menu_progress){\n        case 1:\n            return (\n                <AgentRegisterEmployeeServidor\n                    onSave={ data => this.setState({servidor: data}) }\n                    onInitialValues={ () => this.state.servidor }\n                    backendAddr={this.props.backendAddr}\n                    onNext={ this.inc_progress }>\n                </AgentRegisterEmployeeServidor>);\n        case 2:\n            return (\n                <AgentRegisterEmployeeServidorVeiculo\n                    onSave={ data => this.setState({veiculo_servidor: data}) }\n                    onInitialValues={ () => this.state.veiculo_servidor }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterEmployeeServidorVeiculo>\n            );\n        case 3:\n            return (\n                <AgentRegisterEmployeeServidorVisita\n                    onSave={ data => this.setState({visita_servidor: data}) }\n                    onInitialValues={ () => this.state.visita_servidor }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterEmployeeServidorVisita>);\n        case 4:\n            {this.send_to_server()}\n            {this.inc_progress()}\n\n        case 5:\n            return(\n                <div className=\"container\">\n                    <h2>{this.state.communication_status}</h2>\n                    <button className=\"btn btn-primary\" onClick={this.restart_menu}>Continuar</button>\n                </div>\n            );\n        default:\n            { this.restart_menu() };\n        }\n    };\n};","import React, { Component } from \"react\";\n\nimport {date_parse} from \"./utility\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterStudentAluno extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            nome: \"\",\n            // telefone: \"\",\n            email: \"\",\n            // dt_nasc: \"\",\n            rg: \"\",\n            cpf: \"\",\n            // endereco: \"\",\n            matricula: \"\",\n            curso: \"\",\n            semestre: \"\",\n\n            readonly: true,\n        };\n\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const student_aluno = {\n            nome: this.state.nome,\n            // telefone: this.state.telefone,\n            email: this.state.email,\n            // dt_nasc: this.state.dt_nasc,\n            rg: this.state.rg,\n            cpf: this.state.cpf,\n            // endereco: this.state.endereco,\n            matricula: this.state.matricula,\n            curso: this.state.curso,\n            semestre: this.state.semestre,\n        }\n\n        this.props.onSave(student_aluno);\n    };\n\n    search = ()=>{\n        let matricula = this.state.matricula.replace(/(\\.|-)/g, \"\");\n\n        if (matricula.length === 13){\n\n            make_request(\n                \"/visita_aluno/search\",\n                \"POST\",\n                JSON.stringify({matricula: matricula, what: \"MATRICULA\"}),\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0){\n                    const nw_data = {...data, dt_nasc: date_parse(data[\"dt_nasc\"])};\n                    this.setState({...nw_data, readonly: true});\n                } else {\n                    this.setState({readonly: false});\n                }\n            })\n            .catch( err => {\n                this.setState({readonly: false});\n            });\n\n        } else {\n            this.setState({readonly: false});\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados do aluno...</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_matricula\">Número de matrícula</label>\n                        <input type=\"text\" id=\"estudante_matricula\" ref={ this.estudante_matricula } className=\"form-control\" placeholder=\"Digite o número de matrícula do aluno...\"\n                            value={this.state.matricula} onBlur={this.search} onChange={e=>this.setState({matricula: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 2014000000000</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_rg\">RG</label>\n                        <input type=\"text\" id=\"estudante_rg\" ref={this.estudante_rg} className=\"form-control\" placeholder=\"Digite o RG do estudante...\"\n                            value={this.state.rg} readOnly={this.state.readonly} onChange={e=>this.setState({rg: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 0000000-0</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_cpf\">CPF</label>\n                        <input type=\"text\" id=\"estudante_cpf\" ref={this.estudante_cpf} className=\"form-control\" placeholder=\"Digite o CPF do estudante...\"\n                            value={this.state.cpf} readOnly={this.state.readonly} onChange={e=>this.setState({cpf: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 000.000.000-00, 000000000-00</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_nome\">Nome</label>\n                        <input type=\"text\" id=\"estudante_nome\" ref={this.estudante_nome} className=\"form-control\" placeholder=\"Digite o nome do estudante...\"\n                            value={this.state.nome} readOnly={this.state.readonly} onChange={e=>this.setState({nome: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Foo Bar Baz</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_email\">Email</label>\n                        <input type=\"text\" id=\"estudante_email\" ref={this.estudante_email} className=\"form-control\" placeholder=\"Digite o email do estudante...\"\n                            value={this.state.email} readOnly={this.state.readonly} onChange={e=>this.setState({email: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: foo@bar.baz</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_curso\">Curso</label>\n                        <input\n                            type=\"text\"\n                            id=\"estudante_curso\"\n                            ref={this.estudante_curso}\n                            className=\"form-control\"\n                            placeholder=\"Digite o curso do estudante...\"\n                            value={this.state.curso}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({curso: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Engenharia da Computação</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_semestre\">Semestre</label>\n                        <input\n                            type=\"text\"\n                            id=\"estudante_semestre\"\n                            ref={this.estudante_semestre}\n                            className=\"form-control\"\n                            placeholder=\"Digite o semestre do estudante...\"\n                            value={this.state.semestre}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({semestre: e.target.value})}>\n                        </input>\n                            <small className=\"form-text text-muted\">Ex: 1, 2, 10</small>\n                    </div>\n                </div>\n\n               {/*  <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_telefone\">Telefone</label>\n                        <input\n                            type=\"text\"\n                            id=\"estudante_telefone\"\n                            ref={this.estudante_telefone}\n                            className=\"form-control\"\n                            placeholder=\"Digite o número de telefone do estudante...\"\n                            value={this.state.telefone}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({telefone: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 0000-0000, (00) 0000-0000</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_dt_nasc\">Data de nascimento</label>\n                        <input\n                            type=\"date\"\n                            id=\"estudante_dt_nasc\"\n                            ref={this.estudante_dt_nasc}\n                            className=\"form-control\"\n                            placeholder=\"Digite a data de nascimento do estudante...\"\n                            value={this.state.dt_nasc}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({dt_nasc: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 01/01/2001</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"estudante_endereco\">Endereço</label>\n                        <input\n                            type=\"text\"\n                            id=\"estudante_endereco\"\n                            ref={this.estudante_endereco}\n                            className=\"form-control\"\n                            placeholder=\"Digite o endereço do estudante...\"\n                            value={this.state.endereco}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({endereco: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Rua Foo, Número 01</small>\n                    </div>\n                </div>\n */}\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        {/* <button className=\"btn btn-secondary float-left\" onClick={()=>{ this.save_data(); this.props.onBack(); }}>Voltar</button> */}\n                    </div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-success float-right\"\n                            onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                            Avançar\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\n\nexport class AgentRegisterStudentAlunoVisita extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            objetivo: \"\",\n            data_inicio: \"\",\n            data_fim: \"\",\n            frequencia: \"Diário\",\n            horario_inicio: \"\",\n            horario_fim: \"\",\n        };\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n    }\n\n    save_data = () => {\n        const student_visit = {\n            objetivo: this.state.objetivo,\n            data_inicio: this.state.data_inicio,\n            data_fim: this.state.data_fim,\n            frequencia: this.state.frequencia,\n            horario_inicio: this.state.horario_inicio,\n            horario_fim: this.state.horario_fim,\n        }\n\n        this.props.onSave(student_visit);\n    };\n\n    render = () => {\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <h1>Dados do visita...</h1>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"estudante_data_inicio\">Data (Início)</label>\n                    <input\n                        type=\"date\"\n                        id=\"estudante_data_inicio\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a data de início do evento...\"\n                        value={this.state.data_inicio}\n                        onChange={e=>this.setState({data_inicio: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 01/01/2011\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"estudante_data_fim\">Data (Término)</label>\n                    <input\n                        type=\"date\"\n                        id=\"estudante_data_fim\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a data de finalização do evento....\"\n                        value={this.state.data_fim}\n                        onChange={e=>this.setState({data_fim: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 06/01/2011\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"estudante_horario_inicio\">Horário (Inicio)</label>\n                    <input\n                        type=\"time\"\n                        id=\"estudante_horario_inicio\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o horário de início da visita...\"\n                        value={this.state.horario_inicio}\n                        onChange={e=>this.setState({horario_inicio: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 13:30, 1:30 PM\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"estudante_horario_fim\">Horário (Término)</label>\n                    <input\n                        type=\"time\"\n                        id=\"estudante_horario_fim\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o horário de termino da visita...\"\n                        value={this.state.horario_fim}\n                        onChange={e=>this.setState({horario_fim: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 18:30, 6:30 PM\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col\">\n                    <label htmlFor=\"frequencia\">Frequência das visitas</label>\n                    <select\n                        id=\"frequencia\" className=\"form-control\"\n                        value={this.state.frequencia}\n                        onChange={e=>this.setState({frequencia: e.target.value})}>\n                        <option value={\"Diário\"}  key=\"1\">Diário</option>\n                        <option value={\"Semanal\"} key=\"2\">Semanal</option>\n                        <option value={\"Mensal\"}  key=\"3\">Mensal</option>\n                    </select>\n                    <small className=\"form-text text-muted\">Ex: Diário, Semanal</small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col\">\n                    <label htmlFor=\"estudante_objetivo\">Objetivo</label>\n                    <input\n                        type=\"textarea\"\n                        id=\"estudante_objetivo\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o objetivo da visita...\"\n                        value={this.state.objetivo}\n                        onChange={e=>this.setState({objetivo: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Rua Foo Bar, Número 00\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-secondary float-left\"\n                        onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                        Voltar\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-success float-right\"\n                        onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                        Finalizar\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"footer\"></div>\n        </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { AgentRegisterStudentAluno } from \"./agent_register_student_aluno\";\nimport { AgentRegisterStudentAlunoVisita } from \"./agent_register_student_aluno_visita\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterStudent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            aluno: null,\n\n            visita_aluno: null,\n\n            menu_progress: 1,\n\n            communication_status: \"\"\n        };\n\n        this.reset_state = {\n            aluno: null,\n\n            visita_aluno: null,\n        };\n    }\n\n    send_to_server = () => {\n        const {menu_progress, communication_status, ...data} = this.state;\n\n        make_request(\n            \"/visita_aluno\",\n            \"POST\",\n            JSON.stringify(data)\n        ).then( res =>{\n            if (res.status === 200){\n                this.setState({ ...this.reset_state, communication_status: \"Dados enviados com sucesso!\"} );\n            } else {\n                this.setState({\n                    communication_status: \"Não foi possível cadastrar esses dados. Verifica que se todos os campos estão preenchidos corretamente.\"\n                });\n            }\n        }).catch( err => {\n            this.setState({\n                communication_status: \"Erro ao comunicar com o servidor. Verifique sua conexão com a rede.\"\n            });\n        });\n    };\n\n    delta_progress = (val) => this.setState((state, props) => {\n        return {menu_progress: state.menu_progress + val};\n    });\n\n\n    inc_progress = () => this.setState((state, props) => {\n        return this.delta_progress(+1);\n    });\n\n    dec_progress = () => this.setState((state, props) => {\n        return this.delta_progress(-1);\n    });\n\n    restart_menu = () => {\n        this.setState({menu_progress: 1});\n    }\n\n    render = () => {\n        switch(this.state.menu_progress){\n        case 1:\n            return (\n                <AgentRegisterStudentAluno\n                    onSave={ data => this.setState({aluno: data}) }\n                    onInitialValues={ () => this.state.aluno }\n                    backendAddr={this.props.backendAddr}\n                    onNext={ this.inc_progress }>\n                </AgentRegisterStudentAluno>);\n        case 2:\n            return (\n                <AgentRegisterStudentAlunoVisita\n                    onSave={ data => this.setState({visita_aluno: data}) }\n                    onInitialValues={ () => this.state.visita_aluno }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterStudentAlunoVisita>);\n\n        case 3:\n            {this.send_to_server()}\n            {this.inc_progress()}\n\n        case 4:\n            return(\n                <div className=\"container\">\n                    <h2>{this.state.communication_status}</h2>\n                    <button className=\"btn btn-primary\" onClick={this.restart_menu}>Continuar</button>\n                </div>\n            );\n        default:\n            { this.restart_menu() };\n        }\n\n    };\n};","import React, { Component } from \"react\";\nimport { isNumber } from \"util\";\n\nimport {date_parse} from \"./utility\";\nimport { make_request } from \"./request\";\n\n\nexport class AgentRegisterVisitorVisitante extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            nome: \"\",\n            // telefone: \"\",\n            email: \"\",\n            // dt_nasc: \"\",\n            rg: \"\",\n            cpf: \"\",\n            // endereco: \"\",\n\n            readonly: true,\n        };\n\n        this.initial_data = {};\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const visitante = {\n            nome: this.state.nome,\n            // telefone: this.state.telefone,\n            email: this.state.email,\n            // dt_nasc: this.state.dt_nasc,\n            rg: this.state.rg,\n            cpf: this.state.cpf,\n            // endereco: this.state.endereco,\n        }\n\n        this.props.onSave(visitante);\n    };\n\n    search = ()=>{\n        let rg = this.state.rg.replace(/(\\.|-)/g, \"\");\n        let cpf = this.state.cpf.replace(/(\\.|-)/g, \"\");\n\n        if ((cpf.length === 11 && isNumber(+cpf)) || (rg.length === 8 && isNumber(+rg))){\n            cpf = cpf.length === 11 ? cpf : null;\n            rg = rg.length === 8 ? rg : null;\n\n            make_request(\n                \"/visita_visitante/search\",\n                \"POST\",\n                JSON.stringify({cpf: cpf, rg: rg, what: \"RG_CPF\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    this.setState({...data, dt_nasc: date_parse(data.dt_nasc), readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({readonly: false});\n            });\n\n        } else {\n            this.setState({readonly: false});\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados do visitante...</h1>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_rg\">RG</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_rg\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o RG do visitante...\"\n                            value={this.state.rg}\n                            onBlur={this.search}\n                            onChange={(e)=>this.setState({rg: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 0000000-00, 000000000\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_cpf\">CPF</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_cpf\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o CPF do visitante...\"\n                            value={this.state.cpf}\n                            onBlur={this.search}\n                            onChange={(e)=>this.setState({cpf: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 000.000.000-00, 00000000000\n                        </small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_nome\">Nome</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_nome\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o nome do visitante...\"\n                            value={this.state.nome}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({nome: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Foo Bar Baz\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_email\">Email</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_email\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o email do visitante...\"\n                            value={this.state.email}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({email: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: foo@bar.baz\n                        </small>\n                    </div>\n                </div>\n\n               {/*  <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_dt_nasc\">Data de Nascimento</label>\n                        <input\n                            type=\"date\"\n                            id=\"visitante_dt_nasc\"\n                            className=\"form-control\"\n                            placeholder=\"Digite a data de nascimento do visitante...\"\n                            value={this.state.dt_nasc}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({dt_nasc: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 01/01/2001\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_telefone\">Telefone</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_telefone\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o telefone do visitante...\"\n                            value={this.state.telefone}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({telefone: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">\n                            Ex: (65) 99999-9999, 99999-9999, 3000-0000\n                        </small>\n                    </div>\n                </div> */}\n\n                {/* <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"visitante_endereco\">Endereço</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_endereco\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o endereço do visitante...\"\n                            value={this.state.endereco}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({endereco: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Rua Foo Bar, Número 00\n                        </small>\n                    </div>\n                </div> */}\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\"></div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-success float-right\"\n                            onClick={() =>{this.save_data(); this.props.onNext();}}>\n                            Avançar\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterVisitorVisitanteVeiculo extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            modelo: \"\",\n            cor: \"\",\n            placa: \"\",\n\n            visita_com_veiculo: false,\n            readonly: true,\n        };\n    }\n\n    search = ()=>{\n        let placa = this.state.placa.replace(/(\\.|-)/g, \"\");\n\n        if (placa.length >= 7){\n            make_request(\n                \"/visita_visitante/search\",\n                \"POST\",\n                JSON.stringify({placa: placa, what: \"PLACA\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    this.setState({...data, readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({ readonly: false});\n            });\n\n        } else {\n            this.setState({ readonly: false});\n        }\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n\n        if (initial_data != null) {\n            const with_vehicle = initial_data.placa != null &&\n                initial_data.placa.length > 0;\n\n            this.setState({\n                ...initial_data,\n                visita_com_veiculo: with_vehicle,\n            });\n        }\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const veiculo_visitante = this.state.visita_com_veiculo ? {\n            modelo: this.state.modelo,\n            cor: this.state.cor,\n            placa: this.state.placa,\n        } : null;\n\n        this.props.onSave(veiculo_visitante);\n    };\n\n    change_state_vehicle_state = (value) => {\n        const ro = !value ? true: this.state.readonly;\n        this.setState({ visita_com_veiculo: value, readonly: ro });\n    }\n\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados do veículo...</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            name=\"visita-veiculo\"\n                            checked={!this.state.visita_com_veiculo}\n                            onChange={ ()=>this.change_state_vehicle_state(false)}/>\n                        <label\n                            className=\"form-check-label\">\n                            Sem veículo\n                        </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            name=\"visita-veiculo\"\n                            checked={this.state.visita_com_veiculo}\n                            onChange={ ()=>this.change_state_vehicle_state(true)}>\n                        </input>\n                        <label\n                            className=\"form-check-label\">\n                            Com veículo\n                        </label>\n                    </div>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"veiculo_placa\">Placa</label>\n                        <input\n                            type=\"text\"\n                            id=\"veiculo_placa\"\n                            className=\"form-control\"\n                            placeholder=\"Digite a placa do veículo...\"\n                            value={this.state.placa}\n                            readOnly={!this.state.visita_com_veiculo}\n                            onBlur={this.search}\n                            onChange={e=>this.setState({placa: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: AAA-0000, AAA0000\n                        </small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                <div className=\"form-group col-6\">\n                        <label htmlFor=\"veiculo_modelo\">Modelo</label>\n                        <input\n                            type=\"text\"\n                            id=\"veiculo_modelo\"\n                            ref={this.veiculo_modelo}\n                            className=\"form-control\"\n                            placeholder=\"Digite o modelo do veículo...\"\n                            value={this.state.modelo}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({modelo: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Sedan, Hatch\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"veiculo_cor\">Cor</label>\n                        <input\n                            type=\"text\"\n                            id=\"veiculo_cor\"\n                            className=\"form-control\"\n                            placeholder=\"Digite a cor do veículo...\"\n                            value={this.state.cor}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({cor: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Branco, Preto\n                        </small>\n                    </div>\n                </div>\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-secondary float-left\"\n                            onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                            Voltar\n                        </button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-success float-right\"\n                            onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                            Avançar\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\n\nexport class AgentRegisterVisitorVisitanteVisita extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            objetivo: \"\",\n            data_inicio: \"\",\n            data_fim: \"\",\n            frequencia: \"Diário\",\n            pernoite: false,\n            horario_inicio: \"\",\n            horario_fim: \"\",\n        };\n\n        this.initial_data = {};\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null) {\n            this.setState({...initial_data});\n            console.log(initial_data);\n        }\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const visitante_visita = {\n            objetivo: this.state.objetivo,\n            data_inicio: this.state.data_inicio,\n            data_fim: this.state.data_fim,\n            frequencia: this.state.frequencia,\n            pernoite: this.state.pernoite,\n            horario_inicio: this.state.horario_inicio,\n            horario_fim: this.state.horario_fim,\n        }\n\n        this.props.onSave(visitante_visita);\n    };\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados da visita...</h1>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"data_inicio\">Data (Início)</label>\n                        <input\n                            type=\"date\" id=\"data_inicio\" className=\"form-control\" placeholder=\"Digite a data de início do evento...\"\n                            value={this.state.data_inicio} onChange={e=>this.setState({data_inicio: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 01/01/2011</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"data_fim\">Data (Término)</label>\n                        <input\n                            type=\"date\" id=\"data_fim\" className=\"form-control\" placeholder=\"Digite a data de término do evento...\"\n                            value={this.state.data_fim} onChange={e=>this.setState({data_fim: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 06/01/2011</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"horario_inicio\">Horário de Inicio</label>\n                        <input\n                            type=\"time\" id=\"\" ref={this.horario_inicio} className=\"form-control\" placeholder=\"Digite o horário de início da visita...\"\n                            value={this.state.horario_inicio} onChange={e=>this.setState({horario_inicio: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 13:30, 1:30 PM</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"horario_inicio\">Horário de Término</label>\n                        <input\n                            type=\"time\" id=\"\" ref={this.horario_fim} className=\"form-control\" placeholder=\"Digite o horário de termino da visita...\"\n                            value={this.state.horario_fim} onChange={e=>this.setState({horario_fim: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 18:30, 6:30 PM</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"frequencia\">Frequência das visitas</label>\n                        <select\n                            id=\"frequencia\" className=\"form-control\"\n                            value={this.state.frequencia}\n                            onChange={e=>this.setState({frequencia: e.target.value})}>\n                            <option value={\"Diário\"}  key=\"1\">Diário</option>\n                            <option value={\"Semanal\"} key=\"2\">Semanal</option>\n                            <option value={\"Mensal\"}  key=\"3\">Mensal</option>\n                        </select>\n                        <small className=\"form-text text-muted\">Ex: Diário, Semanal</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"pernoite\">Pernoite</label>\n                        <select\n                            id=\"pernoite\" ref={this.pernoite} className=\"form-control\"\n                            value={this.state.pernoite} onChange={e=>this.setState({pernoite: e.target.value})}>\n                            <option value={false} key=\"1\">Não</option>\n                            <option value={true}  key=\"2\">Sim</option>\n                        </select>\n                        <small className=\"form-text text-muted\">Ex: Sim, Não</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"objetivo\">Objetivo</label>\n                        <input\n                            type=\"textarea\" id=\"objetivo\" ref={this.objetivo} className=\"form-control\" placeholder=\"Digite o objetivo da visita...\"\n                            value={this.state.objetivo} onChange={e=>this.setState({objetivo: e.target.value})}>\n                            </input>\n                        <small className=\"form-text text-muted\">Ex: Rua Foo Bar, Número 00</small>\n                    </div>\n                </div>\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-secondary float-left\" onClick={()=>{ this.save_data(); this.props.onBack(); }}>Voltar</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={()=>{ this.save_data(); this.props.onNext(); }}>Finalizar</button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterVisitorEmpresa extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            nome: \"\",\n            // cep: \"\",\n            cnpj: \"\",\n            // telefone: \"\",\n\n            autonomo: true,\n\n            readonly: true,\n        };\n\n    }\n\n    search = ()=>{\n        let cnpj = this.state.cnpj.replace(/(\\.|-\\/)/g, \"\");\n\n        if (cnpj.length >= 14){\n            make_request(\n                \"/visita_visitante/search\",\n                \"POST\",\n                JSON.stringify({cnpj: cnpj, what: \"CNPJ\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    this.setState({...data, readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({...this.initial_data, readonly: false});\n            });\n\n        } else {\n            this.setState({...this.initial_data, readonly: false});\n        }\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null) {\n            const autonomo = !(initial_data.cnpj &&\n                initial_data.cnpj.length > 0);\n            this.setState({...initial_data, autonomo: autonomo});\n        }\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const empresa = this.state.autonomo\n            ? null\n            : {\n                nome: this.state.nome,\n                cep: this.state.cep,\n                cnpj: this.remove_mark_sings(this.state.cnpj),\n                telefone: this.state.telefone,\n            };\n\n        this.props.onSave(empresa);\n    };\n\n    change_state_company_state = (value) => {\n        const ro = !value ? true: this.state.readonly;\n        this.setState({ autonomo: value, readonly: ro });\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados da empresa...</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            name=\"visitante-autonomo\"\n                            checked={this.state.autonomo}\n                            onChange={ ()=>this.change_state_company_state(true)}/>\n                        <label\n                            className=\"form-check-label\">\n                            Autônomo\n                        </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            name=\"visitante-autonomo\"\n                            checked={!this.state.autonomo}\n                            onChange={ ()=>this.change_state_company_state(false)}>\n                        </input>\n                        <label\n                            className=\"form-check-label\">\n                            Contratado\n                        </label>\n                    </div>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"empresa_cnpj\">CNPJ</label>\n                        <input\n                            type=\"text\"\n                            id=\"empresa_cnpj\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o CNPJ da empresa\"\n                            value={this.state.cnpj}\n                            onBlur={this.search}\n                            readOnly={this.state.autonomo}\n                            onChange={e=>this.setState({cnpj: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 39.848.267/0001-79\n                        </small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"empresa_nome\">Nome da Empresa</label>\n                        <input\n                            type=\"text\"\n                            id=\"empresa_nome\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o nome da empresa...\"\n                            value={this.state.nome}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({nome: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Foo Bar SA\n                        </small>\n                    </div>\n\n                   {/*  <div className=\"form-group col-3\">\n                        <label htmlFor=\"cep\">CEP</label>\n                        <input\n                            type=\"text\"\n                            id=\"cep\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o CEP da empresa...\"\n                            value={this.state.cep}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({cep: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 78000-000\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-3\">\n                        <label htmlFor=\"telefone\">Telefone</label>\n                        <input\n                            type=\"text\"\n                            id=\"telefone\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o telefone da empresa...\"\n                            value={this.state.telefone}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({telefone: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: (00) 0000-0000</small>\n                    </div> */}\n                </div>\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-secondary float-left\"\n                            onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                            Voltar\n                        </button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-success float-right\"\n                            onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                            Avançar\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { AgentRegisterVisitorVisitante } from \"./agent_register_visitor_visitante\";\nimport { AgentRegisterVisitorVisitanteVeiculo } from \"./agent_register_visitor_visitante_veiculo\";\nimport { AgentRegisterVisitorVisitanteVisita } from \"./agent_register_visitor_visitante_visita\";\nimport { AgentRegisterVisitorEmpresa } from \"./agent_register_visitor_empresa\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterVisitor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visitante: null,\n\n            veiculo_visitante: null,\n\n            empresa: null,\n\n            visita_visitante: null,\n\n            menu_progress: 1,\n\n            communication_status: \"\",\n        };\n\n        this.reset_state = {\n            visitante: null,\n\n            veiculo_visitante: null,\n\n            empresa: null,\n\n            visita_visitante: null,\n        };\n    }\n\n    send_to_server = () => {\n        const {menu_progress, communication_status, ...data} = this.state;\n\n        make_request(\n            \"/visita_visitante\",\n            \"POST\",\n            JSON.stringify(data)\n        ).then( res =>{\n            if (res.status === 200){\n                this.setState({ ...this.reset_state, communication_status: \"Dados enviados com sucesso!\"} );\n            } else {\n                this.setState({\n                    communication_status: \"Não foi possível cadastrar esses dados. Verifica que se todos os campos estão preenchidos corretamente.\"\n                });\n            }\n        }).catch( err => {\n            this.setState({\n                communication_status: \"Erro ao comunicar com o servidor. Verifique sua conexão com a rede.\"\n            });\n        });\n    };\n\n    delta_progress = (val) => this.setState((state, props) => {\n        return {menu_progress: state.menu_progress + val};\n    });\n\n\n    inc_progress = () => this.setState((state, props) => {\n        return this.delta_progress(+1);\n    });\n\n    dec_progress = () => this.setState((state, props) => {\n        return this.delta_progress(-1);\n    });\n\n    restart_menu = () => {\n        this.setState({menu_progress: 1});\n    }\n\n    render = () => {\n        switch(this.state.menu_progress){\n        case 1:\n            return (\n\n                <AgentRegisterVisitorVisitante\n                    onSave={ data => this.setState({visitante: data}) }\n                    onInitialValues={ () => this.state.visitante }\n                    backendAddr={this.props.backendAddr}\n                    onNext={ this.inc_progress }>\n                </AgentRegisterVisitorVisitante>);\n        case 2:\n            return (\n                <AgentRegisterVisitorVisitanteVeiculo\n                    onSave={ data => this.setState({veiculo_visitante: data}) }\n                    onInitialValues={ () => this.state.veiculo_visitante }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterVisitorVisitanteVeiculo>);\n        case 3:\n            return (\n                <AgentRegisterVisitorEmpresa\n                    onSave={ data => this.setState({empresa: data}) }\n                    onInitialValues={ () => this.state.empresa }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterVisitorEmpresa>\n            );\n        case 4:\n\n            return (\n                <AgentRegisterVisitorVisitanteVisita\n                    onSave={ data => this.setState({visita_visitante: data}) }\n                    onInitialValues={ () => this.state.visita_visitante }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterVisitorVisitanteVisita>\n            );\n        case 5:\n                {this.send_to_server()}\n                {this.inc_progress()}\n                case 6:\n                return(\n                    <div className=\"container\">\n                <h2>{this.state.communication_status}</h2>\n                <button className=\"btn btn-primary\" onClick={this.restart_menu}>Continuar</button>\n            </div>);\n        default:\n            {this.restart_menu()}\n        }\n    };\n};","import React, { Component } from \"react\";\nimport { AgentRegisterActions } from \"./agent_register_actions\";\nimport { AgentRegisterEmployee } from \"./agent_register_employee\";\nimport { AgentRegisterStudent } from \"./agent_register_student\";\nimport { AgentRegisterVisitor } from \"./agent_register_visitor\";\n\nexport class AgentRegisterRequest extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            current_action: \"\"\n        };\n    }\n\n    render_body = ()=>{\n\n        switch (this.state.current_action){\n            case \"student\":\n                return <AgentRegisterStudent\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterStudent>;\n            case \"employee\":\n                return <AgentRegisterEmployee\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterEmployee>;\n            case \"visitor\":\n                return <AgentRegisterVisitor\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterVisitor>;\n            default:\n                return <AgentRegisterStudent\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterStudent>;\n        }\n\n\n    }\n\n    render = ()=>{\n        return(\n            <div className=\"container \">\n                <div className=\"row justify-content-md-center\">\n                    <AgentRegisterActions\n                        student={()=>this.setState({current_action: \"student\"})}\n                        employee={()=>this.setState({current_action: \"employee\"})}\n                        visitor={()=>this.setState({current_action: \"visitor\"})}\n                    ></AgentRegisterActions>\n                </div>\n                <div className=\"container pt-5\">\n                    { this.render_body() }\n                </div>\n            </div>\n        )\n    }\n};","import React, {Component} from \"react\";\nimport { make_request } from \"./request\";\n\nexport class ChangePassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            old_password: \"\",\n            new_password: \"\",\n            confirm_password: \"\",\n            message: \"Digite as senhas...\",\n            message_class: \"text-danger\",\n        };\n    }\n\n    send_to_server = ()=>{\n        const data = {\n            old_password: this.state.old_password,\n            new_password: this.state.new_password\n        }\n\n        if (this.state.confirm_password !== this.state.new_password ||\n            this.state.new_password.length < 6) {\n            this.setState({\n                message: \"As senhas não são iguais ou não possui menos de 6 caracteres\",\n                message_class: \"text-danger\"\n            });\n        }\n        else {\n            this.setState({\n                message: \"Enviando dados para o servidor...\",\n                message_class: \"text-primary\"\n            });\n\n            make_request(\"/auth/change_password\", \"POST\", JSON.stringify(data))\n            .then(res => {\n                if (res.status === 200)\n                    this.setState({\n                        message: \"Senha alterada!\",\n                        message_class: \"text-success\",\n                        old_password: \"\",\n                        new_password: \"\",\n                        confirm_password: \"\",\n                    });\n                else\n                    this.setState({\n                        message: \"Não foi possível alterar a senha!\",\n                        message_class: \"text-danger\",\n                    });\n            })\n            .catch(err => {\n\n            });\n        }\n    }\n\n\n    render = ()=>{\n        return (\n            <div className=\"container w-50\">\n                <div className=\"row justify-content-center\">\n                    <h3>Alterar senha</h3>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"oldpassword\">Senha antiga:</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"password\"\n                            id=\"oldpassword\"\n                            value={this.state.old_password}\n                            onChange={e=>this.setState({old_password: e.target.value})}>\n                        </input>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"newpassword\">Senha nova:</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"password\"\n                            id=\"newpassword\"\n                            value={this.state.new_password}\n                            onChange={e=>{\n                                this.setState({new_password: e.target.value});\n                            }}>\n                        </input>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"confirmpassword\">Confirme a senha:</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"password\"\n                            id=\"confirmpassword\"\n                            value={this.state.confirm_password}\n                            onChange={e=>{\n                                this.setState({confirm_password: e.target.value});\n                            }}>\n                            </input>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.send_to_server}>\n                        Mudar Senha\n                    </button>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className={this.state.message_class}>{this.state.message}</div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nexport class Notification extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            receber_notificacao: false,\n            message: \"\",\n            message_class: \"\",\n        };\n    }\n\n    send_to_server = () => {\n        make_request(\"/user_info/notification\", \"POST\", JSON.stringify({\n            receber_notificacao: this.state.receber_notificacao,\n        }))\n        .then(res => {\n            if (res.status === 200)\n                this.setState({\n                    message: \"Alterado com sucesso!!\",\n                    message_class: \"text-success\"\n                });\n            else\n                this.setState({\n                    message: \"Ops! ocorreu um erro.\",\n                    message_class: \"text-danger\",\n                });\n        })\n        .catch(err => {\n            this.setState({\n                message: \"Ops! ocorreu um erro ao enviar esses dados.\",\n                message_class: \"text-danger\",\n            });\n        })\n    }\n\n    componentDidMount = () => {\n        make_request(\"/user_info/notification\", \"GET\")\n        .then(res => res.json())\n        .then(notf => this.setState({\n            receber_notificacao: notf.receber_notificacao,\n            message: \"Ok\",\n            message_class:  \"text-success\",\n        }))\n        .catch(err => {\n            console.log(err);\n            this.setState({\n                message: \"Ops! ocorreu um erro.\",\n                message_class: \"text-danger\",\n            });\n        });\n    }\n\n    componentWillUnmount = ()=> {\n        this.send_to_server();\n    }\n\n    render = ()=>{\n        return (\n            <div className=\"container w-50\">\n                <div className=\"row justify-content-center\">\n                    <h3>Receber notificações</h3>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input\"\n                            id=\"customCheck1\"\n                            checked={this.state.receber_notificacao}\n                            onChange={e=>this.setState({\n                                receber_notificacao: e.target.checked,\n                            })}>\n                        </input>\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Eu concordo em receber notificações no meu email</label>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className={this.state.message_class}>{this.state.message}</div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { ChangePassword } from \"./change_password\";\nimport { Notification } from \"./notification\";\n\nexport class Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n\n    render = () => {\n        return (\n            <div className=\"container w-50\">\n                <hr/>\n                    <ChangePassword></ChangePassword>\n                <hr/>\n                    <Notification></Notification>\n                <hr/>\n                <div className=\"footer\"></div>\n            </div>\n        )\n    }\n}","\n\n// -- imports\n// ---- core imports\n\n// ---- third imports\nimport React, { Component } from  \"react\";\nimport { DashboardNavbar } from \"./dashboard_navbar\";\nimport { AgentActions } from \"./agent_actions\"\nimport { AgentWaitingRequest } from \"./agent_waiting_request\"\nimport { AgentProcessedRequest } from \"./agent_processed_request\";\nimport { AgentRegisterRequest } from \"./agent_register_request\";\nimport { Settings } from \"./settings\";\n\n// ---- user imports\n\n\nexport class AgentDashboard extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            user_info: this.props.userInfo,\n            current_action: \"waiting\",\n        }\n    }\n\n    body =  (current_action) => {\n        switch ( current_action ){\n            case \"waiting\":\n                return(<AgentWaitingRequest\n                    backendAddr={this.props.backendAddr}\n                ></AgentWaitingRequest>);\n            case \"processed\":\n                return(<AgentProcessedRequest\n                    backendAddr={this.props.backendAddr}\n                ></AgentProcessedRequest>);\n            case \"register\":\n                return(<AgentRegisterRequest\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterRequest>);\n            case \"settings\":\n                return(\n                    <Settings></Settings>\n                );\n            default:\n                return(<AgentWaitingRequest\n                    backendAddr={this.props.backendAddr}\n                ></AgentWaitingRequest>);\n        }\n    }\n\n    on_settings = ()=>{\n        this.setState({current_action: \"settings\"});\n    }\n\n    render = () => {\n        return (\n            <div>\n                <DashboardNavbar\n                    onLogout={this.props.onLogout}\n                    on_settings={this.on_settings}>\n                </DashboardNavbar>\n                <div className=\"container pt-3 pb-3\">\n                    <div className=\"row justify-content-md-center\">\n                        <AgentActions\n                            waiting={()=>this.setState({current_action: \"waiting\"})}\n                            processed={()=>this.setState({current_action: \"processed\"})}\n                            register={()=>this.setState({current_action: \"register\"})}\n                        ></AgentActions>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    { this.body(this.state.current_action) }\n                </div>\n            </div>\n        );\n\n    };\n};","import React, { Component } from \"react\";\n\n\nexport class ManagerActions extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render = ()=>{\n        return(\n            <div\n                className=\"btn-group\"\n                role=\"group\"\n                aria-label=\"agent actions\"\n            >\n                <button\n                    type=\"button\"\n                    onClick={this.props.waiting}\n                    className=\"btn btn-primary\">\n                    Aguardando\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={this.props.processed}\n                    className=\"btn btn-primary\">\n                    Processados\n                </button>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\n\nimport { make_request } from \"./request\";\n\nimport { format_date } from \"./utility\";\n\nexport class RequestApprove extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            ...this.props.data,\n            message: \"\",\n        };\n    }\n\n    approve = () => {\n        make_request(\"/visita_process\", \"POST\", JSON.stringify({\n            tipo_requisicao: this.state.tipo_requisicao,\n            id: this.state.id,\n            status: \"approve\",\n        }))\n        .then(res=>{\n            if (res.status === 200)\n                this.props.backAction();\n            else\n                this.setState({\n                    ...this.state,\n                    message: \"Ocurreu um erro ao processar está requisição.\"\n                });\n        })\n    }\n\n    render = () => {\n        return (\n        <div className=\"container\">\n\n            <div className=\"form-group\">\n                Solicitação para visita de:\n                <label\n                    className=\"form-control\">\n                    {this.state.nome}\n                </label>\n            </div>\n            <div className=\"form-group\">\n                Na data:\n                <label\n                    className=\"form-control\">\n                    {format_date(this.state.data)}\n                </label>\n            </div>\n            <div className=\"form-group\">\n                Solicitado por:\n                <label\n                    className=\"form-control\">\n                    {this.state.requerente}\n                </label>\n            </div>\n            <div className=\"row justify-content-center\">\n                <h3 className=\"text-danger\">{this.state.message}</h3>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-secondary float-left\"\n                        onClick={ this.props.backAction }>\n                        Voltar\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-success float-right w-25\"\n                        onClick={ this.approve }>\n                        Aprovar\n                    </button>\n                </div>\n            </div>\n        </div>);\n    }\n}","import React, { Component } from \"react\";\n\nimport { make_request } from \"./request\";\n\nimport { format_date } from \"./utility\";\n\nexport class RequestReject extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            ...this.props.data,\n            message: \"\"\n        };\n    }\n\n    reject = () => {\n        make_request(\"/visita_process\", \"POST\", JSON.stringify({\n            tipo_requisicao: this.state.tipo_requisicao,\n            id: this.state.id,\n            status: \"reject\",\n        }))\n        .then(res=>{\n            if (res.status === 200)\n                this.props.backAction();\n            else\n                this.setState({\n                    ...this.state,\n                    message: \"Ocurreu um erro ao processar está requisição.\"\n                });\n        })\n    }\n    render = () => {\n        return (\n        <div className=\"container\">\n\n            <div className=\"form-group\">\n                Solicitação para visita de:\n                <label className=\"form-control\">{this.state.nome}</label>\n            </div>\n            <div className=\"form-group\">\n                Na data:\n                <label className=\"form-control\">{format_date(this.state.data)}</label>\n            </div>\n            <div className=\"form-group\">\n                Solicitado por:\n                <label className=\"form-control\">{this.state.requerente}</label>\n            </div>\n            <div className=\"row justify-content-center\">\n                <h3 className=\"text-danger\">{this.state.message}</h3>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button className=\"btn btn-secondary float-left\" onClick={ this.props.backAction }>Voltar</button>\n                </div>\n                <div className=\"col-6\">\n                    <button className=\"btn btn-danger float-right w-25\" onClick={ this.reject }>Rejeitar</button>\n                </div>\n            </div>\n        </div>);\n    }\n}","import React, { Component } from \"react\";\n\nimport { RequestDetail } from \"./request_detail\";\nimport { RequestApprove } from \"./request_approve\";\nimport { RequestReject } from \"./request_reject\";\nimport { make_request } from \"./request\";\n\nimport { format_date } from \"./utility\";\n\nexport class ManagerWaitingRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_action: \"list\",\n            request_id: null,\n            data: null,\n        };\n    }\n\n    search = ()=>{\n        make_request(\"/visita\", \"POST\", JSON.stringify({\n            what: \"STATUS_AGUARDANDO\",\n\n        }))\n        .then(res=>res.json())\n        .then(result => {\n            let data = {};\n            result.map( (row, ind) => data[ind] = row);\n\n            this.setState({data: data});\n        })\n        .catch(err => {\n            console.log(\"error\");\n        });\n    }\n\n    componentDidMount = ()=>{\n        this.search();\n    }\n\n    __onReject = (row) => {\n        this.setState({current_action: \"reject\", selected_row: row});\n    }\n\n    __onApprove = (row) => {\n        this.setState({current_action: \"approve\", selected_row: row});\n    }\n\n    __onDatail = (row) => {\n        this.setState({current_action: \"detail\", selected_row: row});\n    }\n\n    format_data = () => {\n        // console.log(\"Here\");\n        if (this.state.data == null)\n            return;\n\n        const table = Object.values(this.state.data).map((row, i) => {\n\n            return (\n            <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{row.tipo_requisicao}</td>\n                <td>{row.nome}</td>\n                <td>{ format_date(row.data) }</td>\n                <td>{row.requerente}</td>\n                <td>\n                    <button\n                        className=\"btn btn-info\"\n                        onClick={()=>{this.__onDatail(row)}}>\n                        Detalhes\n                    </button>\n                    <span className=\"pr-1\"></span>\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={()=>{this.__onReject(row)}}>\n                        Rejeitar\n                    </button>\n                    <span className=\"pr-1\"></span>\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={()=>{this.__onApprove(row)}}>\n                        Aprovar\n                    </button>\n                </td>\n            </tr>\n        )});\n\n        return table;\n    }\n\n    list = () => {\n        return (\n            <div className=\"row justify-content-center\">\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Tipo de Requisição</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Data</th>\n                            <th scope=\"col\">Requerente</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.format_data()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    action_handler = () => {\n        const backAction = ()=> { this.setState({current_action: \"list\"}); this.search() };\n        switch (this.state.current_action){\n            case \"list\":\n                return this.list();\n            case \"detail\":\n                return  <RequestDetail\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestDetail>;\n            case \"approve\":\n                return  <RequestApprove\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        ></RequestApprove>;\n\n            case \"reject\":\n                return <RequestReject\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        ></RequestReject>;\n\n            default:\n                return <div>Error</div>\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                { this.action_handler() }\n            <div className=\"footer\"></div>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nimport { RequestDetail } from \"./request_detail\";\n\nimport { format_date } from \"./utility\";\n\n// TODO\n//      Criar as páginas de edição\n//                          remoção\n//                          detalhes\n// OBS\n//      Os dados devem ser retornados do DB com o id do evento\n\nexport class ManagerProcessedRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_action: \"list\",\n            request_id: null,\n            data: null,\n        };\n    }\n\n    search = ()=>{\n        make_request(\"/visita\", \"POST\", JSON.stringify({\n            what: \"STATUS_PROCESSADO\",\n        }))\n        .then(res=>res.json())\n        .then(result => {\n            let data = {};\n            result.map( (row, ind) => data[ind] = row);\n\n            this.setState({data: data});\n        })\n        .catch(err => {\n            console.log(\"error\");\n        });\n    }\n\n    componentDidMount = ()=>{\n        this.search();\n    }\n\n       __onDetail = (row) => {\n        this.setState({current_action: \"detail\", selected_row: row})\n    }\n\n    format_data = () => {\n        if (this.state.data == null)\n            return;\n\n        const table = Object.values(this.state.data).map((row, i) => {\n            return (\n                <tr key={i} className={row.status_de_aprovacao === 1 ? \"bg-light-green\" : \"bg-light-red\"}>\n                    <td>{i + 1}</td>\n                    <td>{row.tipo_requisicao}</td>\n                    <td>{row.nome}</td>\n                    <td>{format_date(row.data)}</td>\n                    <td>{row.status_de_aprovacao === 1 ? \"Aprovado\" : \"Não Aprovado\"}</td>\n                    <td>\n                        {/* <button className=\"btn btn-outline-primary\" onClick={() => { this.__onPDF(row) }}>Gerar PDF</button> */}\n                        <button className=\"btn btn-primary\" onClick={() => { this.__onDetail(row) }}>Detalhes</button>\n                        </td>\n                </tr>\n            )\n        });\n\n        return table;\n    }\n\n    list = () => {\n        return (\n            <div className=\"row justify-content-center\">\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Tipo de Requisição</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Data</th>\n                            <th scope=\"col\">Status de Aprovação</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.format_data()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    action_handler = () => {\n        const backAction = () => this.setState({current_action: \"list\"})\n        switch (this.state.current_action){\n            case \"list\":\n                return this.list();\n            case \"detail\":\n                return <RequestDetail\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestDetail>;\n            default:\n                return <div>Error</div>\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                { this.action_handler() }\n                <div className=\"footer\"></div>\n            </div>\n        );\n    }\n};","\n\n// -- imports\n// ---- core imports\n\n// ---- third imports\nimport React, { Component } from  \"react\";\nimport { DashboardNavbar } from \"./dashboard_navbar\";\n\n\n// ---- user imports\nimport { ManagerActions } from \"./manager_actions\";\nimport { ManagerWaitingRequest } from \"./manager_waiting_request\";\nimport { ManagerProcessedRequest } from \"./manager_processed_request\";\nimport { Settings } from \"./settings\";\n\n\nexport class ManagerDashboard extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            user_info: this.props.userInfo,\n            current_action: \"waiting\",\n        };\n    }\n\n    body =  (current_action) => {\n        switch ( current_action ){\n            case \"waiting\":\n                return(<ManagerWaitingRequest\n                    backendAddr={this.props.backendAddr}\n                ></ManagerWaitingRequest>);\n            case \"processed\":\n                return(<ManagerProcessedRequest\n                    backendAddr={this.props.backendAddr}\n                ></ManagerProcessedRequest>);\n            case \"settings\":\n                return(\n                    <Settings></Settings>\n                );\n            default:\n                return(<ManagerWaitingRequest\n                    backendAddr={this.props.backendAddr}\n                ></ManagerWaitingRequest>);\n        }\n    }\n\n    on_settings = ()=>{\n        this.setState({current_action: \"settings\"});\n    }\n\n    render = () => {\n        return (\n            <div>\n                <DashboardNavbar\n                    onLogout={this.props.onLogout}\n                    on_settings={this.on_settings}>\n                </DashboardNavbar>\n\n                <div className=\"container pt-3 pb-3\">\n                    <div className=\"row justify-content-md-center\">\n                        <ManagerActions\n                            waiting={()=>this.setState({current_action: \"waiting\"})}\n                            processed={()=>this.setState({current_action: \"processed\"})}\n                        ></ManagerActions>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    { this.body(this.state.current_action) }\n                </div>\n            </div>\n        );\n\n    };\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nexport class ResetPassword extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: \"\",\n            siape: \"\",\n            message: \"\"\n        };\n    }\n\n    send_to_server = () => {\n        const data = {\n            email: this.state.email,\n            siape: this.state.siape,\n        };\n\n        make_request(\"/authentication/reset_password/\", \"POST\", JSON.stringify(data))\n        .then(res => {\n            if (res.status === 200)\n                this.setState({message: \"Verifique o seu email com a nova senha.\"});\n            else\n                console.log(\"Fail\");\n        })\n        .catch(console.log);\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-center pt-5 pb-3\">\n                    <h3\n                        className=\"text-primary\">Recuperar Senha</h3>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.email}\n                            onChange={e=>this.setState({email: e.target.value})}>\n                        </input>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"siape\">Siape</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.siape}\n                            onChange={e=>this.setState({siape: e.target.value})}>\n                        </input>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group\">\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-outline-secondary mr-2\"\n                            onClick={this.props.onBack}>\n                            Voltar\n                        </button>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-outline-dark ml-2\"\n                            onClick={this.send_to_server}>\n                            Recuperar!!!\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Login } from \"./login\";\nimport { Register } from \"./register\";\nimport { AgentDashboard } from \"./agent_dashboard\";\nimport { ManagerDashboard } from \"./manager_dashboard\";\nimport { make_request } from \"./request\";\nimport { ResetPassword } from \"./reset_password\";\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            app_state: \"login_screen\",\n            backend_addr: \"http://localhost:3001\",\n            user_info: null,\n        };\n    }\n\n    componentDidMount = () => {\n        // this.setState({ app_state: \"agent_dashboard\"});\n        // return;\n\n        make_request(\n            \"/user_info\",\n            \"GET\"\n        ).then( res => {\n            if (res.status === 200){\n                res.json()\n                .then( data => {\n                    const app_state = { 0: \"agent_dashboard\", 1: \"manager_dashboard\" };\n                    this.setState({\n                        user_info: data,\n                        app_state: app_state[data.tipo],\n                    });\n                })\n                .catch( err =>{\n                    console.log(\"Error in parsing...\");\n                });\n            }\n        })\n        .catch( err => {\n            console.log(\"Error in request user info\");\n        });\n    }\n\n    render = () => {\n        const state = this.state.app_state;\n        if (state === \"login_screen\") {\n            return (<Login\n                onSuccess={ () => window.location.reload() }\n                onFail={() => { }}\n                onRegister={() => { this.setState({ app_state: \"register_screen\" }) }}\n                onForgetPassword={()=>this.setState({app_state: \"reset_password\"})}\n                backendAddr={this.state.backend_addr}\n            />);\n        }\n\n        if (state === \"register_screen\") {\n            return (\n                <Register\n                    onBack={() => this.setState({ app_state: \"login_screen\" })}\n                    backendAddr={this.state.backend_addr}\n                />\n            );\n        }\n\n        if (state === \"agent_dashboard\") {\n            return (\n            <AgentDashboard\n                userInfo={this.state.user_info}\n                onLogout={()=>this.setState({app_state: \"login_screen\"})}\n                backendAddr={this.state.backend_addr}>\n            </AgentDashboard>\n            );\n        }\n\n        if (state === \"manager_dashboard\") {\n            return (\n            <ManagerDashboard\n                userInfo={this.state.user_info}\n                onLogout={()=>this.setState({app_state: \"login_screen\"})}\n                backendAddr={this.state.backend_addr}>\n            </ManagerDashboard>\n            );\n        }\n\n        if (state === \"reset_password\") {\n            return (\n                <ResetPassword\n                    onBack={() => this.setState({ app_state: \"login_screen\" })}>\n                </ResetPassword>\n            );\n        }\n\n        return (<div></div>);\n    }\n};\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));"],"sourceRoot":""}