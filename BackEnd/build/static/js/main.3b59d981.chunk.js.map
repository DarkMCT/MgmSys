{"version":3,"sources":["request.js","login.js","register.js","dashboard_navbar.js","agent_actions.js","utility.js","request_edit_aluno.js","request_edit_servidor.js","request_edit_visitante.js","request_edit.js","request_remove.js","request_detail_aluno.js","request_detail_servidor.js","request_detail_visitante.js","request_detail.js","agent_waiting_request.js","agent_processed_request.js","agent_register_actions.js","agent_register_employee_servidor.js","agent_register_employee_servidor_visita.js","agent_register_employee_servidor_veiculo.js","agent_register_employee.js","agent_register_student_aluno.js","agent_register_student_aluno_visita.js","agent_register_student.js","agent_register_visitor_visitante.js","agent_register_visitor_visitante_veiculo.js","agent_register_visitor_visitante_visita.js","agent_register_visitor_empresa.js","agent_register_visitor.js","agent_register_request.js","agent_dashboard.js","manager_actions.js","request_approve.js","request_reject.js","manager_waiting_request.js","manager_processed_request.js","manager_dashboard.js","index.js"],"names":["header","Headers","set","make_request","url","method","body","fetch","headers","credentials","mode","Login","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","authenticate","JSON","stringify","operation","siape","state","senha","then","res","status","setState","message","logged","onFail","json","onSuccess","catch","err","render","react_default","a","createElement","className","style","fontFamily","htmlFor","type","name","id","onChange","event","target","value","onClick","onRegister","inherits","Component","Register","componentDidMount","fetchDepartaments","data","departamentos","console","error","getDepartaments","map","departamento","key","id_departamento","sigla","nome","getUserTypes","tipo","i","sendCredentials","onBack","warning","e","objectSpread","email","ref","defaultValue","fk_id_departamento","DashboardNavbar","logout","onLogout","log","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","AgentActions","waiting","processed","register","date_parse","date","tmp_dt","Date","year","getFullYear","toString","month","getMonth","day","getUTCDate","padStart","reduce","p","format_date","tmp","concat","deep_copy","source","result","keys","forEach","k","subobject","check_changed_fields","altered_values","_arr","_i","length","field","_arr2","_i2","subfield","RequestEditAluno","visita_aluno","original_data","make_input","object","update_state","send_to_server","scope","colSpan","data_inicio","data_fim","frequencia","horario_inicio","horario_fim","objetivo","aluno","matricula","rg","cpf","curso","semestre","RequestEditServidor","visita_servidor","servidor","veiculo_servidor","placa","modelo","cor","RequestEditVisitante","visita_visitante","visitante","empresa","cnpj","veiculo_visitante","RequestEdit","query","requisicao","id_visita","tipo_requisicao","edit_request","request_edit_aluno_RequestEditAluno","backAction","request_edit_servidor_RequestEditServidor","request_edit_visitante_RequestEditVisitante","RequestRemove","db_remove","print_data","print_message","print_prompt","RequestDetailAluno","RequestDetailServidor","telefone","RequestDetailVisitante","RequestDetail","show_request","request_detail_aluno_RequestDetailAluno","request_detail_servidor_RequestDetailServidor","request_detail_visitante_RequestDetailVisitante","AgentWaitingRequest","search","what","row","ind","__onRemove","current_action","selected_row","__onEdit","__onDetail","format_data","values","list","action_handler","request_edit_RequestEdit","request_remove_RequestRemove","request_detail_RequestDetail","request_id","AgentProcessedRequest","status_de_aprovacao","AgentRegisterActions","student","employee","visitor","AgentRegisterEmployeeServidor","initial_data","onInitialValues","save_data","onSave","replace","dt_nasc","readonly","servidor_siape","placeholder","onBlur","servidor_rg","readOnly","servidor_cpf","servidor_nome","servidor_email","onNext","AgentRegisterEmployeeServidorVisita","pernoite","AgentRegisterEmployeeServidorVeiculo","with_vehicle","visita_com_veiculo","change_state_vehicle_state","ro","checked","AgentRegisterEmployee","_this$state","menu_progress","communication_status","objectWithoutProperties","reset_state","delta_progress","val","inc_progress","dec_progress","restart_menu","agent_register_employee_servidor_AgentRegisterEmployeeServidor","backendAddr","agent_register_employee_servidor_veiculo_AgentRegisterEmployeeServidorVeiculo","agent_register_employee_servidor_visita_AgentRegisterEmployeeServidorVisita","AgentRegisterStudentAluno","remove_mark_sings","str","student_aluno","nw_data","estudante_matricula","estudante_rg","estudante_cpf","estudante_nome","estudante_email","estudante_curso","estudante_semestre","AgentRegisterStudentAlunoVisita","student_visit","AgentRegisterStudent","agent_register_student_aluno_AgentRegisterStudentAluno","agent_register_student_aluno_visita_AgentRegisterStudentAlunoVisita","AgentRegisterVisitorVisitante","isNumber","AgentRegisterVisitorVisitanteVeiculo","veiculo_modelo","AgentRegisterVisitorVisitanteVisita","visitante_visita","AgentRegisterVisitorEmpresa","autonomo","cep","change_state_company_state","AgentRegisterVisitor","agent_register_visitor_visitante_AgentRegisterVisitorVisitante","agent_register_visitor_visitante_veiculo_AgentRegisterVisitorVisitanteVeiculo","agent_register_visitor_empresa_AgentRegisterVisitorEmpresa","agent_register_visitor_visitante_visita_AgentRegisterVisitorVisitanteVisita","AgentRegisterRequest","render_body","agent_register_student_AgentRegisterStudent","agent_register_employee_AgentRegisterEmployee","agent_register_visitor_AgentRegisterVisitor","agent_register_actions_AgentRegisterActions","AgentDashboard","agent_waiting_request_AgentWaitingRequest","agent_processed_request_AgentProcessedRequest","agent_register_request_AgentRegisterRequest","dashboard_navbar_DashboardNavbar","agent_actions_AgentActions","user_info","userInfo","ManagerActions","RequestApprove","approve","requerente","RequestReject","reject","ManagerWaitingRequest","__onReject","__onApprove","__onDatail","request_approve_RequestApprove","request_reject_RequestReject","ManagerProcessedRequest","ManagerDashboard","manager_waiting_request_ManagerWaitingRequest","manager_processed_request_ManagerProcessedRequest","manager_actions_ManagerActions","Main","app_state","0","1","login_Login","window","location","reload","backend_addr","register_Register","agent_dashboard_AgentDashboard","manager_dashboard_ManagerDashboard","ReactDOM","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.3b59d981.chunk.js","sourcesContent":["\n// back-end url\nconst base_url = \"http://localhost:3001\";\n\nconst header = new Headers();\nheader.set(\"content-type\", \"application/json\");\n\n\n// This function is intended to forward the request in a single place and thus\n// it will be possible to encrypt all transferred data\nconst make_request = (url, method, body) => {\n\n    return (\n        fetch(base_url + url, {\n            headers: header,\n            credentials: \"include\",\n            method: method,\n            mode: \"cors\",\n            body: body,\n        })\n    );\n}\n\nexport { make_request };","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\n// should you pass a callback to be executed when the login\n// success (onSuccess) or fail  (onFail)\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            siape: \"\",\n            senha: \"\",\n            message: \"\",\n            logged: false,\n        };\n\n    }\n\n    authenticate = () => {\n        make_request(\n            \"/auth\",\n            \"POST\",\n            JSON.stringify({\n                operation: 'login',\n                siape: this.state.siape,\n                senha: this.state.senha,\n            })\n        ).then((res) => {\n            if (res.status !== 200) {\n                this.setState({\n                    message: \"Usuário não encontrado\",\n                    logged: false,\n                });\n                this.props.onFail();\n            } else if (res.status === 200) {\n                res.json()\n                    .then( ()=> {\n                        this.props.onSuccess();\n                    })\n                    .catch(err => {\n                        this.setState({ message: \"Tipo de usuário não identificado.\" });\n                    });\n            }\n        }).catch((err) => {\n            this.setState({\n                message: \"Não foi possível conectar com o servidor\",\n                logged: false,\n            });\n            this.props.onFail();\n        });\n    }\n\n    render = () => {\n        return (\n            <div className=\"container w-25 pt-5\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <h1 style={{fontFamily: 'Lobster'}}>MgmSys</h1>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"siape\">Siape:</label>\n                    <input\n                        type=\"text\"\n                        name=\"siape\"\n                        id=\"siape\"\n                        className=\"form-control\"\n                        onChange={event => {\n                            this.setState({\n                                siape: event.target.value\n                            })\n                        }}>\n                    </input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Senha:</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        className=\"form-control\"\n                        onChange={event => {\n                            this.setState({\n                                senha: event.target.value\n                            })\n                        }}>\n                    </input>\n                </div>\n                <label className=\"text-danger text-small\">{this.state.message}</label>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-outline-secondary w-50\"\n                    onClick={() => this.props.onRegister()}>\n                    Registrar\n                </button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-outline-primary w-50\"\n                    onClick={this.authenticate}>\n                    Login\n                </button>\n            </div>\n        );\n    }\n};\n\n","\nimport React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nexport class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departamentos: [],\n            warning: null,\n\n            credentials: {\n                operation: \"register\",\n                fk_id_departamento: null,\n                nome: null,\n                siape: null,\n                email: null,\n                senha: null,\n                tipo: null,\n            }\n        };\n    }\n\n    componentDidMount = () => {\n        this.fetchDepartaments();\n    }\n\n    fetchDepartaments = () => {\n        make_request(\n            \"/departamento\",\n            \"GET\"\n        ).then(res => {\n            return res.json();\n        }).then(data => {\n            this.setState({ departamentos: data });\n        }).catch(err => {\n            console.error(err);\n        });\n    };\n\n    getDepartaments = () => {\n        return (\n            this.state.departamentos.map(departamento => {\n                return (<option key={departamento.id_departamento} value={departamento.id_departamento}>\n                    {departamento.sigla + \" - \" + departamento.nome}\n                </option>);\n            })\n        );\n    };\n\n    getUserTypes = () => {\n        // 0 -> agente and 1 -> manager\n        return (\n            [\"Agente\", \"Gerente\"].map( (tipo, i) => <option key={i} value={i}>{ tipo }</option>)\n        );\n    }\n\n    sendCredentials = () => {\n        make_request(\n            \"/auth\",\n            \"POST\",\n            JSON.stringify(this.state.credentials)\n        ).then( res => {\n            if (res.status === 200)\n                this.props.onBack();\n            else\n                this.setState({warning: \"Dados inválidos\"});\n        }).catch( err => {\n            this.setState({warning: \"Dados inválidos\"});\n        });\n    }\n\n    render = () => {\n        return (\n            <div className=\"container w-50 pt-5\">\n                <div className=\"row justify-content-center\">\n                    <h1 style={{fontFamily: 'Lobster'}}>Cadastro de novos usuários</h1>\n                </div>\n                <br />\n                <div className=\"form-group\">\n                    <label htmlFor=\"siape\">Siape:</label>\n                    <input\n                        type=\"text\"\n                        name=\"siape\"\n                        id=\"siape\"\n                        className=\"form-control\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, siape: e.target.value\n                                }\n                            })\n                        }>\n                    </input>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">E-mail:</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"email\"\n                        className=\"form-control\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, email: e.target.value\n                                }\n                            })\n                        }>\n                    </input>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"nome\">Nome:</label>\n                    <input\n                        type=\"text\"\n                        name=\"nome\"\n                        id=\"nome\"\n                        className=\"form-control\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, nome: e.target.value\n                                }\n                            })\n                        }>\n                    </input>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"senha\">Senha:</label>\n                    <input\n                        type=\"password\"\n                        name=\"senha\"\n                        id=\"senha\"\n                        className=\"form-control\"\n                        ref={this.senha}\n                        onChange={\n                            e => {\n                                this.setState({\n                                    credentials: {\n                                        ...this.state.credentials, senha: e.target.value\n                                    }\n                                });\n                            }\n                        }></input>\n\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"tipo\">Tipo Usuário:</label>\n                    <select className=\"custom-select\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, tipo: e.target.value\n                                }\n                            })\n                        }>\n                        <option defaultValue>Selecione o tipo de usuário</option>\n                        {this.getUserTypes()}\n                    </select>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"departamento\">Departamento:</label>\n                    <select className=\"custom-select\"\n                        onChange={\n                            e => this.setState({\n                                credentials: {\n                                    ...this.state.credentials, fk_id_departamento: e.target.value\n                                }\n                            })\n                        }>\n                        <option defaultValue>Selecione um departamento</option>\n                        {this.getDepartaments()}\n                    </select>\n                </div>\n\n                <label className=\"text-danger\">{this.state.warning}</label>\n                <br />\n                <div className=\"container\">\n                    <div className=\"row justify-content-between\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            onClick={() => this.props.onBack()}>\n                            Voltar\n                        </button>\n                        <button\n                            className=\"btn btn-outline-primary\"\n                            onClick={() => { this.sendCredentials() }}>\n                            Cadastrar\n                        </button>\n                    </div>\n                </div>\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};\n","\nimport React, {Component} from \"react\";\nimport { make_request } from \"./request\";\n\nexport class DashboardNavbar extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    logout = () => {\n        make_request(\n            \"/auth\",\n            \"POST\",\n            JSON.stringify({operation: \"logout\"})\n        ).then( res => {\n            this.props.onLogout();\n        })\n        .catch(err=>{\n            console.log(err);\n        });\n    }\n\n    render = () => {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <a\n                    className=\"navbar-brand\"\n                    href=\"#begin\">\n                    Controle de Acesso\n                </a>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#begin\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Meus dados\n                            </a>\n                            <button\n                                className=\"navbar-toggler\"\n                                type=\"button\"\n                                data-toggle=\"collapse\"\n                                data-target=\"#navbarToggleExternalContent\"\n                                aria-controls=\"navbarToggleExternalContent\"\n                                aria-expanded=\"false\"\n                                aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n\n                            <div\n                                className=\"dropdown-menu\"\n                                aria-labelledby=\"navbarDropdown\">\n\n                                <button\n                                    className=\"dropdown-item\"\n                                    onClick={this.logout}>\n                                    Meus dados\n                                </button>\n\n                                <div className=\"dropdown-divider\"></div>\n\n                                <button\n                                    className=\"dropdown-item\"\n                                    onClick={this.logout}>\n                                    Sair\n                                </button>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    };\n\n};","import React, { Component } from \"react\";\n\n\nexport class AgentActions extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render = ()=>{\n        return(\n            <div\n                className=\"btn-group\"\n                role=\"group\"\n                aria-label=\"agent actions\"\n            >\n                <button type=\"button\" onClick={this.props.waiting} className=\"btn btn-primary\">Aguardando</button>\n                <button type=\"button\" onClick={this.props.processed} className=\"btn btn-primary\">Processados</button>\n                <button type=\"button\" onClick={this.props.register} className=\"btn btn-primary\">Cadastrar</button>\n            </div>\n        );\n    }\n};","\nimport React from \"react\";\n\n/**\n * Format the date string to the format that React can read\n * @param {string} date date as string retrived from Knex.js\n */\nconst date_parse = (date) => {\n    const tmp_dt = new Date(date);\n\n    let year = tmp_dt.getFullYear().toString();\n    let month = (tmp_dt.getMonth() + 1).toString();\n    let day = tmp_dt.getUTCDate().toString();\n\n    year = year.padStart(4, \"0\");\n    month = month.padStart(2, \"0\");\n    day = day.padStart(2, \"0\");\n\n    return [ year, month, day].reduce((p, a) => p + \"-\" + a);\n};\n\n/**\n * Format a date in portuguese format (ie, dd/MM/YYYY)\n * @param {string} date The string to be formated\n */\nconst format_date = (date) => {\n    const tmp = new Date(date);\n\n    let year  = tmp.getFullYear().toString();\n    let month = (tmp.getMonth() + 1).toString();\n    let day   = tmp.getUTCDate().toString();\n\n    year  = year.padStart(4, \"0\");\n    month = month.padStart(2, \"0\");\n    day   = day.padStart(2, \"0\");\n\n    return `${day}/${month}/${year}`;\n};\n\n/**\n * Copy an object. After copy:\n *  A === B and change(A) don't affect B\n * @param {object} source The object to be copied\n */\nconst deep_copy = (source) => {\n    if (!source) return null;\n\n    let result = {};\n\n    Object.keys(source).forEach( k => {\n        if (\"object\" === typeof source[k]){\n            const subobject = deep_copy(source[k]);\n            result[k] = subobject;\n        } else {\n            result[k] = source[k];\n        }\n    });\n\n    return result;\n};\n\n/**\n * Compare two objects and return all field that among them\n * @param {object} source The original object\n * @param {object} target The modified object'\n */\nconst check_changed_fields = (source, target) => {\n    let altered_values = {};\n\n    for (let field of Object.keys(source)) {\n        if (source[field] == null)\n            continue;\n\n        for (let subfield of Object.keys(source[field])) {\n            if (target[field][subfield] !== source[field][subfield]) {\n                if (!(field in altered_values)) {\n                    altered_values[field] = {};\n                }\n\n                altered_values[field][subfield] = target[field][subfield];\n            }\n        }\n    }\n\n    return altered_values;\n};\n\nexport { date_parse, check_changed_fields , deep_copy, format_date };","import React, { Component } from \"react\"\n\nimport { date_parse, check_changed_fields, deep_copy } from \"./utility\";\nimport { make_request } from \"./request\";\n\n\nexport class RequestEditAluno extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n\n        this.original_data = null;\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_aluno = this.props.data;\n            this.setState({...visita_aluno});\n            this.original_data = deep_copy(visita_aluno);\n        }\n    }\n\n    make_input = (object, field, type, value) => {\n        return <input\n            type={type}\n            className=\"form-control\"\n            value={value}\n            onChange={e =>{\n                let update_state = {};\n                update_state[object] = this.state[object];\n                update_state[object][field] = e.target.value;\n\n                this.setState(update_state);\n            }}>\n        </input>;\n    }\n\n    send_to_server = () => {\n        let visita_aluno = check_changed_fields(this.original_data, this.state);\n\n        if (\"visita_aluno\" in visita_aluno)\n            visita_aluno[\"visita_aluno\"][\"id_visita_aluno\"] = this.original_data[\"visita_aluno\"][\"id_visita_aluno\"];\n        if (\"aluno\" in visita_aluno)\n            visita_aluno[\"aluno\"][\"id_aluno\"] = this.original_data[\"aluno\"][\"id_aluno\"];\n\n        make_request(\"/visita_aluno\", \"PATCH\", JSON.stringify(visita_aluno))\n        .then(res => {\n            if (res.status === 200){\n                this.setState({message: \"Dados alterados com sucesso!\"});\n            } else {\n                this.setState({message: \"Não foi possível alterar os dados. Verifique se os campos estão preenchidos corretamente.\"});\n            }\n        })\n        .catch(err => {\n            this.setState({message: \"Um erro ocorreu! Tente novamente.\"})\n        });\n    }\n\n    render = ()=>{\n        if (!this.state.visita_aluno) return <div></div>;\n\n        if (\"message\" in this.state) {\n            return (\n                <div className=\"container\">\n                    <h3>{ this.state.message }</h3>\n                    <div className=\"row pt-3\">\n                        <div className=\"col-6\">\n                            <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                        </div>\n                        <div className=\"col-6\">\n                            {/* <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button> */}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"data_inicio\", \"date\", date_parse(this.state.visita_aluno.data_inicio)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Término)</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"data_fim\", \"date\", date_parse(this.state.visita_aluno.data_fim)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"frequencia\", \"text\", this.state.visita_aluno.frequencia) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"horario_inicio\", \"time\", this.state.visita_aluno.horario_inicio) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"horario_fim\", \"time\", this.state.visita_aluno.horario_fim) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{ this.make_input(\"visita_aluno\", \"objetivo\", \"text\", this.state.visita_aluno.objetivo) }</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Aluno</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{ this.make_input(\"aluno\", \"nome\", \"text\", this.state.aluno.nome) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Matrícula</th>\n                            <td>{ this.make_input(\"aluno\", \"matricula\", \"text\", this.state.aluno.matricula) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{ this.make_input(\"aluno\", \"rg\", \"text\", this.state.aluno.rg) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{ this.make_input(\"aluno\", \"cpf\", \"text\", this.state.aluno.cpf) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{ this.make_input(\"aluno\", \"email\", \"email\", this.state.aluno.email) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{ this.make_input(\"aluno\", \"telefone\", \"text\", this.state.aluno.telefone) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{ this.make_input(\"aluno\", \"dt_nasc\", \"date\", date_parse(this.state.aluno.dt_nasc)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{ this.make_input(\"aluno\", \"endereco\", \"text\", this.state.aluno.endereco) }</td>\n                        </tr> */}\n                        <tr>\n                            <th scope=\"row\">Curso</th>\n                            <td>{ this.make_input(\"aluno\", \"curso\", \"text\", this.state.aluno.curso) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Semestre</th>\n                            <td>{ this.make_input(\"aluno\", \"semestre\", \"text\", this.state.aluno.semestre) }</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n                <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                        <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\"\n\nimport { date_parse, check_changed_fields, deep_copy } from \"./utility\";\nimport { make_request } from \"./request\";\n\nexport class RequestEditServidor extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n\n        this.original_data = null;\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_servidor = this.props.data;\n            this.setState({...visita_servidor})\n            this.original_data = deep_copy(visita_servidor);\n            console.log({...visita_servidor});\n        }\n    }\n\n    make_input = (object, field, type, value) => {\n        return <input\n            type={type}\n            className=\"form-control\"\n            value={value}\n            onChange={e =>{\n                let update_state = {};\n                update_state[object] = this.state[object];\n                update_state[object][field] = e.target.value;\n\n                this.setState(update_state);\n            }}>\n        </input>;\n    }\n\n    send_to_server = () => {\n        let visita_servidor = check_changed_fields(this.original_data, this.state);\n\n        // add the id's to update on server\n        if (\"visita_servidor\" in visita_servidor)\n            visita_servidor[\"visita_servidor\"][\"id_visita_servidor\"] = this.original_data[\"visita_servidor\"][\"id_visita_servidor\"];\n        if (\"servidor\" in visita_servidor)\n            visita_servidor[\"servidor\"][\"id_servidor\"] = this.original_data[\"servidor\"][\"id_servidor\"];\n        if (\"veiculo_servidor\" in visita_servidor)\n            visita_servidor[\"veiculo_servidor\"][\"id_veiculo_servidor\"] = this.original_data[\"veiculo_servidor\"][\"id_veiculo_servidor\"];\n\n        make_request(\"/visita_servidor\", \"PATCH\", JSON.stringify(visita_servidor))\n        .then(res => {\n            if (res.status === 200){\n                this.setState({message: \"Dados alterados com sucesso!\"});\n            } else {\n                this.setState({message: \"Não foi possível alterar os dados. Verifique se os campos estão preenchidos corretamente.\"});\n            }\n        })\n        .catch(err => {\n            console.log(\"error: \", err);\n        });\n    }\n\n    render = ()=>{\n        if (!this.state.visita_servidor) return (<div></div>);\n\n        if (\"message\" in this.state) {\n            return (\n                <div className=\"container\">\n                    <h3>{ this.state.message }</h3>\n                    <div className=\"row pt-3\">\n                        <div className=\"col-6\">\n                            <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                        </div>\n                        <div className=\"col-6\">\n                            {/* <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button> */}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"data\", \"date\", date_parse(this.state.visita_servidor.data_inicio)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Término)</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"data\", \"date\", date_parse(this.state.visita_servidor.data_fim)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"frequencia\", \"text\", this.state.visita_servidor.frequencia) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"horario_inicio\", \"time\", this.state.visita_servidor.horario_inicio) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"horario_fim\", \"time\", this.state.visita_servidor.horario_fim) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{ this.make_input(\"visita_servidor\", \"objetivo\", \"text\", this.state.visita_servidor.objetivo) }</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Servidor</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{ this.make_input(\"servidor\", \"nome\", \"text\", this.state.servidor.nome) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">SIAPE</th>\n                            <td>{ this.make_input(\"servidor\", \"siape\", \"text\", this.state.servidor.siape) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{ this.make_input(\"servidor\", \"rg\", \"text\", this.state.servidor.rg) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{ this.make_input(\"servidor\", \"cpf\", \"text\", this.state.servidor.cpf) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{ this.make_input(\"servidor\", \"email\", \"text\", this.state.servidor.email) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{ this.make_input(\"servidor\", \"telefone\", \"text\", this.state.servidor.telefone) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{ this.make_input(\"servidor\", \"dt_nasc\", \"date\", date_parse(this.state.servidor.dt_nasc)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{ this.make_input(\"servidor\", \"endereco\", \"text\", this.state.servidor.endereco) }</td>\n                        </tr> */}\n                    </tbody>\n\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Veículo</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Placa</th>\n                            <td>{ this.state.veiculo_servidor && this.make_input(\"veiculo_servidor\", \"placa\", \"text\", this.state.veiculo_servidor.placa) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Modelo</th>\n                            <td>{ this.state.veiculo_servidor && this.make_input(\"veiculo_servidor\", \"modelo\", \"text\", this.state.veiculo_servidor.modelo) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Cor</th>\n                            <td>{ this.state.veiculo_servidor && this.make_input(\"veiculo_servidor\", \"cor\", \"text\", this.state.veiculo_servidor.cor) }</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n                <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                        <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\n\nimport { date_parse, check_changed_fields, deep_copy } from \"./utility\";\nimport { make_request } from \"./request\";\n\nexport class RequestEditVisitante extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n\n        this.original_data = null;\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_visitante = this.props.data;\n            this.setState({...visita_visitante})\n            this.original_data = deep_copy(visita_visitante);\n        }\n    }\n\n    make_input = (object, field, type, value) => {\n        return <input\n            type={type}\n            className=\"form-control\"\n            value={value}\n            onChange={e =>{\n                let update_state = {};\n                update_state[object] = this.state[object];\n                update_state[object][field] = e.target.value;\n\n                this.setState(update_state);\n            }}>\n        </input>;\n    }\n\n// TODO\n// --edit this request\n// --create a handle on server\n    send_to_server = () => {\n        let visita_visitante = check_changed_fields(this.original_data, this.state);\n\n        if (\"visita_visitante\" in visita_visitante)\n            visita_visitante[\"visita_visitante\"][\"id_visita_visitante\"] =\n                this.original_data[\"visita_visitante\"][\"id_visita_visitante\"];\n\n        if (\"visitante\" in visita_visitante)\n            visita_visitante[\"visitante\"][\"id_visitante\"] =\n                this.original_data[\"visitante\"][\"id_visitante\"];\n\n        if (\"veiculo_visitante\" in visita_visitante)\n            visita_visitante[\"veiculo_visitante\"][\"id_veiculo_visitante\"] =\n                this.original_data[\"veiculo_visitante\"][\"id_veiculo_visitante\"];\n\n        if (\"empresa\" in visita_visitante)\n            visita_visitante[\"empresa\"][\"id_empresa\"] =\n                this.original_data[\"empresa\"][\"id_empresa\"];\n\n        make_request(\"/visita_visitante\", \"PATCH\", JSON.stringify(visita_visitante))\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({message: \"Dados alterados com sucesso!\"});\n            } else {\n                this.setState({message: \"Não foi possível alterar os dados. Verifique se os campos estão preenchidos corretamente.\"});\n            }\n        })\n        .catch(err => {\n            console.log(\"error: \", err);\n        });\n    }\n\n    render = ()=>{\n        if (!this.state.visita_visitante) return (<div></div>);\n\n        if (\"message\" in this.state) {\n            return (\n                <div className=\"container\">\n                    <h3>{ this.state.message }</h3>\n                    <div className=\"row pt-3\">\n                        <div className=\"col-6\">\n                            <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                        </div>\n                        <div className=\"col-6\">\n                            {/* <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button> */}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"data_inicio\", \"date\", date_parse(this.state.visita_visitante.data_inicio)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Término)</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"data_fim\", \"date\", date_parse(this.state.visita_visitante.data_fim)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"frequencia\", \"text\", this.state.visita_visitante.frequencia) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"horario_inicio\", \"time\", this.state.visita_visitante.horario_inicio) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"horario_fim\", \"time\", this.state.visita_visitante.horario_fim) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{ this.make_input(\"visita_visitante\", \"objetivo\", \"text\", this.state.visita_visitante.objetivo) }</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visitante</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{ this.make_input(\"visitante\", \"nome\", \"text\", this.state.visitante.nome) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{ this.make_input(\"visitante\", \"rg\", \"text\", this.state.visitante.rg) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{ this.make_input(\"visitante\", \"cpf\", \"text\", this.state.visitante.cpf) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{ this.make_input(\"visitante\", \"email\", \"text\", this.state.visitante.email) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                        <td>{ this.make_input(\"visitante\", \"telefone\", \"text\", this.state.visitante.telefone) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{ this.make_input(\"visitante\", \"dt_nasc\", \"date\", date_parse(this.state.visitante.dt_nasc)) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{ this.make_input(\"visitante\", \"endereco\", \"text\", this.state.visitante.endereco) }</td>\n                        </tr> */}\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Empresa</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{ this.state.empresa && this.make_input(\"empresa\", \"nome\", \"text\", this.state.empresa.nome) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">CEP</th>\n                            <td>{ this.state.empresa && this.make_input(\"empresa\", \"cep\", \"text\", this.state.empresa.cep) }</td>\n                        </tr> */}\n                        <tr>\n                            <th scope=\"row\">CNPJ</th>\n                            <td>{ this.state.empresa && this.make_input(\"empresa\", \"cnpj\", \"text\", this.state.empresa.cnpj) }</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{ this.state.empresa && this.make_input(\"empresa\", \"telefone\", \"text\", this.state.empresa.telefone) }</td>\n                        </tr> */}\n                    </tbody>\n\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Veículo</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Placa</th>\n                            <td>{ this.state.veiculo_visitante && this.make_input(\"veiculo_visitante\", \"placa\", \"text\", this.state.veiculo_visitante.placa) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Modelo</th>\n                            <td>{ this.state.veiculo_visitante && this.make_input(\"veiculo_visitante\", \"modelo\", \"text\", this.state.veiculo_visitante.modelo) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Cor</th>\n                            <td>{ this.state.veiculo_visitante && this.make_input(\"veiculo_visitante\", \"cor\", \"text\", this.state.veiculo_visitante.cor) }</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-secondary float-left\" onClick={ this.props.onBack }>Voltar</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={ this.send_to_server }>Salvar alterações</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nimport { RequestEditAluno } from \"./request_edit_aluno\";\nimport { RequestEditServidor } from \"./request_edit_servidor\";\nimport { RequestEditVisitante } from \"./request_edit_visitante\";\nimport { make_request } from \"./request\";\n\nexport class RequestEdit extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n\n        this.original_data = null;\n    }\n\n    componentDidMount = ()=>{\n        this.query();\n    }\n\n\n    query = ()=>{\n        const requisicao = this.props.data;\n\n        make_request(\"/visita/query\", \"POST\", JSON.stringify({\n            id_visita:  requisicao.id,\n            tipo_requisicao: requisicao.tipo_requisicao,\n        }))\n        .then(res=>{\n            return res.json()\n        })\n        .then(data=>{\n            this.setState({tipo_requisicao: requisicao.tipo_requisicao, data: data});\n            this.original_data = {};\n        })\n        .catch(err=>{\n            console.log(err);\n        });\n    }\n\n    edit_request = ()=>{\n        if (this.state.tipo_requisicao === \"aluno\")\n            return <RequestEditAluno data={this.state.data} onBack={this.props.backAction}></RequestEditAluno>;\n        else if (this.state.tipo_requisicao === \"servidor\")\n            return <RequestEditServidor data={this.state.data} onBack={this.props.backAction}></RequestEditServidor>;\n        else if (this.state.tipo_requisicao === \"visitante\")\n            return <RequestEditVisitante data={this.state.data} onBack={this.props.backAction}></RequestEditVisitante>;\n    }\n\n    render = ()=>{\n        return (\n            <div className=\"containers\">\n                { this.edit_request() }\n            </div>\n        );\n    };\n};","import React, {Component} from \"react\";\nimport { make_request } from \"./request\";\n\nimport { format_date } from \"./utility\";\n\nexport class RequestRemove extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            message: null,\n        };\n    }\n\n    db_remove = ()=>{\n        const requisicao = this.props.data;\n        make_request(\"/visita/delete\", \"POST\", JSON.stringify({\n            id_visita:  requisicao.id,\n            tipo_requisicao: requisicao.tipo_requisicao,\n        }))\n        .then( res => {\n            if (res.status === 200){\n                this.setState({message: \"Requisição removida!\"})\n            } else {\n                this.setState({message: \"Não foi possível remover está requisição. Tente novamente.\"})\n            }\n        })\n        .catch( err =>{\n\n        });\n    }\n\n    print_data = ()=>{\n        const requisicao = this.props.data;\n\n        return (\n            <div className=\"container\">\n                <div className=\"form-group\">\n                    <label>Solicitação para:</label>\n                    <label className=\"form-control\">{requisicao.tipo_requisicao}</label>\n                </div>\n                <div className=\"form-group\">\n                    <label>Nome:</label>\n                    <label className=\"form-control\">{requisicao.nome}</label>\n                </div>\n                <div className=\"form-group\">\n                    <label>Na data:</label>\n                    <label className=\"form-control\">{format_date(requisicao.data)}</label>\n                </div>\n\n            </div>\n        );\n    }\n\n    print_message = ()=>{\n        return (\n            <h3>{this.state.message}</h3>\n        );\n    }\n\n    print_prompt = ()=>{\n        return (\n            <div className=\"row alert alert-danger\">\n                Tem certeza que deseja excluir esta requisição de acesso?\n                <div className=\"row justify-content-end\">\n                    <div className=\"col-4\">\n                        <button className=\"btn btn-secondary\" onClick={this.props.backAction}>Não</button>\n                    </div>\n                    <div className=\"col-4\">\n                        <button className=\"btn btn-primary\" onClick={this.db_remove}>Sim</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render = ()=>{\n        return (\n            <div>\n                <h1>Cancelando requisição</h1>\n\n                {   this.state.message == null ?\n                    this.print_data()       :\n                    this.print_message()\n                }\n\n                {\n                    this.state.message == null ?\n                    this.print_prompt():\n                    null\n                }\n\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\" onClick={this.props.backAction}>Voltar</button>\n                </div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\"\n\nimport { format_date } from \"./utility\";\n\n\nexport class RequestDetailAluno extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_aluno = this.props.data;\n            this.setState({...visita_aluno})\n        }\n    }\n\n    render = ()=>{\n        if (!this.state.visita_aluno) return (<div></div>);\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{ format_date(this.state.visita_aluno.data_inicio) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Fim)</th>\n                            <td>{ format_date(this.state.visita_aluno.data_fim) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{this.state.visita_aluno.frequencia}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{this.state.visita_aluno.horario_inicio}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{this.state.visita_aluno.horario_fim}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{this.state.visita_aluno.objetivo}</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Aluno\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{this.state.aluno.nome}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Matrícula</th>\n                            <td>{this.state.aluno.matricula}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{this.state.aluno.rg}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{this.state.aluno.cpf}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{this.state.aluno.email}</td>\n                        </tr>\n                       {/*  <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{this.state.aluno.telefone}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{ format_date(this.state.aluno.dt_nasc) }</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{this.state.aluno.endereco}</td>\n                        </tr> */}\n                        <tr>\n                            <th scope=\"row\">Curso</th>\n                            <td>{this.state.aluno.curso}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Semestre</th>\n                            <td>{this.state.aluno.semestre}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\"\n\nimport { format_date } from \"./utility\";\n\nexport class RequestDetailServidor extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_servidor = this.props.data;\n            this.setState({...visita_servidor})\n        }\n    }\n\n    render = ()=>{\n        if (!this.state.visita_servidor) return (<div></div>);\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Visita\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{format_date(this.state.visita_servidor.data_inicio)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Fim)</th>\n                            <td>{format_date(this.state.visita_servidor.data_fim)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{this.state.visita_servidor.frequencia}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{this.state.visita_servidor.horario_inicio}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{this.state.visita_servidor.horario_fim}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{this.state.visita_servidor.objetivo}</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Servidor\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{this.state.servidor.nome}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">SIAPE</th>\n                            <td>{this.state.servidor.siape}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{this.state.servidor.rg}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{this.state.servidor.cpf}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{this.state.servidor.email}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{this.state.servidor.telefone}</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{format_date(this.state.servidor.dt_nasc)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{this.state.servidor.endereco}</td>\n                        </tr> */}\n                    </tbody>\n\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Veículo</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Placa</th>\n                            <td>{this.state.veiculo_servidor && this.state.veiculo_servidor.placa}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Modelo</th>\n                            <td>{this.state.veiculo_servidor && this.state.veiculo_servidor.modelo}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Cor</th>\n                            <td>{this.state.veiculo_servidor && this.state.veiculo_servidor.cor}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\"\n\nimport {format_date} from \"./utility\";\n\nexport class RequestDetailVisitante extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    componentDidMount = ()=> {\n        if (this.props.data != null)  {\n            const visita_visitante = this.props.data;\n            this.setState({...visita_visitante});\n        }\n    }\n\n    render = ()=>{\n        if (!this.state.visita_visitante) return (<div></div>);\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Visita</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Data (Início)</th>\n                            <td>{format_date(this.state.visita_visitante.data_inicio)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data (Término)</th>\n                            <td>{format_date(this.state.visita_visitante.data_fim)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Frequência</th>\n                            <td>{this.state.visita_visitante.frequencia}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Início)</th>\n                            <td>{this.state.visita_visitante.horario_inicio}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Horário (Fim)</th>\n                            <td>{this.state.visita_visitante.horario_fim}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Objetivo</th>\n                            <td>{this.state.visita_visitante.objetivo}</td>\n                        </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Visitante\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{this.state.visitante.nome}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">RG</th>\n                            <td>{this.state.visitante.rg}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">CPF</th>\n                            <td>{this.state.visitante.cpf}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Email</th>\n                            <td>{this.state.visitante.email}</td>\n                        </tr>\n                       {/*  <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{this.state.visitante.telefone}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Data nasc.</th>\n                            <td>{format_date(this.state.visitante.dt_nasc)}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Endereço</th>\n                            <td>{this.state.visitante.endereco}</td>\n                        </tr> */}\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th\n                                className=\"text-center\"\n                                scope=\"col\"\n                                colSpan=\"2\">\n                                Empresa\n                            </th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Nome</th>\n                            <td>{this.state.empresa && this.state.empresa.nome}</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">CEP</th>\n                            <td>{this.state.empresa && this.state.empresa.cep}</td>\n                        </tr> */}\n                        <tr>\n                            <th scope=\"row\">CNPJ</th>\n                            <td>{this.state.empresa && this.state.empresa.cnpj}</td>\n                        </tr>\n                        {/* <tr>\n                            <th scope=\"row\">Telefone</th>\n                            <td>{this.state.empresa && this.state.empresa.telefone}</td>\n                        </tr> */}\n                    </tbody>\n\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th className=\"text-center\" scope=\"col\" colSpan=\"2\">Veículo</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Campo</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Placa</th>\n                            <td>{this.state.veiculo_visitante && this.state.veiculo_visitante.placa}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Modelo</th>\n                            <td>{this.state.veiculo_visitante && this.state.veiculo_visitante.modelo}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Cor</th>\n                            <td>{this.state.veiculo_visitante && this.state.veiculo_visitante.cor}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nimport { RequestDetailAluno } from \"./request_detail_aluno\";\nimport { RequestDetailServidor } from \"./request_detail_servidor\";\nimport { RequestDetailVisitante } from \"./request_detail_visitante\";\nimport { make_request } from \"./request\";\n\n\nexport class RequestDetail extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            data: null,\n            tipo_requisicao: null,\n        };\n    }\n\n    componentDidMount = ()=>{\n        this.query();\n    }\n\n    query = ()=>{\n        const requisicao = this.props.data;\n\n        make_request(\"/visita/query\", \"POST\", JSON.stringify({\n            id_visita:  requisicao.id,\n            tipo_requisicao: requisicao.tipo_requisicao,\n        }))\n        .then(res=>{\n            return res.json()\n        })\n        .then(data=>{\n            this.setState({tipo_requisicao: requisicao.tipo_requisicao, data: data});\n        })\n        .catch(err=>{\n            console.log(err);\n        });\n    }\n\n    show_request = ()=>{\n        if (this.state.tipo_requisicao === \"aluno\")\n            return <RequestDetailAluno data={this.state.data}></RequestDetailAluno>;\n        else if (this.state.tipo_requisicao === \"servidor\")\n            return <RequestDetailServidor data={this.state.data}></RequestDetailServidor>;\n        else if (this.state.tipo_requisicao === \"visitante\")\n            return <RequestDetailVisitante data={this.state.data}></RequestDetailVisitante>;\n    }\n\n    render = ()=>{\n        return (\n            <div>\n                { this.show_request() }\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\" onClick={this.props.backAction}>Voltar</button>\n                </div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\"        ;\n\nimport { RequestEdit }   from \"./request_edit\"  ;\nimport { RequestRemove } from \"./request_remove\";\nimport { RequestDetail } from \"./request_detail\";\n\nimport { make_request }  from \"./request\"       ;\n\nimport { format_date }   from \"./utility\"       ;\n\nexport class AgentWaitingRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_action: \"list\",\n            request_id: null,\n            data: null,\n        };\n    }\n\n    componentDidMount = ()=>{\n        this.search();\n    }\n\n    search = ()=>{\n        this.setState({data: null});\n\n        make_request(\"/visita\", \"POST\", JSON.stringify({\n            what: \"STATUS_AGUARDANDO\",\n        }))\n        .then(res=>res.json())\n        .then(result => {\n            let data = {};\n            result.map( (row, ind) => data[ind] = row);\n\n            this.setState({data: data});\n        })\n        .catch(err => {\n            console.log(\"error\");\n        });\n    }\n\n    __onRemove = (row) => {\n        this.setState({current_action: \"remove\", selected_row: row});\n    }\n\n    __onEdit = (row) => {\n        this.setState({current_action: \"edit\", selected_row: row});\n    }\n\n    __onDetail = (row) => {\n        this.setState({current_action: \"detail\", selected_row: row});\n    }\n\n    format_data = () => {\n        // console.log(\"Here\");\n        if (this.state.data == null)\n            return;\n\n        const table = Object.values(this.state.data).map((row, i) => {\n            return (\n            <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{row.tipo_requisicao}</td>\n                <td>{row.nome}</td>\n                <td>{format_date(row.data)}</td>\n                <td>\n                    <button\n                        className=\"btn btn-warning\"\n                        onClick={()=>{this.__onEdit(row)}}>\n                        Editar\n                    </button>\n                    <span className=\"pr-1\"></span>\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={()=>{this.__onRemove(row)}}>\n                        Remover\n                    </button>\n                    <span className=\"pr-1\"></span>\n                    <button\n                        className=\"btn btn-primary\"\n                        onClick={()=>{this.__onDetail(row)}}>\n                        Detalhes\n                    </button>\n                </td>\n            </tr>\n        )});\n\n        return table;\n    }\n\n    list = () => {\n        return (\n            <div className=\"row justify-content-center\">\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Tipo de Requisição</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Data</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.format_data()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    action_handler = () => {\n        const backAction = ()=> {\n            this.setState({current_action: \"list\"}); this.search()\n        };\n\n        switch (this.state.current_action){\n            case \"list\":\n                return this.list();\n            case \"edit\":\n                return  <RequestEdit\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestEdit>;\n            case \"remove\":\n                return  <RequestRemove\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestRemove>;\n            case \"detail\":\n                return  <RequestDetail\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestDetail>;\n            default:\n                return <div>Error</div>\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"pb-5\"></div>\n                { this.action_handler() }\n                <div className=\"footer\"></div>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nimport { RequestDetail } from \"./request_detail\";\n\nimport { format_date } from \"./utility\";\n\n// TODO\n//      Criar as páginas de edição\n//                          remoção\n//                          detalhes\n// OBS\n//      Os dados devem ser retornados do DB com o id do evento\n\nexport class AgentProcessedRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_action: \"list\",\n            request_id: null,\n            data: null,\n        };\n    }\n\n    search = ()=>{\n        make_request(\"/visita\", \"POST\", JSON.stringify({\n            what: \"STATUS_PROCESSADO\",\n        }))\n        .then(res=>res.json())\n        .then(result => {\n            let data = {};\n            result.map( (row, ind) => data[ind] = row);\n\n            this.setState({data: data});\n        })\n        .catch(err => {\n            console.log(\"error\");\n        });\n    }\n\n    componentDidMount = ()=>{\n        this.search();\n    }\n\n\n    __onDetail = (row) => {\n        this.setState({current_action: \"detail\", selected_row: row})\n    }\n\n    format_data = () => {\n        if (this.state.data == null)\n            return;\n\n        const table = Object.values(this.state.data).map((row, i) => {\n            return (\n                <tr key={i} className={row.status_de_aprovacao === 1 ? \"bg-light-green\" : \"bg-light-red\"}>\n                    <td>{i + 1}</td>\n                    <td>{row.tipo_requisicao}</td>\n                    <td>{row.nome}</td>\n                    <td>{format_date(row.data)}</td>\n                    <td>{row.status_de_aprovacao === 1 ? \"Aprovado\" : \"Não aprovado\"}</td>\n                    <td>\n                        <button className=\"btn btn-primary\" onClick={() => { this.__onDetail(row) }}>Detalhes</button>\n                    </td>\n                </tr>\n            )\n        });\n\n        return table;\n    }\n\n    list = () => {\n        return (\n            <div className=\"row justify-content-center\">\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Tipo de Requisição</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Data</th>\n                            <th scope=\"col\">Status de Aprovação</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.format_data()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    action_handler = () => {\n        const backAction = () => this.setState({current_action: \"list\"});\n\n        switch (this.state.current_action){\n            case \"list\":\n                return this.list();\n            case \"detail\":\n                return <RequestDetail\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestDetail>;\n            default:\n                return <div>Error</div>\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n            <div className=\"pb-5\"></div>\n                { this.action_handler() }\n                <div className=\"footer\"></div>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\n\nexport class AgentRegisterActions extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render = ()=>{\n        return(\n            <div\n                className=\"btn-group btn-group-sm\"\n                role=\"group\"\n                aria-label=\"agent actions\"\n            >\n                <button type=\"button\" onClick={this.props.student} className=\"btn btn-primary\">Aluno</button>\n                <button type=\"button\" onClick={this.props.employee} className=\"btn btn-primary\">Servidor</button>\n                <button type=\"button\" onClick={this.props.visitor} className=\"btn btn-primary\">Visitante</button>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\nimport { date_parse } from \"./utility\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterEmployeeServidor extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            siape: \"\",\n            nome: \"\",\n            // telefone: \"\",\n            email: \"\",\n            // dt_nasc: \"\",\n            rg: \"\",\n            cpf: \"\",\n            // endereco: \"\",\n\n            readonly: true,\n        };\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n    }\n\n    save_data = () => {\n        const servidor = {\n            siape: this.state.siape,\n            nome: this.state.nome,\n            // telefone: this.state.telefone,\n            email: this.state.email,\n            // dt_nasc: this.state.dt_nasc,\n            rg: this.state.rg,\n            cpf: this.state.cpf,\n            // endereco: this.state.endereco,\n        }\n        // this.setState({...veiculo_visitante});\n\n        this.props.onSave(servidor);\n    };\n\n    search = ()=>{\n        let siape = this.state.siape.replace(/(\\.|-)/g, \"\");\n\n        if (siape.length > 6){\n            const header = new Headers();\n            header.set(\"content-type\", \"application/json\");\n\n            make_request(\n                \"/visita_servidor/search\",\n                \"POST\",\n                JSON.stringify({siape: siape, what: \"SIAPE\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    if (\"dt_nasc\" in data)\n                        data.dt_nasc = date_parse(data.dt_nasc)\n\n                    this.setState({...data, readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({readonly: false});\n            });\n\n        } else {\n            this.setState({readonly: false});\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados do servidor...</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_siape\">SIAPE</label>\n                        <input type=\"text\" id=\"servidor_siape\" ref={ this.servidor_siape } className=\"form-control\" placeholder=\"Digite o código SIAPE do servidor\"\n                            value={this.state.siape} onBlur={this.search} onChange={e=>this.setState({siape: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 2000000</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_rg\">RG</label>\n                        <input type=\"text\" id=\"servidor_rg\" ref={this.servidor_rg} className=\"form-control\" placeholder=\"Digite o RG do servidor...\"\n                            value={this.state.rg} readOnly={this.state.readonly} onChange={e=>this.setState({rg: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 0000000-0</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"cpf\">CPF</label>\n                        <input type=\"text\" id=\"cpf\" ref={this.servidor_cpf} className=\"form-control\" placeholder=\"Digite o CPF do servidor...\"\n                            value={this.state.cpf} readOnly={this.state.readonly} onChange={e=>this.setState({cpf: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 000.000.000-00, 000000000-00</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_nome\">Nome</label>\n                        <input type=\"text\" id=\"servidor_nome\" ref={this.servidor_nome} className=\"form-control\" placeholder=\"Digite o nome do servidor...\"\n                            value={this.state.nome} readOnly={this.state.readonly} onChange={e=>this.setState({nome: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Foo Bar Baz</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"cpf\">Email</label>\n                        <input type=\"text\" id=\"servidor_email\" ref={this.servidor_email} className=\"form-control\" placeholder=\"Digite o email do servidor...\"\n                            value={this.state.email} readOnly={this.state.readonly} onChange={e=>this.setState({email: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: foo@bar.baz</small>\n                    </div>\n                </div>\n\n                {/* <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_telefone\">Telefone</label>\n                        <input type=\"text\" id=\"servidor_telefone\" ref={this.servidor_telefone} className=\"form-control\" placeholder=\"Digite o número de telefone do servidor...\"\n                            value={this.state.telefone} readOnly={this.state.readonly} onChange={e=>this.setState({telefone: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 0000-0000, (00) 0000-0000</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"servidor_dt_nasc\">Data de nascimento</label>\n                        <input type=\"date\" id=\"servidor_dt_nasc\" ref={this.servidor_dt_nasc} className=\"form-control\" placeholder=\"Digite a data de nascimento do servidor...\"\n                            value={this.state.dt_nasc} readOnly={this.state.readonly} onChange={e=>this.setState({dt_nasc: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 01/01/2001</small>\n                    </div>\n                </div> */}\n\n                {/* <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"endereco\">Endereço</label>\n                        <input type=\"text\" id=\"endereco\" ref={this.servidor_endereco} className=\"form-control\" placeholder=\"Digite o endereço do servidor...\"\n                            value={this.state.endereco} readOnly={this.state.readonly} onChange={e=>this.setState({endereco: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Rua Foo, Número 01</small>\n                    </div>\n                </div> */}\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        {/* <button className=\"btn btn-secondary float-left\" onClick={()=>{ this.save_data(); this.props.onBack(); }}>Voltar</button> */}\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={()=>{ this.save_data(); this.props.onNext(); }}>Avançar</button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\n\nexport class AgentRegisterEmployeeServidorVisita extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            objetivo: \"\",\n            data_inicio: \"\",\n            data_fim: \"\",\n            frequencia: \"Diário\",\n            pernoite: false,\n            horario_inicio: \"\",\n            horario_fim: \"\",\n        };\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n\n    }\n\n    save_data = () => {\n        const visita_servidor = {\n            objetivo: this.state.objetivo,\n            data_inicio: this.state.data_inicio,\n            data_fim: this.state.data_fim,\n            frequencia: this.state.frequencia,\n            pernoite: this.state.pernoite,\n            horario_inicio: this.state.horario_inicio,\n            horario_fim: this.state.horario_fim,\n        }\n\n        this.props.onSave(visita_servidor);\n    };\n\n    render = () => {\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <h1>Dados do visita...</h1>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_data_inicio\">Data (Início)</label>\n                    <input\n                        type=\"date\"\n                        id=\"visita_data_inicio\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a data de início do evento...\"\n                        value={this.state.data_inicio}\n                        onChange={e=>this.setState({data_inicio: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 01/01/2011\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_data_fim\">Data (Término)</label>\n                    <input\n                        type=\"date\"\n                        id=\"visita_data_fim\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a data de término do evento...\"\n                        value={this.state.data_fim}\n                        onChange={e=>this.setState({data_fim: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 06/01/2011\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_horario_inicio\">Horário de Inicio</label>\n                    <input\n                        type=\"time\"\n                        id=\"visita_horario_inicio\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o horário de início da visita...\"\n                        value={this.state.horario_inicio}\n                        onChange={e=>this.setState({horario_inicio: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 13:30, 1:30 PM\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_horario_fim\">Horário de Término</label>\n                    <input\n                        type=\"time\"\n                        id=\"visita_horario_fim\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o horário de termino da visita...\"\n                        value={this.state.horario_fim}\n                        onChange={e=>this.setState({horario_fim: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">Ex: 18:30, 6:30 PM\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                        <label htmlFor=\"frequencia\">Frequência das visitas</label>\n                        <select\n                            id=\"frequencia\" className=\"form-control\"\n                            value={this.state.frequencia}\n                            onChange={e=>this.setState({frequencia: e.target.value})}>\n                            <option value={\"Diário\"}  key=\"1\">Diário</option>\n                            <option value={\"Semanal\"} key=\"2\">Semanal</option>\n                            <option value={\"Mensal\"}  key=\"3\">Mensal</option>\n                        </select>\n                        <small className=\"form-text text-muted\">Ex: Diário, Semanal</small>\n                    </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"visita_pernoite\">Pernoite</label>\n                    <select\n                        id=\"visita_pernoite\"\n                        className=\"form-control\"\n                        value={this.state.pernoite}\n                        onChange={e=>this.setState({pernoite: e.target.value})}>\n\n                        <option value={false} key=\"1\">Não</option>\n                        <option value={true}  key=\"2\">Sim</option>\n                    </select>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Sim, Não\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col\">\n                    <label htmlFor=\"visita_objetivo\">Objetivo</label>\n                    <input\n                        type=\"textarea\"\n                        id=\"visita_objetivo\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o objetivo da visita...\"\n                        value={this.state.objetivo}\n                        onChange={e=>this.setState({objetivo: e.target.value})}>\n                        </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Rua Foo Bar, Número 00\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-secondary float-left\"\n                        onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                        Voltar\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-success float-right\"\n                        onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                        Finalizar\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"footer\"></div>\n        </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { throws } from \"assert\";\nimport { IncomingMessage } from \"http\";\n\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterEmployeeServidorVeiculo extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            modelo: \"\",\n            cor: \"\",\n            placa: \"\",\n\n            visita_com_veiculo: false,\n            readonly: true,\n        };\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n\n        if (initial_data) {\n            const with_vehicle = initial_data.placa != null &&\n                initial_data.placa.length > 0;\n\n            this.setState({\n                ...initial_data,\n                visita_com_veiculo: with_vehicle,\n            });\n        }\n\n    }\n\n    save_data = () => {\n        const veiculo_servidor = this.state.visita_com_veiculo === true ? ({\n            modelo: this.state.modelo,\n            cor: this.state.cor,\n            placa: this.state.placa,\n        }) : null;\n\n        this.props.onSave(veiculo_servidor);\n\n    };\n\n    search = ()=>{\n\n        let placa = this.state.placa;\n        if (placa)\n            placa = placa.replace(/(\\.|-)/g, \"\");\n\n        if (placa.length === 7){\n            const header = new Headers();\n            header.set(\"content-type\", \"application/json\");\n\n           /*  fetch(this.props.backendAddr + \"/visita_servidor/search\", {\n                headers: header,\n                credentials: \"include\",\n                method: \"POST\",\n                mode: \"cors\",\n                body: JSON.stringify({placa: placa, what: \"PLACA\"}),\n            }); */\n\n            make_request(\n                \"/visita_servidor/search\",\n                \"POST\",\n                JSON.stringify({placa: placa, what: \"PLACA\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    this.setState({...data, readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({readonly: false});\n            });\n\n        } else {\n            this.setState({readonly: false});\n        }\n    }\n\n    change_state_vehicle_state = (value) => {\n        const ro = !value ? true: this.state.readonly;\n        this.setState({ visita_com_veiculo: value, readonly: ro });\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <h1>Dados do veículo...</h1>\n            </div>\n\n            <div className=\"row justify-content-center\">\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        type=\"radio\"\n                        className=\"form-check-input\"\n                        name=\"visita-veiculo\"\n                        checked={!this.state.visita_com_veiculo}\n                        onChange={()=>this.change_state_vehicle_state(false)}>\n                    </input>\n                    <label\n                        className=\"form-check-label\">\n                        Sem veículo\n                    </label>\n                </div>\n\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        type=\"radio\"\n                        className=\"form-check-input\"\n                        name=\"visita-veiculo\"\n                        checked={this.state.visita_com_veiculo}\n                        onChange={()=>this.change_state_vehicle_state(true)}>\n                    </input>\n                    <label\n                        className=\"form-check-label\">\n                        Com veículo\n                    </label>\n                </div>\n            </div>\n\n            <div className=\"row justify-content-center\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"veiculo_placa\">Placa</label>\n                    <input\n                        type=\"text\"\n                        id=\"veiculo_placa\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a placa do veículo...\"\n                        value={this.state.placa}\n                        readOnly={!this.state.visita_com_veiculo}\n                        onBlur={this.search}\n                        onChange={e=>this.setState({placa: e.target.value})}>\n                    </input>\n                    <small className=\"form-text text-muted\">Ex: AAA0000, AAA-0000</small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"veiculo_cor\">Cor</label>\n                    <input\n                        type=\"text\"\n                        id=\"veiculo_cor\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a cor do veículo...\"\n                        value={this.state.cor}\n                        readOnly={this.state.readonly}\n                        onChange={e=>this.setState({cor: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Branco, Preto\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"veiculo_modelo\">Modelo</label>\n                    <input\n                        type=\"text\"\n                        id=\"veiculo_modelo\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o modelo do veículo...\"\n                        value={this.state.modelo}\n                        readOnly={this.state.readonly}\n                        onChange={e=>this.setState({modelo: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Sedan, Hatch\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-secondary float-left\"\n                        onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                        Voltar\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-success float-right\"\n                        onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                        Avançar\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"footer\"></div>\n        </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { AgentRegisterEmployeeServidor } from \"./agent_register_employee_servidor\";\nimport { AgentRegisterEmployeeServidorVisita } from \"./agent_register_employee_servidor_visita\";\nimport { AgentRegisterEmployeeServidorVeiculo } from \"./agent_register_employee_servidor_veiculo\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterEmployee extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            servidor: null,\n            veiculo_servidor: null,\n            visita_servidor: null,\n\n            menu_progress: 1,\n\n            communication_status: \"\",\n        };\n\n        this.reset_state = {\n            servidor: null,\n            veiculo_servidor: null,\n            visita_servidor: null,\n        };\n\n    }\n\n    send_to_server = () => {\n        const {menu_progress, communication_status, ...data} = this.state;\n\n        const header = new Headers();\n        header.set(\"content-type\", \"application/json\");\n\n        make_request(\n            \"/visita_servidor\",\n            \"POST\",\n            JSON.stringify(data)\n        ).then( res =>{\n            if (res.status === 200){\n                this.setState({ ...this.reset_state, communication_status: \"Dados enviados com sucesso!\"} );\n            } else {\n                this.setState({\n                    communication_status: \"Não foi possível cadastrar esses dados. Verifica que se todos os campos estão preenchidos corretamente.\"\n                });\n            }\n        }).catch( err => {\n            this.setState({\n                communication_status: \"Erro ao comunicar com o servidor. Verifique sua conexão com a rede.\"\n            });\n        });\n    };\n\n    delta_progress = (val) => this.setState((state, props) => {\n        return {menu_progress: state.menu_progress + val};\n    });\n\n\n    inc_progress = () => this.setState((state, props) => {\n        return this.delta_progress(+1);\n    });\n\n    dec_progress = () => this.setState((state, props) => {\n        return this.delta_progress(-1);\n    });\n\n    restart_menu = () => {\n        this.setState({menu_progress: 1});\n    }\n\n    render = () => {\n        switch(this.state.menu_progress){\n        case 1:\n            return (\n                <AgentRegisterEmployeeServidor\n                    onSave={ data => this.setState({servidor: data}) }\n                    onInitialValues={ () => this.state.servidor }\n                    backendAddr={this.props.backendAddr}\n                    onNext={ this.inc_progress }>\n                </AgentRegisterEmployeeServidor>);\n        case 2:\n            return (\n                <AgentRegisterEmployeeServidorVeiculo\n                    onSave={ data => this.setState({veiculo_servidor: data}) }\n                    onInitialValues={ () => this.state.veiculo_servidor }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterEmployeeServidorVeiculo>\n            );\n        case 3:\n            return (\n                <AgentRegisterEmployeeServidorVisita\n                    onSave={ data => this.setState({visita_servidor: data}) }\n                    onInitialValues={ () => this.state.visita_servidor }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterEmployeeServidorVisita>);\n        case 4:\n            {this.send_to_server()}\n            {this.inc_progress()}\n\n        case 5:\n            return(\n                <div className=\"container\">\n                    <h2>{this.state.communication_status}</h2>\n                    <button className=\"btn btn-primary\" onClick={this.restart_menu}>Continuar</button>\n                </div>\n            );\n        default:\n            { this.restart_menu() };\n        }\n    };\n};","import React, { Component } from \"react\";\n\nimport {date_parse} from \"./utility\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterStudentAluno extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            nome: \"\",\n            // telefone: \"\",\n            email: \"\",\n            // dt_nasc: \"\",\n            rg: \"\",\n            cpf: \"\",\n            // endereco: \"\",\n            matricula: \"\",\n            curso: \"\",\n            semestre: \"\",\n\n            readonly: true,\n        };\n\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const student_aluno = {\n            nome: this.state.nome,\n            // telefone: this.state.telefone,\n            email: this.state.email,\n            // dt_nasc: this.state.dt_nasc,\n            rg: this.state.rg,\n            cpf: this.state.cpf,\n            // endereco: this.state.endereco,\n            matricula: this.state.matricula,\n            curso: this.state.curso,\n            semestre: this.state.semestre,\n        }\n\n        this.props.onSave(student_aluno);\n    };\n\n    search = ()=>{\n        let matricula = this.state.matricula.replace(/(\\.|-)/g, \"\");\n\n        if (matricula.length === 13){\n\n            make_request(\n                \"/visita_aluno/search\",\n                \"POST\",\n                JSON.stringify({matricula: matricula, what: \"MATRICULA\"}),\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0){\n                    const nw_data = {...data, dt_nasc: date_parse(data[\"dt_nasc\"])};\n                    this.setState({...nw_data, readonly: true});\n                } else {\n                    this.setState({readonly: false});\n                }\n            })\n            .catch( err => {\n                this.setState({readonly: false});\n            });\n\n        } else {\n            this.setState({readonly: false});\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados do aluno...</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_matricula\">Número de matrícula</label>\n                        <input type=\"text\" id=\"estudante_matricula\" ref={ this.estudante_matricula } className=\"form-control\" placeholder=\"Digite o número de matrícula do aluno...\"\n                            value={this.state.matricula} onBlur={this.search} onChange={e=>this.setState({matricula: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 2014000000000</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_rg\">RG</label>\n                        <input type=\"text\" id=\"estudante_rg\" ref={this.estudante_rg} className=\"form-control\" placeholder=\"Digite o RG do estudante...\"\n                            value={this.state.rg} readOnly={this.state.readonly} onChange={e=>this.setState({rg: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 0000000-0</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_cpf\">CPF</label>\n                        <input type=\"text\" id=\"estudante_cpf\" ref={this.estudante_cpf} className=\"form-control\" placeholder=\"Digite o CPF do estudante...\"\n                            value={this.state.cpf} readOnly={this.state.readonly} onChange={e=>this.setState({cpf: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 000.000.000-00, 000000000-00</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_nome\">Nome</label>\n                        <input type=\"text\" id=\"estudante_nome\" ref={this.estudante_nome} className=\"form-control\" placeholder=\"Digite o nome do estudante...\"\n                            value={this.state.nome} readOnly={this.state.readonly} onChange={e=>this.setState({nome: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Foo Bar Baz</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_email\">Email</label>\n                        <input type=\"text\" id=\"estudante_email\" ref={this.estudante_email} className=\"form-control\" placeholder=\"Digite o email do estudante...\"\n                            value={this.state.email} readOnly={this.state.readonly} onChange={e=>this.setState({email: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: foo@bar.baz</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_curso\">Curso</label>\n                        <input\n                            type=\"text\"\n                            id=\"estudante_curso\"\n                            ref={this.estudante_curso}\n                            className=\"form-control\"\n                            placeholder=\"Digite o curso do estudante...\"\n                            value={this.state.curso}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({curso: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Engenharia da Computação</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_semestre\">Semestre</label>\n                        <input\n                            type=\"text\"\n                            id=\"estudante_semestre\"\n                            ref={this.estudante_semestre}\n                            className=\"form-control\"\n                            placeholder=\"Digite o semestre do estudante...\"\n                            value={this.state.semestre}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({semestre: e.target.value})}>\n                        </input>\n                            <small className=\"form-text text-muted\">Ex: 1, 2, 10</small>\n                    </div>\n                </div>\n\n               {/*  <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_telefone\">Telefone</label>\n                        <input\n                            type=\"text\"\n                            id=\"estudante_telefone\"\n                            ref={this.estudante_telefone}\n                            className=\"form-control\"\n                            placeholder=\"Digite o número de telefone do estudante...\"\n                            value={this.state.telefone}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({telefone: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 0000-0000, (00) 0000-0000</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"estudante_dt_nasc\">Data de nascimento</label>\n                        <input\n                            type=\"date\"\n                            id=\"estudante_dt_nasc\"\n                            ref={this.estudante_dt_nasc}\n                            className=\"form-control\"\n                            placeholder=\"Digite a data de nascimento do estudante...\"\n                            value={this.state.dt_nasc}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({dt_nasc: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 01/01/2001</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"estudante_endereco\">Endereço</label>\n                        <input\n                            type=\"text\"\n                            id=\"estudante_endereco\"\n                            ref={this.estudante_endereco}\n                            className=\"form-control\"\n                            placeholder=\"Digite o endereço do estudante...\"\n                            value={this.state.endereco}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({endereco: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: Rua Foo, Número 01</small>\n                    </div>\n                </div>\n */}\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        {/* <button className=\"btn btn-secondary float-left\" onClick={()=>{ this.save_data(); this.props.onBack(); }}>Voltar</button> */}\n                    </div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-success float-right\"\n                            onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                            Avançar\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\n\nexport class AgentRegisterStudentAlunoVisita extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            objetivo: \"\",\n            data_inicio: \"\",\n            data_fim: \"\",\n            frequencia: \"Diário\",\n            horario_inicio: \"\",\n            horario_fim: \"\",\n        };\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n    }\n\n    save_data = () => {\n        const student_visit = {\n            objetivo: this.state.objetivo,\n            data_inicio: this.state.data_inicio,\n            data_fim: this.state.data_fim,\n            frequencia: this.state.frequencia,\n            horario_inicio: this.state.horario_inicio,\n            horario_fim: this.state.horario_fim,\n        }\n\n        this.props.onSave(student_visit);\n    };\n\n    render = () => {\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <h1>Dados do visita...</h1>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"estudante_data_inicio\">Data (Início)</label>\n                    <input\n                        type=\"date\"\n                        id=\"estudante_data_inicio\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a data de início do evento...\"\n                        value={this.state.data_inicio}\n                        onChange={e=>this.setState({data_inicio: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 01/01/2011\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"estudante_data_fim\">Data (Término)</label>\n                    <input\n                        type=\"date\"\n                        id=\"estudante_data_fim\"\n                        className=\"form-control\"\n                        placeholder=\"Digite a data de finalização do evento....\"\n                        value={this.state.data_fim}\n                        onChange={e=>this.setState({data_fim: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 06/01/2011\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"estudante_horario_inicio\">Horário (Inicio)</label>\n                    <input\n                        type=\"time\"\n                        id=\"estudante_horario_inicio\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o horário de início da visita...\"\n                        value={this.state.horario_inicio}\n                        onChange={e=>this.setState({horario_inicio: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 13:30, 1:30 PM\n                    </small>\n                </div>\n\n                <div className=\"form-group col-6\">\n                    <label htmlFor=\"estudante_horario_fim\">Horário (Término)</label>\n                    <input\n                        type=\"time\"\n                        id=\"estudante_horario_fim\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o horário de termino da visita...\"\n                        value={this.state.horario_fim}\n                        onChange={e=>this.setState({horario_fim: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: 18:30, 6:30 PM\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col\">\n                    <label htmlFor=\"frequencia\">Frequência das visitas</label>\n                    <select\n                        id=\"frequencia\" className=\"form-control\"\n                        value={this.state.frequencia}\n                        onChange={e=>this.setState({frequencia: e.target.value})}>\n                        <option value={\"Diário\"}  key=\"1\">Diário</option>\n                        <option value={\"Semanal\"} key=\"2\">Semanal</option>\n                        <option value={\"Mensal\"}  key=\"3\">Mensal</option>\n                    </select>\n                    <small className=\"form-text text-muted\">Ex: Diário, Semanal</small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col\">\n                    <label htmlFor=\"estudante_objetivo\">Objetivo</label>\n                    <input\n                        type=\"textarea\"\n                        id=\"estudante_objetivo\"\n                        className=\"form-control\"\n                        placeholder=\"Digite o objetivo da visita...\"\n                        value={this.state.objetivo}\n                        onChange={e=>this.setState({objetivo: e.target.value})}>\n                    </input>\n                    <small\n                        className=\"form-text text-muted\">\n                        Ex: Rua Foo Bar, Número 00\n                    </small>\n                </div>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-secondary float-left\"\n                        onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                        Voltar\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-success float-right\"\n                        onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                        Finalizar\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"footer\"></div>\n        </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { AgentRegisterStudentAluno } from \"./agent_register_student_aluno\";\nimport { AgentRegisterStudentAlunoVisita } from \"./agent_register_student_aluno_visita\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterStudent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            aluno: null,\n\n            visita_aluno: null,\n\n            menu_progress: 1,\n\n            communication_status: \"\"\n        };\n\n        this.reset_state = {\n            aluno: null,\n\n            visita_aluno: null,\n        };\n    }\n\n    send_to_server = () => {\n        const {menu_progress, communication_status, ...data} = this.state;\n\n        make_request(\n            \"/visita_aluno\",\n            \"POST\",\n            JSON.stringify(data)\n        ).then( res =>{\n            if (res.status === 200){\n                this.setState({ ...this.reset_state, communication_status: \"Dados enviados com sucesso!\"} );\n            } else {\n                this.setState({\n                    communication_status: \"Não foi possível cadastrar esses dados. Verifica que se todos os campos estão preenchidos corretamente.\"\n                });\n            }\n        }).catch( err => {\n            this.setState({\n                communication_status: \"Erro ao comunicar com o servidor. Verifique sua conexão com a rede.\"\n            });\n        });\n    };\n\n    delta_progress = (val) => this.setState((state, props) => {\n        return {menu_progress: state.menu_progress + val};\n    });\n\n\n    inc_progress = () => this.setState((state, props) => {\n        return this.delta_progress(+1);\n    });\n\n    dec_progress = () => this.setState((state, props) => {\n        return this.delta_progress(-1);\n    });\n\n    restart_menu = () => {\n        this.setState({menu_progress: 1});\n    }\n\n    render = () => {\n        switch(this.state.menu_progress){\n        case 1:\n            return (\n                <AgentRegisterStudentAluno\n                    onSave={ data => this.setState({aluno: data}) }\n                    onInitialValues={ () => this.state.aluno }\n                    backendAddr={this.props.backendAddr}\n                    onNext={ this.inc_progress }>\n                </AgentRegisterStudentAluno>);\n        case 2:\n            return (\n                <AgentRegisterStudentAlunoVisita\n                    onSave={ data => this.setState({visita_aluno: data}) }\n                    onInitialValues={ () => this.state.visita_aluno }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterStudentAlunoVisita>);\n\n        case 3:\n            {this.send_to_server()}\n            {this.inc_progress()}\n\n        case 4:\n            return(\n                <div className=\"container\">\n                    <h2>{this.state.communication_status}</h2>\n                    <button className=\"btn btn-primary\" onClick={this.restart_menu}>Continuar</button>\n                </div>\n            );\n        default:\n            { this.restart_menu() };\n        }\n\n    };\n};","import React, { Component } from \"react\";\nimport { isNumber } from \"util\";\n\nimport {date_parse} from \"./utility\";\nimport { make_request } from \"./request\";\n\n\nexport class AgentRegisterVisitorVisitante extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            nome: \"\",\n            // telefone: \"\",\n            email: \"\",\n            // dt_nasc: \"\",\n            rg: \"\",\n            cpf: \"\",\n            // endereco: \"\",\n\n            readonly: true,\n        };\n\n        this.initial_data = {};\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null)\n            this.setState({...initial_data});\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const visitante = {\n            nome: this.state.nome,\n            // telefone: this.state.telefone,\n            email: this.state.email,\n            // dt_nasc: this.state.dt_nasc,\n            rg: this.state.rg,\n            cpf: this.state.cpf,\n            // endereco: this.state.endereco,\n        }\n\n        this.props.onSave(visitante);\n    };\n\n    search = ()=>{\n        let rg = this.state.rg.replace(/(\\.|-)/g, \"\");\n        let cpf = this.state.cpf.replace(/(\\.|-)/g, \"\");\n\n        if ((cpf.length === 11 && isNumber(+cpf)) || (rg.length === 8 && isNumber(+rg))){\n            cpf = cpf.length === 11 ? cpf : null;\n            rg = rg.length === 8 ? rg : null;\n\n            make_request(\n                \"/visita_visitante/search\",\n                \"POST\",\n                JSON.stringify({cpf: cpf, rg: rg, what: \"RG_CPF\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    this.setState({...data, dt_nasc: date_parse(data.dt_nasc), readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({readonly: false});\n            });\n\n        } else {\n            this.setState({readonly: false});\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados do visitante...</h1>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_rg\">RG</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_rg\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o RG do visitante...\"\n                            value={this.state.rg}\n                            onBlur={this.search}\n                            onChange={(e)=>this.setState({rg: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 0000000-00, 000000000\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_cpf\">CPF</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_cpf\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o CPF do visitante...\"\n                            value={this.state.cpf}\n                            onBlur={this.search}\n                            onChange={(e)=>this.setState({cpf: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 000.000.000-00, 00000000000\n                        </small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_nome\">Nome</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_nome\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o nome do visitante...\"\n                            value={this.state.nome}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({nome: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Foo Bar Baz\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_email\">Email</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_email\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o email do visitante...\"\n                            value={this.state.email}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({email: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: foo@bar.baz\n                        </small>\n                    </div>\n                </div>\n\n               {/*  <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_dt_nasc\">Data de Nascimento</label>\n                        <input\n                            type=\"date\"\n                            id=\"visitante_dt_nasc\"\n                            className=\"form-control\"\n                            placeholder=\"Digite a data de nascimento do visitante...\"\n                            value={this.state.dt_nasc}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({dt_nasc: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 01/01/2001\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"visitante_telefone\">Telefone</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_telefone\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o telefone do visitante...\"\n                            value={this.state.telefone}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({telefone: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">\n                            Ex: (65) 99999-9999, 99999-9999, 3000-0000\n                        </small>\n                    </div>\n                </div> */}\n\n                {/* <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"visitante_endereco\">Endereço</label>\n                        <input\n                            type=\"text\"\n                            id=\"visitante_endereco\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o endereço do visitante...\"\n                            value={this.state.endereco}\n                            readOnly={this.state.readonly}\n                            onChange={(e)=>this.setState({endereco: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Rua Foo Bar, Número 00\n                        </small>\n                    </div>\n                </div> */}\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\"></div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-success float-right\"\n                            onClick={() =>{this.save_data(); this.props.onNext();}}>\n                            Avançar\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterVisitorVisitanteVeiculo extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            modelo: \"\",\n            cor: \"\",\n            placa: \"\",\n\n            visita_com_veiculo: false,\n            readonly: true,\n        };\n    }\n\n    search = ()=>{\n        let placa = this.state.placa.replace(/(\\.|-)/g, \"\");\n\n        if (placa.length === 7){\n            make_request(\n                \"/visita_visitante/search\",\n                \"POST\",\n                JSON.stringify({placa: placa, what: \"PLACA\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    this.setState({...data, readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({ readonly: false});\n            });\n\n        } else {\n            this.setState({ readonly: false});\n        }\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n\n        if (initial_data != null) {\n            const with_vehicle = initial_data.placa != null &&\n                initial_data.placa.length > 0;\n\n            this.setState({\n                ...initial_data,\n                visita_com_veiculo: with_vehicle,\n            });\n        }\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const veiculo_visitante = this.state.visita_com_veiculo ? {\n            modelo: this.state.modelo,\n            cor: this.state.cor,\n            placa: this.state.placa,\n        } : null;\n\n        this.props.onSave(veiculo_visitante);\n    };\n\n    change_state_vehicle_state = (value) => {\n        const ro = !value ? true: this.state.readonly;\n        this.setState({ visita_com_veiculo: value, readonly: ro });\n    }\n\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados do veículo...</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            name=\"visita-veiculo\"\n                            checked={!this.state.visita_com_veiculo}\n                            onChange={ ()=>this.change_state_vehicle_state(false)}/>\n                        <label\n                            className=\"form-check-label\">\n                            Sem veículo\n                        </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            name=\"visita-veiculo\"\n                            checked={this.state.visita_com_veiculo}\n                            onChange={ ()=>this.change_state_vehicle_state(true)}>\n                        </input>\n                        <label\n                            className=\"form-check-label\">\n                            Com veículo\n                        </label>\n                    </div>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"veiculo_placa\">Placa</label>\n                        <input\n                            type=\"text\"\n                            id=\"veiculo_placa\"\n                            className=\"form-control\"\n                            placeholder=\"Digite a placa do veículo...\"\n                            value={this.state.placa}\n                            readOnly={!this.state.visita_com_veiculo}\n                            onBlur={this.search}\n                            onChange={e=>this.setState({placa: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: AAA-0000, AAA0000\n                        </small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                <div className=\"form-group col-6\">\n                        <label htmlFor=\"veiculo_modelo\">Modelo</label>\n                        <input\n                            type=\"text\"\n                            id=\"veiculo_modelo\"\n                            ref={this.veiculo_modelo}\n                            className=\"form-control\"\n                            placeholder=\"Digite o modelo do veículo...\"\n                            value={this.state.modelo}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({modelo: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Sedan, Hatch\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"veiculo_cor\">Cor</label>\n                        <input\n                            type=\"text\"\n                            id=\"veiculo_cor\"\n                            className=\"form-control\"\n                            placeholder=\"Digite a cor do veículo...\"\n                            value={this.state.cor}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({cor: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Branco, Preto\n                        </small>\n                    </div>\n                </div>\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-secondary float-left\"\n                            onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                            Voltar\n                        </button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-success float-right\"\n                            onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                            Avançar\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\n\nexport class AgentRegisterVisitorVisitanteVisita extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            objetivo: \"\",\n            data_inicio: \"\",\n            data_fim: \"\",\n            frequencia: \"Diário\",\n            pernoite: false,\n            horario_inicio: \"\",\n            horario_fim: \"\",\n        };\n\n        this.initial_data = {};\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null) {\n            this.setState({...initial_data});\n            console.log(initial_data);\n        }\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const visitante_visita = {\n            objetivo: this.state.objetivo,\n            data_inicio: this.state.data_inicio,\n            data_fim: this.state.data_fim,\n            frequencia: this.state.frequencia,\n            pernoite: this.state.pernoite,\n            horario_inicio: this.state.horario_inicio,\n            horario_fim: this.state.horario_fim,\n        }\n\n        this.props.onSave(visitante_visita);\n    };\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados da visita...</h1>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"data_inicio\">Data (Início)</label>\n                        <input\n                            type=\"date\" id=\"data_inicio\" className=\"form-control\" placeholder=\"Digite a data de início do evento...\"\n                            value={this.state.data_inicio} onChange={e=>this.setState({data_inicio: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 01/01/2011</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"data_fim\">Data (Término)</label>\n                        <input\n                            type=\"date\" id=\"data_fim\" className=\"form-control\" placeholder=\"Digite a data de término do evento...\"\n                            value={this.state.data_fim} onChange={e=>this.setState({data_fim: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 06/01/2011</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"horario_inicio\">Horário de Inicio</label>\n                        <input\n                            type=\"time\" id=\"\" ref={this.horario_inicio} className=\"form-control\" placeholder=\"Digite o horário de início da visita...\"\n                            value={this.state.horario_inicio} onChange={e=>this.setState({horario_inicio: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 13:30, 1:30 PM</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"horario_inicio\">Horário de Término</label>\n                        <input\n                            type=\"time\" id=\"\" ref={this.horario_fim} className=\"form-control\" placeholder=\"Digite o horário de termino da visita...\"\n                            value={this.state.horario_fim} onChange={e=>this.setState({horario_fim: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: 18:30, 6:30 PM</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"frequencia\">Frequência das visitas</label>\n                        <select\n                            id=\"frequencia\" className=\"form-control\"\n                            value={this.state.frequencia}\n                            onChange={e=>this.setState({frequencia: e.target.value})}>\n                            <option value={\"Diário\"}  key=\"1\">Diário</option>\n                            <option value={\"Semanal\"} key=\"2\">Semanal</option>\n                            <option value={\"Mensal\"}  key=\"3\">Mensal</option>\n                        </select>\n                        <small className=\"form-text text-muted\">Ex: Diário, Semanal</small>\n                    </div>\n\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"pernoite\">Pernoite</label>\n                        <select\n                            id=\"pernoite\" ref={this.pernoite} className=\"form-control\"\n                            value={this.state.pernoite} onChange={e=>this.setState({pernoite: e.target.value})}>\n                            <option value={false} key=\"1\">Não</option>\n                            <option value={true}  key=\"2\">Sim</option>\n                        </select>\n                        <small className=\"form-text text-muted\">Ex: Sim, Não</small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"objetivo\">Objetivo</label>\n                        <input\n                            type=\"textarea\" id=\"objetivo\" ref={this.objetivo} className=\"form-control\" placeholder=\"Digite o objetivo da visita...\"\n                            value={this.state.objetivo} onChange={e=>this.setState({objetivo: e.target.value})}>\n                            </input>\n                        <small className=\"form-text text-muted\">Ex: Rua Foo Bar, Número 00</small>\n                    </div>\n                </div>\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-secondary float-left\" onClick={()=>{ this.save_data(); this.props.onBack(); }}>Voltar</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-success float-right\" onClick={()=>{ this.save_data(); this.props.onNext(); }}>Finalizar</button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterVisitorEmpresa extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            nome: \"\",\n            // cep: \"\",\n            cnpj: \"\",\n            // telefone: \"\",\n\n            autonomo: true,\n\n            readonly: true,\n        };\n\n    }\n\n    search = ()=>{\n        let cnpj = this.state.cnpj.replace(/(\\.|-\\/)/g, \"\");\n\n        if (cnpj.length === 14){\n            make_request(\n                \"/visita_visitante/search\",\n                \"POST\",\n                JSON.stringify({cnpj: cnpj, what: \"CNPJ\"})\n            ).then( res =>{\n                return res.json();\n            }).then( data => {\n                if (Object.keys(data).length > 0) {\n                    this.setState({...data, readonly: true});\n                } else {\n                    this.setState({ readonly: false });\n                }\n            })\n            .catch( err => {\n                this.setState({...this.initial_data, readonly: false});\n            });\n\n        } else {\n            this.setState({...this.initial_data, readonly: false});\n        }\n    }\n\n    componentDidMount = () => {\n        const initial_data = this.props.onInitialValues();\n        if (initial_data != null) {\n            const autonomo = !(initial_data.cnpj &&\n                initial_data.cnpj.length > 0);\n            this.setState({...initial_data, autonomo: autonomo});\n        }\n    }\n\n    remove_mark_sings = (str) => {\n        return str.replace(/(\\.|\\/|-|\\/)/g, \"\");\n    }\n\n    save_data = () => {\n        const empresa = this.state.autonomo\n            ? null\n            : {\n                nome: this.state.nome,\n                cep: this.state.cep,\n                cnpj: this.remove_mark_sings(this.state.cnpj),\n                telefone: this.state.telefone,\n            };\n\n        this.props.onSave(empresa);\n    };\n\n    change_state_company_state = (value) => {\n        const ro = !value ? true: this.state.readonly;\n        this.setState({ autonomo: value, readonly: ro });\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Dados da empresa...</h1>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            name=\"visitante-autonomo\"\n                            checked={this.state.autonomo}\n                            onChange={ ()=>this.change_state_company_state(true)}/>\n                        <label\n                            className=\"form-check-label\">\n                            Autônomo\n                        </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            name=\"visitante-autonomo\"\n                            checked={!this.state.autonomo}\n                            onChange={ ()=>this.change_state_company_state(false)}>\n                        </input>\n                        <label\n                            className=\"form-check-label\">\n                            Contratado\n                        </label>\n                    </div>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-group col-6\">\n                        <label htmlFor=\"empresa_cnpj\">CNPJ</label>\n                        <input\n                            type=\"text\"\n                            id=\"empresa_cnpj\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o CNPJ da empresa\"\n                            value={this.state.cnpj}\n                            onBlur={this.search}\n                            readOnly={this.state.autonomo}\n                            onChange={e=>this.setState({cnpj: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 39.848.267/0001-79\n                        </small>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col\">\n                        <label htmlFor=\"empresa_nome\">Nome da Empresa</label>\n                        <input\n                            type=\"text\"\n                            id=\"empresa_nome\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o nome da empresa...\"\n                            value={this.state.nome}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({nome: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: Foo Bar SA\n                        </small>\n                    </div>\n\n                   {/*  <div className=\"form-group col-3\">\n                        <label htmlFor=\"cep\">CEP</label>\n                        <input\n                            type=\"text\"\n                            id=\"cep\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o CEP da empresa...\"\n                            value={this.state.cep}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({cep: e.target.value})}>\n                        </input>\n                        <small\n                            className=\"form-text text-muted\">\n                            Ex: 78000-000\n                        </small>\n                    </div>\n\n                    <div className=\"form-group col-3\">\n                        <label htmlFor=\"telefone\">Telefone</label>\n                        <input\n                            type=\"text\"\n                            id=\"telefone\"\n                            className=\"form-control\"\n                            placeholder=\"Digite o telefone da empresa...\"\n                            value={this.state.telefone}\n                            readOnly={this.state.readonly}\n                            onChange={e=>this.setState({telefone: e.target.value})}>\n                        </input>\n                        <small className=\"form-text text-muted\">Ex: (00) 0000-0000</small>\n                    </div> */}\n                </div>\n\n                <div className=\"row pt-3\">\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-secondary float-left\"\n                            onClick={()=>{ this.save_data(); this.props.onBack(); }}>\n                            Voltar\n                        </button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-success float-right\"\n                            onClick={()=>{ this.save_data(); this.props.onNext(); }}>\n                            Avançar\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"footer\"></div>\n\n            </div>\n        );\n    };\n};","import React, { Component } from \"react\";\nimport { AgentRegisterVisitorVisitante } from \"./agent_register_visitor_visitante\";\nimport { AgentRegisterVisitorVisitanteVeiculo } from \"./agent_register_visitor_visitante_veiculo\";\nimport { AgentRegisterVisitorVisitanteVisita } from \"./agent_register_visitor_visitante_visita\";\nimport { AgentRegisterVisitorEmpresa } from \"./agent_register_visitor_empresa\";\nimport { make_request } from \"./request\";\n\nexport class AgentRegisterVisitor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visitante: null,\n\n            veiculo_visitante: null,\n\n            empresa: null,\n\n            visita_visitante: null,\n\n            menu_progress: 1,\n\n            communication_status: \"\",\n        };\n\n        this.reset_state = {\n            visitante: null,\n\n            veiculo_visitante: null,\n\n            empresa: null,\n\n            visita_visitante: null,\n        };\n    }\n\n    send_to_server = () => {\n        const {menu_progress, communication_status, ...data} = this.state;\n\n        make_request(\n            \"/visita_visitante\",\n            \"POST\",\n            JSON.stringify(data)\n        ).then( res =>{\n            if (res.status === 200){\n                this.setState({ ...this.reset_state, communication_status: \"Dados enviados com sucesso!\"} );\n            } else {\n                this.setState({\n                    communication_status: \"Não foi possível cadastrar esses dados. Verifica que se todos os campos estão preenchidos corretamente.\"\n                });\n            }\n        }).catch( err => {\n            this.setState({\n                communication_status: \"Erro ao comunicar com o servidor. Verifique sua conexão com a rede.\"\n            });\n        });\n    };\n\n    delta_progress = (val) => this.setState((state, props) => {\n        return {menu_progress: state.menu_progress + val};\n    });\n\n\n    inc_progress = () => this.setState((state, props) => {\n        return this.delta_progress(+1);\n    });\n\n    dec_progress = () => this.setState((state, props) => {\n        return this.delta_progress(-1);\n    });\n\n    restart_menu = () => {\n        this.setState({menu_progress: 1});\n    }\n\n    render = () => {\n        switch(this.state.menu_progress){\n        case 1:\n            return (\n\n                <AgentRegisterVisitorVisitante\n                    onSave={ data => this.setState({visitante: data}) }\n                    onInitialValues={ () => this.state.visitante }\n                    backendAddr={this.props.backendAddr}\n                    onNext={ this.inc_progress }>\n                </AgentRegisterVisitorVisitante>);\n        case 2:\n            return (\n                <AgentRegisterVisitorVisitanteVeiculo\n                    onSave={ data => this.setState({veiculo_visitante: data}) }\n                    onInitialValues={ () => this.state.veiculo_visitante }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterVisitorVisitanteVeiculo>);\n        case 3:\n            return (\n                <AgentRegisterVisitorEmpresa\n                    onSave={ data => this.setState({empresa: data}) }\n                    onInitialValues={ () => this.state.empresa }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterVisitorEmpresa>\n            );\n        case 4:\n\n            return (\n                <AgentRegisterVisitorVisitanteVisita\n                    onSave={ data => this.setState({visita_visitante: data}) }\n                    onInitialValues={ () => this.state.visita_visitante }\n                    backendAddr={this.props.backendAddr}\n                    onBack={ this.dec_progress }\n                    onNext={ this.inc_progress }>\n                </AgentRegisterVisitorVisitanteVisita>\n            );\n        case 5:\n                {this.send_to_server()}\n                {this.inc_progress()}\n                case 6:\n                return(\n                    <div className=\"container\">\n                <h2>{this.state.communication_status}</h2>\n                <button className=\"btn btn-primary\" onClick={this.restart_menu}>Continuar</button>\n            </div>);\n        default:\n            {this.restart_menu()}\n        }\n    };\n};","import React, { Component } from \"react\";\nimport { AgentRegisterActions } from \"./agent_register_actions\";\nimport { AgentRegisterEmployee } from \"./agent_register_employee\";\nimport { AgentRegisterStudent } from \"./agent_register_student\";\nimport { AgentRegisterVisitor } from \"./agent_register_visitor\";\n\nexport class AgentRegisterRequest extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            current_action: \"\"\n        };\n    }\n\n    render_body = ()=>{\n\n        switch (this.state.current_action){\n            case \"student\":\n                return <AgentRegisterStudent\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterStudent>;\n            case \"employee\":\n                return <AgentRegisterEmployee\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterEmployee>;\n            case \"visitor\":\n                return <AgentRegisterVisitor\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterVisitor>;\n            default:\n                return <AgentRegisterStudent\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterStudent>;\n        }\n\n\n    }\n\n    render = ()=>{\n        return(\n            <div className=\"container \">\n                <div className=\"row justify-content-md-center\">\n                    <AgentRegisterActions\n                        student={()=>this.setState({current_action: \"student\"})}\n                        employee={()=>this.setState({current_action: \"employee\"})}\n                        visitor={()=>this.setState({current_action: \"visitor\"})}\n                    ></AgentRegisterActions>\n                </div>\n                <div className=\"container pt-5\">\n                    { this.render_body() }\n                </div>\n            </div>\n        )\n    }\n};","\n\n// -- imports\n// ---- core imports\n\n// ---- third imports\nimport React, { Component } from  \"react\";\nimport { DashboardNavbar } from \"./dashboard_navbar\";\nimport { AgentActions } from \"./agent_actions\"\nimport { AgentWaitingRequest } from \"./agent_waiting_request\"\nimport { AgentProcessedRequest } from \"./agent_processed_request\";\nimport { AgentRegisterRequest } from \"./agent_register_request\";\n\n// ---- user imports\n\n\nexport class AgentDashboard extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            user_info: this.props.userInfo,\n            current_action: \"waiting\",\n        }\n    }\n\n    body =  (current_action) => {\n        switch ( current_action ){\n            case \"waiting\":\n                return(<AgentWaitingRequest\n                    backendAddr={this.props.backendAddr}\n                ></AgentWaitingRequest>);\n            case \"processed\":\n                return(<AgentProcessedRequest\n                    backendAddr={this.props.backendAddr}\n                ></AgentProcessedRequest>);\n            case \"register\":\n                return(<AgentRegisterRequest\n                    backendAddr={this.props.backendAddr}\n                ></AgentRegisterRequest>);\n            default:\n                return(<AgentWaitingRequest\n                    backendAddr={this.props.backendAddr}\n                ></AgentWaitingRequest>);\n        }\n    }\n\n    render = () => {\n        return (\n            <div>\n                <DashboardNavbar\n                    onLogout={this.props.onLogout}>\n                </DashboardNavbar>\n                <div className=\"container pt-3 pb-3\">\n                    <div className=\"row justify-content-md-center\">\n                        <AgentActions\n                            waiting={()=>this.setState({current_action: \"waiting\"})}\n                            processed={()=>this.setState({current_action: \"processed\"})}\n                            register={()=>this.setState({current_action: \"register\"})}\n                        ></AgentActions>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    { this.body(this.state.current_action) }\n                </div>\n            </div>\n        );\n\n    };\n};","import React, { Component } from \"react\";\n\n\nexport class ManagerActions extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render = ()=>{\n        return(\n            <div\n                className=\"btn-group\"\n                role=\"group\"\n                aria-label=\"agent actions\"\n            >\n                <button\n                    type=\"button\"\n                    onClick={this.props.waiting}\n                    className=\"btn btn-primary\">\n                    Aguardando\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={this.props.processed}\n                    className=\"btn btn-primary\">\n                    Processados\n                </button>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\n\nimport { make_request } from \"./request\";\n\nimport { format_date } from \"./utility\";\n\nexport class RequestApprove extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            ...this.props.data,\n            message: \"\",\n        };\n    }\n\n    approve = () => {\n        make_request(\"/visita_process\", \"POST\", JSON.stringify({\n            tipo_requisicao: this.state.tipo_requisicao,\n            id: this.state.id,\n            status: \"approve\",\n        }))\n        .then(res=>{\n            if (res.status === 200)\n                this.props.backAction();\n            else\n                this.setState({\n                    ...this.state,\n                    message: \"Ocurreu um erro ao processar está requisição.\"\n                });\n        })\n    }\n\n    render = () => {\n        return (\n        <div className=\"container\">\n\n            <div className=\"form-group\">\n                Solicitação para visita de:\n                <label\n                    className=\"form-control\">\n                    {this.state.nome}\n                </label>\n            </div>\n            <div className=\"form-group\">\n                Na data:\n                <label\n                    className=\"form-control\">\n                    {format_date(this.state.data)}\n                </label>\n            </div>\n            <div className=\"form-group\">\n                Solicitado por:\n                <label\n                    className=\"form-control\">\n                    {this.state.requerente}\n                </label>\n            </div>\n            <div className=\"row justify-content-center\">\n                <h3 className=\"text-danger\">{this.state.message}</h3>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-secondary float-left\"\n                        onClick={ this.props.backAction }>\n                        Voltar\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-success float-right w-25\"\n                        onClick={ this.approve }>\n                        Aprovar\n                    </button>\n                </div>\n            </div>\n        </div>);\n    }\n}","import React, { Component } from \"react\";\n\nimport { make_request } from \"./request\";\n\nimport { format_date } from \"./utility\";\n\nexport class RequestReject extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            ...this.props.data,\n            message: \"\"\n        };\n    }\n\n    reject = () => {\n        make_request(\"/visita_process\", \"POST\", JSON.stringify({\n            tipo_requisicao: this.state.tipo_requisicao,\n            id: this.state.id,\n            status: \"reject\",\n        }))\n        .then(res=>{\n            if (res.status === 200)\n                this.props.backAction();\n            else\n                this.setState({\n                    ...this.state,\n                    message: \"Ocurreu um erro ao processar está requisição.\"\n                });\n        })\n    }\n    render = () => {\n        return (\n        <div className=\"container\">\n\n            <div className=\"form-group\">\n                Solicitação para visita de:\n                <label className=\"form-control\">{this.state.nome}</label>\n            </div>\n            <div className=\"form-group\">\n                Na data:\n                <label className=\"form-control\">{format_date(this.state.data)}</label>\n            </div>\n            <div className=\"form-group\">\n                Solicitado por:\n                <label className=\"form-control\">{this.state.requerente}</label>\n            </div>\n            <div className=\"row justify-content-center\">\n                <h3 className=\"text-danger\">{this.state.message}</h3>\n            </div>\n\n            <div className=\"row pt-3\">\n                <div className=\"col-6\">\n                    <button className=\"btn btn-secondary float-left\" onClick={ this.props.backAction }>Voltar</button>\n                </div>\n                <div className=\"col-6\">\n                    <button className=\"btn btn-danger float-right w-25\" onClick={ this.reject }>Rejeitar</button>\n                </div>\n            </div>\n        </div>);\n    }\n}","import React, { Component } from \"react\";\n\nimport { RequestDetail } from \"./request_detail\";\nimport { RequestApprove } from \"./request_approve\";\nimport { RequestReject } from \"./request_reject\";\nimport { make_request } from \"./request\";\n\nimport { format_date } from \"./utility\";\n\nexport class ManagerWaitingRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_action: \"list\",\n            request_id: null,\n            data: null,\n        };\n    }\n\n    search = ()=>{\n        make_request(\"/visita\", \"POST\", JSON.stringify({\n            what: \"STATUS_AGUARDANDO\",\n\n        }))\n        .then(res=>res.json())\n        .then(result => {\n            let data = {};\n            result.map( (row, ind) => data[ind] = row);\n\n            this.setState({data: data});\n        })\n        .catch(err => {\n            console.log(\"error\");\n        });\n    }\n\n    componentDidMount = ()=>{\n        this.search();\n    }\n\n    __onReject = (row) => {\n        this.setState({current_action: \"reject\", selected_row: row});\n    }\n\n    __onApprove = (row) => {\n        this.setState({current_action: \"approve\", selected_row: row});\n    }\n\n    __onDatail = (row) => {\n        this.setState({current_action: \"detail\", selected_row: row});\n    }\n\n    format_data = () => {\n        // console.log(\"Here\");\n        if (this.state.data == null)\n            return;\n\n        const table = Object.values(this.state.data).map((row, i) => {\n\n            return (\n            <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{row.tipo_requisicao}</td>\n                <td>{row.nome}</td>\n                <td>{ format_date(row.data) }</td>\n                <td>{row.requerente}</td>\n                <td>\n                    <button\n                        className=\"btn btn-info\"\n                        onClick={()=>{this.__onDatail(row)}}>\n                        Detalhes\n                    </button>\n                    <span className=\"pr-1\"></span>\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={()=>{this.__onReject(row)}}>\n                        Rejeitar\n                    </button>\n                    <span className=\"pr-1\"></span>\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={()=>{this.__onApprove(row)}}>\n                        Aprovar\n                    </button>\n                </td>\n            </tr>\n        )});\n\n        return table;\n    }\n\n    list = () => {\n        return (\n            <div className=\"row justify-content-center\">\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Tipo de Requisição</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Data</th>\n                            <th scope=\"col\">Requerente</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.format_data()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    action_handler = () => {\n        const backAction = ()=> { this.setState({current_action: \"list\"}); this.search() };\n        switch (this.state.current_action){\n            case \"list\":\n                return this.list();\n            case \"detail\":\n                return  <RequestDetail\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestDetail>;\n            case \"approve\":\n                return  <RequestApprove\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        ></RequestApprove>;\n\n            case \"reject\":\n                return <RequestReject\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        ></RequestReject>;\n\n            default:\n                return <div>Error</div>\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                { this.action_handler() }\n            <div className=\"footer\"></div>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\nimport { make_request } from \"./request\";\n\nimport { RequestDetail } from \"./request_detail\";\n\nimport { format_date } from \"./utility\";\n\n// TODO\n//      Criar as páginas de edição\n//                          remoção\n//                          detalhes\n// OBS\n//      Os dados devem ser retornados do DB com o id do evento\n\nexport class ManagerProcessedRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_action: \"list\",\n            request_id: null,\n            data: null,\n        };\n    }\n\n    search = ()=>{\n        make_request(\"/visita\", \"POST\", JSON.stringify({\n            what: \"STATUS_PROCESSADO\",\n        }))\n        .then(res=>res.json())\n        .then(result => {\n            let data = {};\n            result.map( (row, ind) => data[ind] = row);\n\n            this.setState({data: data});\n        })\n        .catch(err => {\n            console.log(\"error\");\n        });\n    }\n\n    componentDidMount = ()=>{\n        this.search();\n    }\n\n       __onDetail = (row) => {\n        this.setState({current_action: \"detail\", selected_row: row})\n    }\n\n    format_data = () => {\n        if (this.state.data == null)\n            return;\n\n        const table = Object.values(this.state.data).map((row, i) => {\n            return (\n                <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{row.tipo_requisicao}</td>\n                    <td>{row.nome}</td>\n                    <td>{format_date(row.data)}</td>\n                    <td>{row.status_de_aprovacao === 1 ? \"Aprovado\" : \"Não Aprovado\"}</td>\n                    <td>\n                        {/* <button className=\"btn btn-outline-primary\" onClick={() => { this.__onPDF(row) }}>Gerar PDF</button> */}\n                        <button className=\"btn btn-primary\" onClick={() => { this.__onDetail(row) }}>Detalhes</button>\n                        </td>\n                </tr>\n            )\n        });\n\n        return table;\n    }\n\n    list = () => {\n        return (\n            <div className=\"row justify-content-center\">\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Tipo de Requisição</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Data</th>\n                            <th scope=\"col\">Status de Aprovação</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.format_data()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    action_handler = () => {\n        const backAction = () => this.setState({current_action: \"list\"})\n        switch (this.state.current_action){\n            case \"list\":\n                return this.list();\n            case \"detail\":\n                return <RequestDetail\n                            backAction={backAction}\n                            data={this.state.selected_row}>\n                        </RequestDetail>;\n            default:\n                return <div>Error</div>\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"container\">\n                { this.action_handler() }\n                <div className=\"footer\"></div>\n            </div>\n        );\n    }\n};","\n\n// -- imports\n// ---- core imports\n\n// ---- third imports\nimport React, { Component } from  \"react\";\nimport { DashboardNavbar } from \"./dashboard_navbar\";\n\n\n// ---- user imports\nimport { ManagerActions } from \"./manager_actions\";\nimport { ManagerWaitingRequest } from \"./manager_waiting_request\";\nimport { ManagerProcessedRequest } from \"./manager_processed_request\";\n\n\nexport class ManagerDashboard extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            user_info: this.props.userInfo,\n            current_action: \"waiting\",\n        };\n    }\n\n    body =  (current_action) => {\n        switch ( current_action ){\n            case \"waiting\":\n                return(<ManagerWaitingRequest\n                    backendAddr={this.props.backendAddr}\n                ></ManagerWaitingRequest>);\n            case \"processed\":\n                return(<ManagerProcessedRequest\n                    backendAddr={this.props.backendAddr}\n                ></ManagerProcessedRequest>);\n            default:\n                return(<ManagerWaitingRequest\n                    backendAddr={this.props.backendAddr}\n                ></ManagerWaitingRequest>);\n        }\n    }\n\n    render = () => {\n        return (\n            <div>\n                <DashboardNavbar\n                    onLogout={this.props.onLogout}>\n                </DashboardNavbar>\n\n                <div className=\"container pt-3 pb-3\">\n                    <div className=\"row justify-content-md-center\">\n                        <ManagerActions\n                            waiting={()=>this.setState({current_action: \"waiting\"})}\n                            processed={()=>this.setState({current_action: \"processed\"})}\n                        ></ManagerActions>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    { this.body(this.state.current_action) }\n                </div>\n            </div>\n        );\n\n    };\n};","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Login } from \"./login\";\nimport { Register } from \"./register\";\nimport { AgentDashboard } from \"./agent_dashboard\";\nimport { ManagerDashboard } from \"./manager_dashboard\";\nimport { make_request } from \"./request\";\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            app_state: \"login_screen\",\n            backend_addr: \"http://localhost:3001\",\n            user_info: null,\n        };\n    }\n\n    componentDidMount = () => {\n        // this.setState({ app_state: \"agent_dashboard\"});\n        // return;\n\n        make_request(\n            \"/user_info\",\n            \"GET\"\n        ).then( res => {\n            if (res.status === 200){\n                res.json()\n                .then( data => {\n                    const app_state = { 0: \"agent_dashboard\", 1: \"manager_dashboard\" };\n                    this.setState({\n                        user_info: data,\n                        app_state: app_state[data.tipo],\n                    });\n                })\n                .catch( err =>{\n                    console.log(\"Error in parsing...\");\n                });\n            }\n        })\n        .catch( err => {\n            console.log(\"Error in request user info\");\n        });\n    }\n\n    render = () => {\n        const state = this.state.app_state;\n        if (state === \"login_screen\") {\n            return (<Login\n                onSuccess={ () => window.location.reload() }\n                onFail={() => { }}\n                onRegister={() => { this.setState({ app_state: \"register_screen\" }) }}\n                backendAddr={this.state.backend_addr}\n            />);\n        }\n\n        if (state === \"register_screen\") {\n            return (\n                <Register\n                    onBack={() => this.setState({ app_state: \"login_screen\" })}\n                    backendAddr={this.state.backend_addr}\n                />\n            );\n        }\n\n        if (state === \"agent_dashboard\") {\n            return (\n            <AgentDashboard\n                userInfo={this.state.user_info}\n                onLogout={()=>this.setState({app_state: \"login_screen\"})}\n                backendAddr={this.state.backend_addr}>\n            </AgentDashboard>\n            );\n        }\n\n        if (state === \"manager_dashboard\") {\n            return (\n            <ManagerDashboard\n                userInfo={this.state.user_info}\n                onLogout={()=>this.setState({app_state: \"login_screen\"})}\n                backendAddr={this.state.backend_addr}>\n            </ManagerDashboard>\n            );\n        }\n\n        return (<div></div>);\n    }\n};\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));"],"sourceRoot":""}